
stm32H755_CAN_CM4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000298  08100000  08100000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00004260  081002a0  081002a0  000012a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000380  08104500  08104500  00005500  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM          00000008  08104880  08104880  00005880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .init_array   00000004  08104888  08104888  00005888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .fini_array   00000004  0810488c  0810488c  0000588c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .data         000001d8  10000000  08104890  00006000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .bss          00000170  100001d8  08104a68  000061d8  2**2
                  ALLOC
  8 ._user_heap_stack 00000600  10000348  08104a68  00006348  2**0
                  ALLOC
  9 .ARM.attributes 00000030  00000000  00000000  000061d8  2**0
                  CONTENTS, READONLY
 10 .debug_info   000086ed  00000000  00000000  00006208  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev 000017ef  00000000  00000000  0000e8f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges 000007d0  00000000  00000000  000100e8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_rnglists 000005b6  00000000  00000000  000108b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_macro  0003944b  00000000  00000000  00010e6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line   000087bf  00000000  00000000  0004a2b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str    00179b6a  00000000  00000000  00052a78  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .comment      00000043  00000000  00000000  001cc5e2  2**0
                  CONTENTS, READONLY
 18 .debug_frame  00002db4  00000000  00000000  001cc628  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line_str 0000006d  00000000  00000000  001cf3dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

081002a0 <__do_global_dtors_aux>:
 81002a0:	b510      	push	{r4, lr}
 81002a2:	4c05      	ldr	r4, [pc, #20]	@ (81002b8 <__do_global_dtors_aux+0x18>)
 81002a4:	7823      	ldrb	r3, [r4, #0]
 81002a6:	b933      	cbnz	r3, 81002b6 <__do_global_dtors_aux+0x16>
 81002a8:	4b04      	ldr	r3, [pc, #16]	@ (81002bc <__do_global_dtors_aux+0x1c>)
 81002aa:	b113      	cbz	r3, 81002b2 <__do_global_dtors_aux+0x12>
 81002ac:	4804      	ldr	r0, [pc, #16]	@ (81002c0 <__do_global_dtors_aux+0x20>)
 81002ae:	f3af 8000 	nop.w
 81002b2:	2301      	movs	r3, #1
 81002b4:	7023      	strb	r3, [r4, #0]
 81002b6:	bd10      	pop	{r4, pc}
 81002b8:	100001d8 	.word	0x100001d8
 81002bc:	00000000 	.word	0x00000000
 81002c0:	081044e8 	.word	0x081044e8

081002c4 <frame_dummy>:
 81002c4:	b508      	push	{r3, lr}
 81002c6:	4b03      	ldr	r3, [pc, #12]	@ (81002d4 <frame_dummy+0x10>)
 81002c8:	b11b      	cbz	r3, 81002d2 <frame_dummy+0xe>
 81002ca:	4903      	ldr	r1, [pc, #12]	@ (81002d8 <frame_dummy+0x14>)
 81002cc:	4803      	ldr	r0, [pc, #12]	@ (81002dc <frame_dummy+0x18>)
 81002ce:	f3af 8000 	nop.w
 81002d2:	bd08      	pop	{r3, pc}
 81002d4:	00000000 	.word	0x00000000
 81002d8:	100001dc 	.word	0x100001dc
 81002dc:	081044e8 	.word	0x081044e8

081002e0 <memchr>:
 81002e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 81002e4:	2a10      	cmp	r2, #16
 81002e6:	db2b      	blt.n	8100340 <memchr+0x60>
 81002e8:	f010 0f07 	tst.w	r0, #7
 81002ec:	d008      	beq.n	8100300 <memchr+0x20>
 81002ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 81002f2:	3a01      	subs	r2, #1
 81002f4:	428b      	cmp	r3, r1
 81002f6:	d02d      	beq.n	8100354 <memchr+0x74>
 81002f8:	f010 0f07 	tst.w	r0, #7
 81002fc:	b342      	cbz	r2, 8100350 <memchr+0x70>
 81002fe:	d1f6      	bne.n	81002ee <memchr+0xe>
 8100300:	b4f0      	push	{r4, r5, r6, r7}
 8100302:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8100306:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 810030a:	f022 0407 	bic.w	r4, r2, #7
 810030e:	f07f 0700 	mvns.w	r7, #0
 8100312:	2300      	movs	r3, #0
 8100314:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8100318:	3c08      	subs	r4, #8
 810031a:	ea85 0501 	eor.w	r5, r5, r1
 810031e:	ea86 0601 	eor.w	r6, r6, r1
 8100322:	fa85 f547 	uadd8	r5, r5, r7
 8100326:	faa3 f587 	sel	r5, r3, r7
 810032a:	fa86 f647 	uadd8	r6, r6, r7
 810032e:	faa5 f687 	sel	r6, r5, r7
 8100332:	b98e      	cbnz	r6, 8100358 <memchr+0x78>
 8100334:	d1ee      	bne.n	8100314 <memchr+0x34>
 8100336:	bcf0      	pop	{r4, r5, r6, r7}
 8100338:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 810033c:	f002 0207 	and.w	r2, r2, #7
 8100340:	b132      	cbz	r2, 8100350 <memchr+0x70>
 8100342:	f810 3b01 	ldrb.w	r3, [r0], #1
 8100346:	3a01      	subs	r2, #1
 8100348:	ea83 0301 	eor.w	r3, r3, r1
 810034c:	b113      	cbz	r3, 8100354 <memchr+0x74>
 810034e:	d1f8      	bne.n	8100342 <memchr+0x62>
 8100350:	2000      	movs	r0, #0
 8100352:	4770      	bx	lr
 8100354:	3801      	subs	r0, #1
 8100356:	4770      	bx	lr
 8100358:	2d00      	cmp	r5, #0
 810035a:	bf06      	itte	eq
 810035c:	4635      	moveq	r5, r6
 810035e:	3803      	subeq	r0, #3
 8100360:	3807      	subne	r0, #7
 8100362:	f015 0f01 	tst.w	r5, #1
 8100366:	d107      	bne.n	8100378 <memchr+0x98>
 8100368:	3001      	adds	r0, #1
 810036a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 810036e:	bf02      	ittt	eq
 8100370:	3001      	addeq	r0, #1
 8100372:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8100376:	3001      	addeq	r0, #1
 8100378:	bcf0      	pop	{r4, r5, r6, r7}
 810037a:	3801      	subs	r0, #1
 810037c:	4770      	bx	lr
 810037e:	bf00      	nop

08100380 <strlen>:
 8100380:	4603      	mov	r3, r0
 8100382:	f813 2b01 	ldrb.w	r2, [r3], #1
 8100386:	2a00      	cmp	r2, #0
 8100388:	d1fb      	bne.n	8100382 <strlen+0x2>
 810038a:	1a18      	subs	r0, r3, r0
 810038c:	3801      	subs	r0, #1
 810038e:	4770      	bx	lr

08100390 <__aeabi_drsub>:
 8100390:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 8100394:	e002      	b.n	810039c <__adddf3>
 8100396:	bf00      	nop

08100398 <__aeabi_dsub>:
 8100398:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

0810039c <__adddf3>:
 810039c:	b530      	push	{r4, r5, lr}
 810039e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 81003a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 81003a6:	ea94 0f05 	teq	r4, r5
 81003aa:	bf08      	it	eq
 81003ac:	ea90 0f02 	teqeq	r0, r2
 81003b0:	bf1f      	itttt	ne
 81003b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 81003b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 81003ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 81003be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 81003c2:	f000 80e2 	beq.w	810058a <__adddf3+0x1ee>
 81003c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 81003ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 81003ce:	bfb8      	it	lt
 81003d0:	426d      	neglt	r5, r5
 81003d2:	dd0c      	ble.n	81003ee <__adddf3+0x52>
 81003d4:	442c      	add	r4, r5
 81003d6:	ea80 0202 	eor.w	r2, r0, r2
 81003da:	ea81 0303 	eor.w	r3, r1, r3
 81003de:	ea82 0000 	eor.w	r0, r2, r0
 81003e2:	ea83 0101 	eor.w	r1, r3, r1
 81003e6:	ea80 0202 	eor.w	r2, r0, r2
 81003ea:	ea81 0303 	eor.w	r3, r1, r3
 81003ee:	2d36      	cmp	r5, #54	@ 0x36
 81003f0:	bf88      	it	hi
 81003f2:	bd30      	pophi	{r4, r5, pc}
 81003f4:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 81003f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 81003fc:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8100400:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8100404:	d002      	beq.n	810040c <__adddf3+0x70>
 8100406:	4240      	negs	r0, r0
 8100408:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 810040c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8100410:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100414:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8100418:	d002      	beq.n	8100420 <__adddf3+0x84>
 810041a:	4252      	negs	r2, r2
 810041c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8100420:	ea94 0f05 	teq	r4, r5
 8100424:	f000 80a7 	beq.w	8100576 <__adddf3+0x1da>
 8100428:	f1a4 0401 	sub.w	r4, r4, #1
 810042c:	f1d5 0e20 	rsbs	lr, r5, #32
 8100430:	db0d      	blt.n	810044e <__adddf3+0xb2>
 8100432:	fa02 fc0e 	lsl.w	ip, r2, lr
 8100436:	fa22 f205 	lsr.w	r2, r2, r5
 810043a:	1880      	adds	r0, r0, r2
 810043c:	f141 0100 	adc.w	r1, r1, #0
 8100440:	fa03 f20e 	lsl.w	r2, r3, lr
 8100444:	1880      	adds	r0, r0, r2
 8100446:	fa43 f305 	asr.w	r3, r3, r5
 810044a:	4159      	adcs	r1, r3
 810044c:	e00e      	b.n	810046c <__adddf3+0xd0>
 810044e:	f1a5 0520 	sub.w	r5, r5, #32
 8100452:	f10e 0e20 	add.w	lr, lr, #32
 8100456:	2a01      	cmp	r2, #1
 8100458:	fa03 fc0e 	lsl.w	ip, r3, lr
 810045c:	bf28      	it	cs
 810045e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8100462:	fa43 f305 	asr.w	r3, r3, r5
 8100466:	18c0      	adds	r0, r0, r3
 8100468:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 810046c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8100470:	d507      	bpl.n	8100482 <__adddf3+0xe6>
 8100472:	f04f 0e00 	mov.w	lr, #0
 8100476:	f1dc 0c00 	rsbs	ip, ip, #0
 810047a:	eb7e 0000 	sbcs.w	r0, lr, r0
 810047e:	eb6e 0101 	sbc.w	r1, lr, r1
 8100482:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 8100486:	d31b      	bcc.n	81004c0 <__adddf3+0x124>
 8100488:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 810048c:	d30c      	bcc.n	81004a8 <__adddf3+0x10c>
 810048e:	0849      	lsrs	r1, r1, #1
 8100490:	ea5f 0030 	movs.w	r0, r0, rrx
 8100494:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8100498:	f104 0401 	add.w	r4, r4, #1
 810049c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 81004a0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 81004a4:	f080 809a 	bcs.w	81005dc <__adddf3+0x240>
 81004a8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 81004ac:	bf08      	it	eq
 81004ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 81004b2:	f150 0000 	adcs.w	r0, r0, #0
 81004b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81004ba:	ea41 0105 	orr.w	r1, r1, r5
 81004be:	bd30      	pop	{r4, r5, pc}
 81004c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 81004c4:	4140      	adcs	r0, r0
 81004c6:	eb41 0101 	adc.w	r1, r1, r1
 81004ca:	3c01      	subs	r4, #1
 81004cc:	bf28      	it	cs
 81004ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 81004d2:	d2e9      	bcs.n	81004a8 <__adddf3+0x10c>
 81004d4:	f091 0f00 	teq	r1, #0
 81004d8:	bf04      	itt	eq
 81004da:	4601      	moveq	r1, r0
 81004dc:	2000      	moveq	r0, #0
 81004de:	fab1 f381 	clz	r3, r1
 81004e2:	bf08      	it	eq
 81004e4:	3320      	addeq	r3, #32
 81004e6:	f1a3 030b 	sub.w	r3, r3, #11
 81004ea:	f1b3 0220 	subs.w	r2, r3, #32
 81004ee:	da0c      	bge.n	810050a <__adddf3+0x16e>
 81004f0:	320c      	adds	r2, #12
 81004f2:	dd08      	ble.n	8100506 <__adddf3+0x16a>
 81004f4:	f102 0c14 	add.w	ip, r2, #20
 81004f8:	f1c2 020c 	rsb	r2, r2, #12
 81004fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8100500:	fa21 f102 	lsr.w	r1, r1, r2
 8100504:	e00c      	b.n	8100520 <__adddf3+0x184>
 8100506:	f102 0214 	add.w	r2, r2, #20
 810050a:	bfd8      	it	le
 810050c:	f1c2 0c20 	rsble	ip, r2, #32
 8100510:	fa01 f102 	lsl.w	r1, r1, r2
 8100514:	fa20 fc0c 	lsr.w	ip, r0, ip
 8100518:	bfdc      	itt	le
 810051a:	ea41 010c 	orrle.w	r1, r1, ip
 810051e:	4090      	lslle	r0, r2
 8100520:	1ae4      	subs	r4, r4, r3
 8100522:	bfa2      	ittt	ge
 8100524:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8100528:	4329      	orrge	r1, r5
 810052a:	bd30      	popge	{r4, r5, pc}
 810052c:	ea6f 0404 	mvn.w	r4, r4
 8100530:	3c1f      	subs	r4, #31
 8100532:	da1c      	bge.n	810056e <__adddf3+0x1d2>
 8100534:	340c      	adds	r4, #12
 8100536:	dc0e      	bgt.n	8100556 <__adddf3+0x1ba>
 8100538:	f104 0414 	add.w	r4, r4, #20
 810053c:	f1c4 0220 	rsb	r2, r4, #32
 8100540:	fa20 f004 	lsr.w	r0, r0, r4
 8100544:	fa01 f302 	lsl.w	r3, r1, r2
 8100548:	ea40 0003 	orr.w	r0, r0, r3
 810054c:	fa21 f304 	lsr.w	r3, r1, r4
 8100550:	ea45 0103 	orr.w	r1, r5, r3
 8100554:	bd30      	pop	{r4, r5, pc}
 8100556:	f1c4 040c 	rsb	r4, r4, #12
 810055a:	f1c4 0220 	rsb	r2, r4, #32
 810055e:	fa20 f002 	lsr.w	r0, r0, r2
 8100562:	fa01 f304 	lsl.w	r3, r1, r4
 8100566:	ea40 0003 	orr.w	r0, r0, r3
 810056a:	4629      	mov	r1, r5
 810056c:	bd30      	pop	{r4, r5, pc}
 810056e:	fa21 f004 	lsr.w	r0, r1, r4
 8100572:	4629      	mov	r1, r5
 8100574:	bd30      	pop	{r4, r5, pc}
 8100576:	f094 0f00 	teq	r4, #0
 810057a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 810057e:	bf06      	itte	eq
 8100580:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 8100584:	3401      	addeq	r4, #1
 8100586:	3d01      	subne	r5, #1
 8100588:	e74e      	b.n	8100428 <__adddf3+0x8c>
 810058a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 810058e:	bf18      	it	ne
 8100590:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8100594:	d029      	beq.n	81005ea <__adddf3+0x24e>
 8100596:	ea94 0f05 	teq	r4, r5
 810059a:	bf08      	it	eq
 810059c:	ea90 0f02 	teqeq	r0, r2
 81005a0:	d005      	beq.n	81005ae <__adddf3+0x212>
 81005a2:	ea54 0c00 	orrs.w	ip, r4, r0
 81005a6:	bf04      	itt	eq
 81005a8:	4619      	moveq	r1, r3
 81005aa:	4610      	moveq	r0, r2
 81005ac:	bd30      	pop	{r4, r5, pc}
 81005ae:	ea91 0f03 	teq	r1, r3
 81005b2:	bf1e      	ittt	ne
 81005b4:	2100      	movne	r1, #0
 81005b6:	2000      	movne	r0, #0
 81005b8:	bd30      	popne	{r4, r5, pc}
 81005ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 81005be:	d105      	bne.n	81005cc <__adddf3+0x230>
 81005c0:	0040      	lsls	r0, r0, #1
 81005c2:	4149      	adcs	r1, r1
 81005c4:	bf28      	it	cs
 81005c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 81005ca:	bd30      	pop	{r4, r5, pc}
 81005cc:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 81005d0:	bf3c      	itt	cc
 81005d2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 81005d6:	bd30      	popcc	{r4, r5, pc}
 81005d8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 81005dc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 81005e0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 81005e4:	f04f 0000 	mov.w	r0, #0
 81005e8:	bd30      	pop	{r4, r5, pc}
 81005ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 81005ee:	bf1a      	itte	ne
 81005f0:	4619      	movne	r1, r3
 81005f2:	4610      	movne	r0, r2
 81005f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 81005f8:	bf1c      	itt	ne
 81005fa:	460b      	movne	r3, r1
 81005fc:	4602      	movne	r2, r0
 81005fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100602:	bf06      	itte	eq
 8100604:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8100608:	ea91 0f03 	teqeq	r1, r3
 810060c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8100610:	bd30      	pop	{r4, r5, pc}
 8100612:	bf00      	nop

08100614 <__aeabi_ui2d>:
 8100614:	f090 0f00 	teq	r0, #0
 8100618:	bf04      	itt	eq
 810061a:	2100      	moveq	r1, #0
 810061c:	4770      	bxeq	lr
 810061e:	b530      	push	{r4, r5, lr}
 8100620:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8100624:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8100628:	f04f 0500 	mov.w	r5, #0
 810062c:	f04f 0100 	mov.w	r1, #0
 8100630:	e750      	b.n	81004d4 <__adddf3+0x138>
 8100632:	bf00      	nop

08100634 <__aeabi_i2d>:
 8100634:	f090 0f00 	teq	r0, #0
 8100638:	bf04      	itt	eq
 810063a:	2100      	moveq	r1, #0
 810063c:	4770      	bxeq	lr
 810063e:	b530      	push	{r4, r5, lr}
 8100640:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8100644:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8100648:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 810064c:	bf48      	it	mi
 810064e:	4240      	negmi	r0, r0
 8100650:	f04f 0100 	mov.w	r1, #0
 8100654:	e73e      	b.n	81004d4 <__adddf3+0x138>
 8100656:	bf00      	nop

08100658 <__aeabi_f2d>:
 8100658:	0042      	lsls	r2, r0, #1
 810065a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 810065e:	ea4f 0131 	mov.w	r1, r1, rrx
 8100662:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8100666:	bf1f      	itttt	ne
 8100668:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 810066c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8100670:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8100674:	4770      	bxne	lr
 8100676:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 810067a:	bf08      	it	eq
 810067c:	4770      	bxeq	lr
 810067e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 8100682:	bf04      	itt	eq
 8100684:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8100688:	4770      	bxeq	lr
 810068a:	b530      	push	{r4, r5, lr}
 810068c:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8100690:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8100694:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8100698:	e71c      	b.n	81004d4 <__adddf3+0x138>
 810069a:	bf00      	nop

0810069c <__aeabi_ul2d>:
 810069c:	ea50 0201 	orrs.w	r2, r0, r1
 81006a0:	bf08      	it	eq
 81006a2:	4770      	bxeq	lr
 81006a4:	b530      	push	{r4, r5, lr}
 81006a6:	f04f 0500 	mov.w	r5, #0
 81006aa:	e00a      	b.n	81006c2 <__aeabi_l2d+0x16>

081006ac <__aeabi_l2d>:
 81006ac:	ea50 0201 	orrs.w	r2, r0, r1
 81006b0:	bf08      	it	eq
 81006b2:	4770      	bxeq	lr
 81006b4:	b530      	push	{r4, r5, lr}
 81006b6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 81006ba:	d502      	bpl.n	81006c2 <__aeabi_l2d+0x16>
 81006bc:	4240      	negs	r0, r0
 81006be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 81006c2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 81006c6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 81006ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 81006ce:	f43f aed8 	beq.w	8100482 <__adddf3+0xe6>
 81006d2:	f04f 0203 	mov.w	r2, #3
 81006d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006da:	bf18      	it	ne
 81006dc:	3203      	addne	r2, #3
 81006de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 81006e2:	bf18      	it	ne
 81006e4:	3203      	addne	r2, #3
 81006e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 81006ea:	f1c2 0320 	rsb	r3, r2, #32
 81006ee:	fa00 fc03 	lsl.w	ip, r0, r3
 81006f2:	fa20 f002 	lsr.w	r0, r0, r2
 81006f6:	fa01 fe03 	lsl.w	lr, r1, r3
 81006fa:	ea40 000e 	orr.w	r0, r0, lr
 81006fe:	fa21 f102 	lsr.w	r1, r1, r2
 8100702:	4414      	add	r4, r2
 8100704:	e6bd      	b.n	8100482 <__adddf3+0xe6>
 8100706:	bf00      	nop

08100708 <__aeabi_dmul>:
 8100708:	b570      	push	{r4, r5, r6, lr}
 810070a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 810070e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8100712:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8100716:	bf1d      	ittte	ne
 8100718:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 810071c:	ea94 0f0c 	teqne	r4, ip
 8100720:	ea95 0f0c 	teqne	r5, ip
 8100724:	f000 f8de 	bleq	81008e4 <__aeabi_dmul+0x1dc>
 8100728:	442c      	add	r4, r5
 810072a:	ea81 0603 	eor.w	r6, r1, r3
 810072e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8100732:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8100736:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 810073a:	bf18      	it	ne
 810073c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8100740:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8100744:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8100748:	d038      	beq.n	81007bc <__aeabi_dmul+0xb4>
 810074a:	fba0 ce02 	umull	ip, lr, r0, r2
 810074e:	f04f 0500 	mov.w	r5, #0
 8100752:	fbe1 e502 	umlal	lr, r5, r1, r2
 8100756:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 810075a:	fbe0 e503 	umlal	lr, r5, r0, r3
 810075e:	f04f 0600 	mov.w	r6, #0
 8100762:	fbe1 5603 	umlal	r5, r6, r1, r3
 8100766:	f09c 0f00 	teq	ip, #0
 810076a:	bf18      	it	ne
 810076c:	f04e 0e01 	orrne.w	lr, lr, #1
 8100770:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8100774:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8100778:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 810077c:	d204      	bcs.n	8100788 <__aeabi_dmul+0x80>
 810077e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8100782:	416d      	adcs	r5, r5
 8100784:	eb46 0606 	adc.w	r6, r6, r6
 8100788:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 810078c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8100790:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8100794:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8100798:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 810079c:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 81007a0:	bf88      	it	hi
 81007a2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 81007a6:	d81e      	bhi.n	81007e6 <__aeabi_dmul+0xde>
 81007a8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 81007ac:	bf08      	it	eq
 81007ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 81007b2:	f150 0000 	adcs.w	r0, r0, #0
 81007b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 81007ba:	bd70      	pop	{r4, r5, r6, pc}
 81007bc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 81007c0:	ea46 0101 	orr.w	r1, r6, r1
 81007c4:	ea40 0002 	orr.w	r0, r0, r2
 81007c8:	ea81 0103 	eor.w	r1, r1, r3
 81007cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 81007d0:	bfc2      	ittt	gt
 81007d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 81007d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 81007da:	bd70      	popgt	{r4, r5, r6, pc}
 81007dc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 81007e0:	f04f 0e00 	mov.w	lr, #0
 81007e4:	3c01      	subs	r4, #1
 81007e6:	f300 80ab 	bgt.w	8100940 <__aeabi_dmul+0x238>
 81007ea:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 81007ee:	bfde      	ittt	le
 81007f0:	2000      	movle	r0, #0
 81007f2:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 81007f6:	bd70      	pople	{r4, r5, r6, pc}
 81007f8:	f1c4 0400 	rsb	r4, r4, #0
 81007fc:	3c20      	subs	r4, #32
 81007fe:	da35      	bge.n	810086c <__aeabi_dmul+0x164>
 8100800:	340c      	adds	r4, #12
 8100802:	dc1b      	bgt.n	810083c <__aeabi_dmul+0x134>
 8100804:	f104 0414 	add.w	r4, r4, #20
 8100808:	f1c4 0520 	rsb	r5, r4, #32
 810080c:	fa00 f305 	lsl.w	r3, r0, r5
 8100810:	fa20 f004 	lsr.w	r0, r0, r4
 8100814:	fa01 f205 	lsl.w	r2, r1, r5
 8100818:	ea40 0002 	orr.w	r0, r0, r2
 810081c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8100820:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8100824:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8100828:	fa21 f604 	lsr.w	r6, r1, r4
 810082c:	eb42 0106 	adc.w	r1, r2, r6
 8100830:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100834:	bf08      	it	eq
 8100836:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810083a:	bd70      	pop	{r4, r5, r6, pc}
 810083c:	f1c4 040c 	rsb	r4, r4, #12
 8100840:	f1c4 0520 	rsb	r5, r4, #32
 8100844:	fa00 f304 	lsl.w	r3, r0, r4
 8100848:	fa20 f005 	lsr.w	r0, r0, r5
 810084c:	fa01 f204 	lsl.w	r2, r1, r4
 8100850:	ea40 0002 	orr.w	r0, r0, r2
 8100854:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100858:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 810085c:	f141 0100 	adc.w	r1, r1, #0
 8100860:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8100864:	bf08      	it	eq
 8100866:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 810086a:	bd70      	pop	{r4, r5, r6, pc}
 810086c:	f1c4 0520 	rsb	r5, r4, #32
 8100870:	fa00 f205 	lsl.w	r2, r0, r5
 8100874:	ea4e 0e02 	orr.w	lr, lr, r2
 8100878:	fa20 f304 	lsr.w	r3, r0, r4
 810087c:	fa01 f205 	lsl.w	r2, r1, r5
 8100880:	ea43 0302 	orr.w	r3, r3, r2
 8100884:	fa21 f004 	lsr.w	r0, r1, r4
 8100888:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 810088c:	fa21 f204 	lsr.w	r2, r1, r4
 8100890:	ea20 0002 	bic.w	r0, r0, r2
 8100894:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8100898:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 810089c:	bf08      	it	eq
 810089e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 81008a2:	bd70      	pop	{r4, r5, r6, pc}
 81008a4:	f094 0f00 	teq	r4, #0
 81008a8:	d10f      	bne.n	81008ca <__aeabi_dmul+0x1c2>
 81008aa:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 81008ae:	0040      	lsls	r0, r0, #1
 81008b0:	eb41 0101 	adc.w	r1, r1, r1
 81008b4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 81008b8:	bf08      	it	eq
 81008ba:	3c01      	subeq	r4, #1
 81008bc:	d0f7      	beq.n	81008ae <__aeabi_dmul+0x1a6>
 81008be:	ea41 0106 	orr.w	r1, r1, r6
 81008c2:	f095 0f00 	teq	r5, #0
 81008c6:	bf18      	it	ne
 81008c8:	4770      	bxne	lr
 81008ca:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 81008ce:	0052      	lsls	r2, r2, #1
 81008d0:	eb43 0303 	adc.w	r3, r3, r3
 81008d4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 81008d8:	bf08      	it	eq
 81008da:	3d01      	subeq	r5, #1
 81008dc:	d0f7      	beq.n	81008ce <__aeabi_dmul+0x1c6>
 81008de:	ea43 0306 	orr.w	r3, r3, r6
 81008e2:	4770      	bx	lr
 81008e4:	ea94 0f0c 	teq	r4, ip
 81008e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 81008ec:	bf18      	it	ne
 81008ee:	ea95 0f0c 	teqne	r5, ip
 81008f2:	d00c      	beq.n	810090e <__aeabi_dmul+0x206>
 81008f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 81008f8:	bf18      	it	ne
 81008fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 81008fe:	d1d1      	bne.n	81008a4 <__aeabi_dmul+0x19c>
 8100900:	ea81 0103 	eor.w	r1, r1, r3
 8100904:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100908:	f04f 0000 	mov.w	r0, #0
 810090c:	bd70      	pop	{r4, r5, r6, pc}
 810090e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100912:	bf06      	itte	eq
 8100914:	4610      	moveq	r0, r2
 8100916:	4619      	moveq	r1, r3
 8100918:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 810091c:	d019      	beq.n	8100952 <__aeabi_dmul+0x24a>
 810091e:	ea94 0f0c 	teq	r4, ip
 8100922:	d102      	bne.n	810092a <__aeabi_dmul+0x222>
 8100924:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8100928:	d113      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810092a:	ea95 0f0c 	teq	r5, ip
 810092e:	d105      	bne.n	810093c <__aeabi_dmul+0x234>
 8100930:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8100934:	bf1c      	itt	ne
 8100936:	4610      	movne	r0, r2
 8100938:	4619      	movne	r1, r3
 810093a:	d10a      	bne.n	8100952 <__aeabi_dmul+0x24a>
 810093c:	ea81 0103 	eor.w	r1, r1, r3
 8100940:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8100944:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8100948:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 810094c:	f04f 0000 	mov.w	r0, #0
 8100950:	bd70      	pop	{r4, r5, r6, pc}
 8100952:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8100956:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 810095a:	bd70      	pop	{r4, r5, r6, pc}

0810095c <__aeabi_ddiv>:
 810095c:	b570      	push	{r4, r5, r6, lr}
 810095e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8100962:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8100966:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 810096a:	bf1d      	ittte	ne
 810096c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8100970:	ea94 0f0c 	teqne	r4, ip
 8100974:	ea95 0f0c 	teqne	r5, ip
 8100978:	f000 f8a7 	bleq	8100aca <__aeabi_ddiv+0x16e>
 810097c:	eba4 0405 	sub.w	r4, r4, r5
 8100980:	ea81 0e03 	eor.w	lr, r1, r3
 8100984:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100988:	ea4f 3101 	mov.w	r1, r1, lsl #12
 810098c:	f000 8088 	beq.w	8100aa0 <__aeabi_ddiv+0x144>
 8100990:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8100994:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8100998:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 810099c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 81009a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 81009a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 81009a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 81009ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 81009b0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 81009b4:	429d      	cmp	r5, r3
 81009b6:	bf08      	it	eq
 81009b8:	4296      	cmpeq	r6, r2
 81009ba:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 81009be:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 81009c2:	d202      	bcs.n	81009ca <__aeabi_ddiv+0x6e>
 81009c4:	085b      	lsrs	r3, r3, #1
 81009c6:	ea4f 0232 	mov.w	r2, r2, rrx
 81009ca:	1ab6      	subs	r6, r6, r2
 81009cc:	eb65 0503 	sbc.w	r5, r5, r3
 81009d0:	085b      	lsrs	r3, r3, #1
 81009d2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009d6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 81009da:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 81009de:	ebb6 0e02 	subs.w	lr, r6, r2
 81009e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009e6:	bf22      	ittt	cs
 81009e8:	1ab6      	subcs	r6, r6, r2
 81009ea:	4675      	movcs	r5, lr
 81009ec:	ea40 000c 	orrcs.w	r0, r0, ip
 81009f0:	085b      	lsrs	r3, r3, #1
 81009f2:	ea4f 0232 	mov.w	r2, r2, rrx
 81009f6:	ebb6 0e02 	subs.w	lr, r6, r2
 81009fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 81009fe:	bf22      	ittt	cs
 8100a00:	1ab6      	subcs	r6, r6, r2
 8100a02:	4675      	movcs	r5, lr
 8100a04:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8100a08:	085b      	lsrs	r3, r3, #1
 8100a0a:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a0e:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a12:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a16:	bf22      	ittt	cs
 8100a18:	1ab6      	subcs	r6, r6, r2
 8100a1a:	4675      	movcs	r5, lr
 8100a1c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8100a20:	085b      	lsrs	r3, r3, #1
 8100a22:	ea4f 0232 	mov.w	r2, r2, rrx
 8100a26:	ebb6 0e02 	subs.w	lr, r6, r2
 8100a2a:	eb75 0e03 	sbcs.w	lr, r5, r3
 8100a2e:	bf22      	ittt	cs
 8100a30:	1ab6      	subcs	r6, r6, r2
 8100a32:	4675      	movcs	r5, lr
 8100a34:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8100a38:	ea55 0e06 	orrs.w	lr, r5, r6
 8100a3c:	d018      	beq.n	8100a70 <__aeabi_ddiv+0x114>
 8100a3e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8100a42:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8100a46:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8100a4a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8100a4e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8100a52:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8100a56:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8100a5a:	d1c0      	bne.n	81009de <__aeabi_ddiv+0x82>
 8100a5c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8100a60:	d10b      	bne.n	8100a7a <__aeabi_ddiv+0x11e>
 8100a62:	ea41 0100 	orr.w	r1, r1, r0
 8100a66:	f04f 0000 	mov.w	r0, #0
 8100a6a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 8100a6e:	e7b6      	b.n	81009de <__aeabi_ddiv+0x82>
 8100a70:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8100a74:	bf04      	itt	eq
 8100a76:	4301      	orreq	r1, r0
 8100a78:	2000      	moveq	r0, #0
 8100a7a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8100a7e:	bf88      	it	hi
 8100a80:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 8100a84:	f63f aeaf 	bhi.w	81007e6 <__aeabi_dmul+0xde>
 8100a88:	ebb5 0c03 	subs.w	ip, r5, r3
 8100a8c:	bf04      	itt	eq
 8100a8e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8100a92:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8100a96:	f150 0000 	adcs.w	r0, r0, #0
 8100a9a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8100a9e:	bd70      	pop	{r4, r5, r6, pc}
 8100aa0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 8100aa4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8100aa8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8100aac:	bfc2      	ittt	gt
 8100aae:	ebd4 050c 	rsbsgt	r5, r4, ip
 8100ab2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8100ab6:	bd70      	popgt	{r4, r5, r6, pc}
 8100ab8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8100abc:	f04f 0e00 	mov.w	lr, #0
 8100ac0:	3c01      	subs	r4, #1
 8100ac2:	e690      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100ac4:	ea45 0e06 	orr.w	lr, r5, r6
 8100ac8:	e68d      	b.n	81007e6 <__aeabi_dmul+0xde>
 8100aca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8100ace:	ea94 0f0c 	teq	r4, ip
 8100ad2:	bf08      	it	eq
 8100ad4:	ea95 0f0c 	teqeq	r5, ip
 8100ad8:	f43f af3b 	beq.w	8100952 <__aeabi_dmul+0x24a>
 8100adc:	ea94 0f0c 	teq	r4, ip
 8100ae0:	d10a      	bne.n	8100af8 <__aeabi_ddiv+0x19c>
 8100ae2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8100ae6:	f47f af34 	bne.w	8100952 <__aeabi_dmul+0x24a>
 8100aea:	ea95 0f0c 	teq	r5, ip
 8100aee:	f47f af25 	bne.w	810093c <__aeabi_dmul+0x234>
 8100af2:	4610      	mov	r0, r2
 8100af4:	4619      	mov	r1, r3
 8100af6:	e72c      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100af8:	ea95 0f0c 	teq	r5, ip
 8100afc:	d106      	bne.n	8100b0c <__aeabi_ddiv+0x1b0>
 8100afe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8100b02:	f43f aefd 	beq.w	8100900 <__aeabi_dmul+0x1f8>
 8100b06:	4610      	mov	r0, r2
 8100b08:	4619      	mov	r1, r3
 8100b0a:	e722      	b.n	8100952 <__aeabi_dmul+0x24a>
 8100b0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8100b10:	bf18      	it	ne
 8100b12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8100b16:	f47f aec5 	bne.w	81008a4 <__aeabi_dmul+0x19c>
 8100b1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8100b1e:	f47f af0d 	bne.w	810093c <__aeabi_dmul+0x234>
 8100b22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8100b26:	f47f aeeb 	bne.w	8100900 <__aeabi_dmul+0x1f8>
 8100b2a:	e712      	b.n	8100952 <__aeabi_dmul+0x24a>

08100b2c <__gedf2>:
 8100b2c:	f04f 3cff 	mov.w	ip, #4294967295	@ 0xffffffff
 8100b30:	e006      	b.n	8100b40 <__cmpdf2+0x4>
 8100b32:	bf00      	nop

08100b34 <__ledf2>:
 8100b34:	f04f 0c01 	mov.w	ip, #1
 8100b38:	e002      	b.n	8100b40 <__cmpdf2+0x4>
 8100b3a:	bf00      	nop

08100b3c <__cmpdf2>:
 8100b3c:	f04f 0c01 	mov.w	ip, #1
 8100b40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8100b44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100b50:	bf18      	it	ne
 8100b52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8100b56:	d01b      	beq.n	8100b90 <__cmpdf2+0x54>
 8100b58:	b001      	add	sp, #4
 8100b5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8100b5e:	bf0c      	ite	eq
 8100b60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8100b64:	ea91 0f03 	teqne	r1, r3
 8100b68:	bf02      	ittt	eq
 8100b6a:	ea90 0f02 	teqeq	r0, r2
 8100b6e:	2000      	moveq	r0, #0
 8100b70:	4770      	bxeq	lr
 8100b72:	f110 0f00 	cmn.w	r0, #0
 8100b76:	ea91 0f03 	teq	r1, r3
 8100b7a:	bf58      	it	pl
 8100b7c:	4299      	cmppl	r1, r3
 8100b7e:	bf08      	it	eq
 8100b80:	4290      	cmpeq	r0, r2
 8100b82:	bf2c      	ite	cs
 8100b84:	17d8      	asrcs	r0, r3, #31
 8100b86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8100b8a:	f040 0001 	orr.w	r0, r0, #1
 8100b8e:	4770      	bx	lr
 8100b90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100b94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100b98:	d102      	bne.n	8100ba0 <__cmpdf2+0x64>
 8100b9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100b9e:	d107      	bne.n	8100bb0 <__cmpdf2+0x74>
 8100ba0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100ba4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100ba8:	d1d6      	bne.n	8100b58 <__cmpdf2+0x1c>
 8100baa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100bae:	d0d3      	beq.n	8100b58 <__cmpdf2+0x1c>
 8100bb0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8100bb4:	4770      	bx	lr
 8100bb6:	bf00      	nop

08100bb8 <__aeabi_cdrcmple>:
 8100bb8:	4684      	mov	ip, r0
 8100bba:	4610      	mov	r0, r2
 8100bbc:	4662      	mov	r2, ip
 8100bbe:	468c      	mov	ip, r1
 8100bc0:	4619      	mov	r1, r3
 8100bc2:	4663      	mov	r3, ip
 8100bc4:	e000      	b.n	8100bc8 <__aeabi_cdcmpeq>
 8100bc6:	bf00      	nop

08100bc8 <__aeabi_cdcmpeq>:
 8100bc8:	b501      	push	{r0, lr}
 8100bca:	f7ff ffb7 	bl	8100b3c <__cmpdf2>
 8100bce:	2800      	cmp	r0, #0
 8100bd0:	bf48      	it	mi
 8100bd2:	f110 0f00 	cmnmi.w	r0, #0
 8100bd6:	bd01      	pop	{r0, pc}

08100bd8 <__aeabi_dcmpeq>:
 8100bd8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bdc:	f7ff fff4 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100be0:	bf0c      	ite	eq
 8100be2:	2001      	moveq	r0, #1
 8100be4:	2000      	movne	r0, #0
 8100be6:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bea:	bf00      	nop

08100bec <__aeabi_dcmplt>:
 8100bec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100bf0:	f7ff ffea 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100bf4:	bf34      	ite	cc
 8100bf6:	2001      	movcc	r0, #1
 8100bf8:	2000      	movcs	r0, #0
 8100bfa:	f85d fb08 	ldr.w	pc, [sp], #8
 8100bfe:	bf00      	nop

08100c00 <__aeabi_dcmple>:
 8100c00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c04:	f7ff ffe0 	bl	8100bc8 <__aeabi_cdcmpeq>
 8100c08:	bf94      	ite	ls
 8100c0a:	2001      	movls	r0, #1
 8100c0c:	2000      	movhi	r0, #0
 8100c0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c12:	bf00      	nop

08100c14 <__aeabi_dcmpge>:
 8100c14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c18:	f7ff ffce 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c1c:	bf94      	ite	ls
 8100c1e:	2001      	movls	r0, #1
 8100c20:	2000      	movhi	r0, #0
 8100c22:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c26:	bf00      	nop

08100c28 <__aeabi_dcmpgt>:
 8100c28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8100c2c:	f7ff ffc4 	bl	8100bb8 <__aeabi_cdrcmple>
 8100c30:	bf34      	ite	cc
 8100c32:	2001      	movcc	r0, #1
 8100c34:	2000      	movcs	r0, #0
 8100c36:	f85d fb08 	ldr.w	pc, [sp], #8
 8100c3a:	bf00      	nop

08100c3c <__aeabi_dcmpun>:
 8100c3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8100c40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c44:	d102      	bne.n	8100c4c <__aeabi_dcmpun+0x10>
 8100c46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8100c4a:	d10a      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8100c50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8100c54:	d102      	bne.n	8100c5c <__aeabi_dcmpun+0x20>
 8100c56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8100c5a:	d102      	bne.n	8100c62 <__aeabi_dcmpun+0x26>
 8100c5c:	f04f 0000 	mov.w	r0, #0
 8100c60:	4770      	bx	lr
 8100c62:	f04f 0001 	mov.w	r0, #1
 8100c66:	4770      	bx	lr

08100c68 <__aeabi_d2iz>:
 8100c68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8100c6c:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 8100c70:	d215      	bcs.n	8100c9e <__aeabi_d2iz+0x36>
 8100c72:	d511      	bpl.n	8100c98 <__aeabi_d2iz+0x30>
 8100c74:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8100c78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8100c7c:	d912      	bls.n	8100ca4 <__aeabi_d2iz+0x3c>
 8100c7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8100c82:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8100c86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8100c8a:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8100c8e:	fa23 f002 	lsr.w	r0, r3, r2
 8100c92:	bf18      	it	ne
 8100c94:	4240      	negne	r0, r0
 8100c96:	4770      	bx	lr
 8100c98:	f04f 0000 	mov.w	r0, #0
 8100c9c:	4770      	bx	lr
 8100c9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8100ca2:	d105      	bne.n	8100cb0 <__aeabi_d2iz+0x48>
 8100ca4:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 8100ca8:	bf08      	it	eq
 8100caa:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 8100cae:	4770      	bx	lr
 8100cb0:	f04f 0000 	mov.w	r0, #0
 8100cb4:	4770      	bx	lr
 8100cb6:	bf00      	nop

08100cb8 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 8100cb8:	b480      	push	{r7}
 8100cba:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << (10*2))|(3UL << (11*2)));  /* set CP10 and CP11 Full Access */
 8100cbc:	4b09      	ldr	r3, [pc, #36]	@ (8100ce4 <SystemInit+0x2c>)
 8100cbe:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8100cc2:	4a08      	ldr	r2, [pc, #32]	@ (8100ce4 <SystemInit+0x2c>)
 8100cc4:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8100cc8:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
  #endif

    /*SEVONPEND enabled so that an interrupt coming from the CPU(n) interrupt signal is
     detectable by the CPU after a WFI/WFE instruction.*/
 SCB->SCR |= SCB_SCR_SEVONPEND_Msk;
 8100ccc:	4b05      	ldr	r3, [pc, #20]	@ (8100ce4 <SystemInit+0x2c>)
 8100cce:	691b      	ldr	r3, [r3, #16]
 8100cd0:	4a04      	ldr	r2, [pc, #16]	@ (8100ce4 <SystemInit+0x2c>)
 8100cd2:	f043 0310 	orr.w	r3, r3, #16
 8100cd6:	6113      	str	r3, [r2, #16]
#endif /* USER_VECT_TAB_ADDRESS */

#else
#error Please #define CORE_CM4 or CORE_CM7
#endif /* CORE_CM4 */
}
 8100cd8:	bf00      	nop
 8100cda:	46bd      	mov	sp, r7
 8100cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100ce0:	4770      	bx	lr
 8100ce2:	bf00      	nop
 8100ce4:	e000ed00 	.word	0xe000ed00

08100ce8 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8100ce8:	b580      	push	{r7, lr}
 8100cea:	b082      	sub	sp, #8
 8100cec:	af00      	add	r7, sp, #0

  /* USER CODE END 1 */

/* USER CODE BEGIN Boot_Mode_Sequence_1 */
  /*HW semaphore Clock enable*/
  __HAL_RCC_HSEM_CLK_ENABLE();
 8100cee:	4b1f      	ldr	r3, [pc, #124]	@ (8100d6c <main+0x84>)
 8100cf0:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8100cf4:	4a1d      	ldr	r2, [pc, #116]	@ (8100d6c <main+0x84>)
 8100cf6:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8100cfa:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8100cfe:	4b1b      	ldr	r3, [pc, #108]	@ (8100d6c <main+0x84>)
 8100d00:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8100d04:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8100d08:	607b      	str	r3, [r7, #4]
 8100d0a:	687b      	ldr	r3, [r7, #4]
  /* Activate HSEM notification for Cortex-M4*/
  HAL_HSEM_ActivateNotification(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100d0c:	2001      	movs	r0, #1
 8100d0e:	f000 fd57 	bl	81017c0 <HAL_HSEM_ActivateNotification>
  /*
  Domain D2 goes to STOP mode (Cortex-M4 in deep-sleep) waiting for Cortex-M7 to
  perform system initialization (system clock config, external memory configuration.. )
  */
  HAL_PWREx_ClearPendingEvent();
 8100d12:	f000 fde1 	bl	81018d8 <HAL_PWREx_ClearPendingEvent>
  HAL_PWREx_EnterSTOPMode(PWR_MAINREGULATOR_ON, PWR_STOPENTRY_WFE, PWR_D2_DOMAIN);
 8100d16:	2201      	movs	r2, #1
 8100d18:	2102      	movs	r1, #2
 8100d1a:	2000      	movs	r0, #0
 8100d1c:	f000 fd62 	bl	81017e4 <HAL_PWREx_EnterSTOPMode>
  /* Clear HSEM flag */
  __HAL_HSEM_CLEAR_FLAG(__HAL_HSEM_SEMID_TO_MASK(HSEM_ID_0));
 8100d20:	4b13      	ldr	r3, [pc, #76]	@ (8100d70 <main+0x88>)
 8100d22:	681b      	ldr	r3, [r3, #0]
 8100d24:	091b      	lsrs	r3, r3, #4
 8100d26:	f003 030f 	and.w	r3, r3, #15
 8100d2a:	2b07      	cmp	r3, #7
 8100d2c:	d108      	bne.n	8100d40 <main+0x58>
 8100d2e:	4b11      	ldr	r3, [pc, #68]	@ (8100d74 <main+0x8c>)
 8100d30:	f8d3 3104 	ldr.w	r3, [r3, #260]	@ 0x104
 8100d34:	4a0f      	ldr	r2, [pc, #60]	@ (8100d74 <main+0x8c>)
 8100d36:	f043 0301 	orr.w	r3, r3, #1
 8100d3a:	f8c2 3104 	str.w	r3, [r2, #260]	@ 0x104
 8100d3e:	e007      	b.n	8100d50 <main+0x68>
 8100d40:	4b0c      	ldr	r3, [pc, #48]	@ (8100d74 <main+0x8c>)
 8100d42:	f8d3 3114 	ldr.w	r3, [r3, #276]	@ 0x114
 8100d46:	4a0b      	ldr	r2, [pc, #44]	@ (8100d74 <main+0x8c>)
 8100d48:	f043 0301 	orr.w	r3, r3, #1
 8100d4c:	f8c2 3114 	str.w	r3, [r2, #276]	@ 0x114

/* USER CODE END Boot_Mode_Sequence_1 */
  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8100d50:	f000 f982 	bl	8101058 <HAL_Init>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8100d54:	f000 f812 	bl	8100d7c <MX_GPIO_Init>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 8100d58:	2102      	movs	r1, #2
 8100d5a:	4807      	ldr	r0, [pc, #28]	@ (8100d78 <main+0x90>)
 8100d5c:	f000 fd15 	bl	810178a <HAL_GPIO_TogglePin>
	  HAL_Delay(2000);
 8100d60:	f44f 60fa 	mov.w	r0, #2000	@ 0x7d0
 8100d64:	f000 fa2c 	bl	81011c0 <HAL_Delay>
	  HAL_GPIO_TogglePin(LD2_GPIO_Port, LD2_Pin);
 8100d68:	bf00      	nop
 8100d6a:	e7f5      	b.n	8100d58 <main+0x70>
 8100d6c:	58024400 	.word	0x58024400
 8100d70:	e000ed00 	.word	0xe000ed00
 8100d74:	58026400 	.word	0x58026400
 8100d78:	58021000 	.word	0x58021000

08100d7c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8100d7c:	b580      	push	{r7, lr}
 8100d7e:	b086      	sub	sp, #24
 8100d80:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8100d82:	1d3b      	adds	r3, r7, #4
 8100d84:	2200      	movs	r2, #0
 8100d86:	601a      	str	r2, [r3, #0]
 8100d88:	605a      	str	r2, [r3, #4]
 8100d8a:	609a      	str	r2, [r3, #8]
 8100d8c:	60da      	str	r2, [r3, #12]
 8100d8e:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8100d90:	4b12      	ldr	r3, [pc, #72]	@ (8100ddc <MX_GPIO_Init+0x60>)
 8100d92:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8100d96:	4a11      	ldr	r2, [pc, #68]	@ (8100ddc <MX_GPIO_Init+0x60>)
 8100d98:	f043 0310 	orr.w	r3, r3, #16
 8100d9c:	f8c2 30e0 	str.w	r3, [r2, #224]	@ 0xe0
 8100da0:	4b0e      	ldr	r3, [pc, #56]	@ (8100ddc <MX_GPIO_Init+0x60>)
 8100da2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	@ 0xe0
 8100da6:	f003 0310 	and.w	r3, r3, #16
 8100daa:	603b      	str	r3, [r7, #0]
 8100dac:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_RESET);
 8100dae:	2200      	movs	r2, #0
 8100db0:	2102      	movs	r1, #2
 8100db2:	480b      	ldr	r0, [pc, #44]	@ (8100de0 <MX_GPIO_Init+0x64>)
 8100db4:	f000 fcd0 	bl	8101758 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : LD2_Pin */
  GPIO_InitStruct.Pin = LD2_Pin;
 8100db8:	2302      	movs	r3, #2
 8100dba:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8100dbc:	2301      	movs	r3, #1
 8100dbe:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8100dc0:	2300      	movs	r3, #0
 8100dc2:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8100dc4:	2300      	movs	r3, #0
 8100dc6:	613b      	str	r3, [r7, #16]
  HAL_GPIO_Init(LD2_GPIO_Port, &GPIO_InitStruct);
 8100dc8:	1d3b      	adds	r3, r7, #4
 8100dca:	4619      	mov	r1, r3
 8100dcc:	4804      	ldr	r0, [pc, #16]	@ (8100de0 <MX_GPIO_Init+0x64>)
 8100dce:	f000 fb13 	bl	81013f8 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8100dd2:	bf00      	nop
 8100dd4:	3718      	adds	r7, #24
 8100dd6:	46bd      	mov	sp, r7
 8100dd8:	bd80      	pop	{r7, pc}
 8100dda:	bf00      	nop
 8100ddc:	58024400 	.word	0x58024400
 8100de0:	58021000 	.word	0x58021000

08100de4 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8100de4:	b480      	push	{r7}
 8100de6:	b083      	sub	sp, #12
 8100de8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8100dea:	4b0a      	ldr	r3, [pc, #40]	@ (8100e14 <HAL_MspInit+0x30>)
 8100dec:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8100df0:	4a08      	ldr	r2, [pc, #32]	@ (8100e14 <HAL_MspInit+0x30>)
 8100df2:	f043 0302 	orr.w	r3, r3, #2
 8100df6:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8100dfa:	4b06      	ldr	r3, [pc, #24]	@ (8100e14 <HAL_MspInit+0x30>)
 8100dfc:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8100e00:	f003 0302 	and.w	r3, r3, #2
 8100e04:	607b      	str	r3, [r7, #4]
 8100e06:	687b      	ldr	r3, [r7, #4]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8100e08:	bf00      	nop
 8100e0a:	370c      	adds	r7, #12
 8100e0c:	46bd      	mov	sp, r7
 8100e0e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e12:	4770      	bx	lr
 8100e14:	58024400 	.word	0x58024400

08100e18 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8100e18:	b480      	push	{r7}
 8100e1a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8100e1c:	bf00      	nop
 8100e1e:	e7fd      	b.n	8100e1c <NMI_Handler+0x4>

08100e20 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8100e20:	b480      	push	{r7}
 8100e22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8100e24:	bf00      	nop
 8100e26:	e7fd      	b.n	8100e24 <HardFault_Handler+0x4>

08100e28 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8100e28:	b480      	push	{r7}
 8100e2a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8100e2c:	bf00      	nop
 8100e2e:	e7fd      	b.n	8100e2c <MemManage_Handler+0x4>

08100e30 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8100e30:	b480      	push	{r7}
 8100e32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8100e34:	bf00      	nop
 8100e36:	e7fd      	b.n	8100e34 <BusFault_Handler+0x4>

08100e38 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8100e38:	b480      	push	{r7}
 8100e3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8100e3c:	bf00      	nop
 8100e3e:	e7fd      	b.n	8100e3c <UsageFault_Handler+0x4>

08100e40 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8100e40:	b480      	push	{r7}
 8100e42:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8100e44:	bf00      	nop
 8100e46:	46bd      	mov	sp, r7
 8100e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e4c:	4770      	bx	lr

08100e4e <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8100e4e:	b480      	push	{r7}
 8100e50:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8100e52:	bf00      	nop
 8100e54:	46bd      	mov	sp, r7
 8100e56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e5a:	4770      	bx	lr

08100e5c <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8100e5c:	b480      	push	{r7}
 8100e5e:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8100e60:	bf00      	nop
 8100e62:	46bd      	mov	sp, r7
 8100e64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e68:	4770      	bx	lr

08100e6a <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8100e6a:	b580      	push	{r7, lr}
 8100e6c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8100e6e:	f000 f987 	bl	8101180 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8100e72:	bf00      	nop
 8100e74:	bd80      	pop	{r7, pc}

08100e76 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8100e76:	b480      	push	{r7}
 8100e78:	af00      	add	r7, sp, #0
  return 1;
 8100e7a:	2301      	movs	r3, #1
}
 8100e7c:	4618      	mov	r0, r3
 8100e7e:	46bd      	mov	sp, r7
 8100e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100e84:	4770      	bx	lr

08100e86 <_kill>:

int _kill(int pid, int sig)
{
 8100e86:	b580      	push	{r7, lr}
 8100e88:	b082      	sub	sp, #8
 8100e8a:	af00      	add	r7, sp, #0
 8100e8c:	6078      	str	r0, [r7, #4]
 8100e8e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8100e90:	f001 fc5a 	bl	8102748 <__errno>
 8100e94:	4603      	mov	r3, r0
 8100e96:	2216      	movs	r2, #22
 8100e98:	601a      	str	r2, [r3, #0]
  return -1;
 8100e9a:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8100e9e:	4618      	mov	r0, r3
 8100ea0:	3708      	adds	r7, #8
 8100ea2:	46bd      	mov	sp, r7
 8100ea4:	bd80      	pop	{r7, pc}

08100ea6 <_exit>:

void _exit (int status)
{
 8100ea6:	b580      	push	{r7, lr}
 8100ea8:	b082      	sub	sp, #8
 8100eaa:	af00      	add	r7, sp, #0
 8100eac:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8100eae:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 8100eb2:	6878      	ldr	r0, [r7, #4]
 8100eb4:	f7ff ffe7 	bl	8100e86 <_kill>
  while (1) {}    /* Make sure we hang here */
 8100eb8:	bf00      	nop
 8100eba:	e7fd      	b.n	8100eb8 <_exit+0x12>

08100ebc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8100ebc:	b580      	push	{r7, lr}
 8100ebe:	b086      	sub	sp, #24
 8100ec0:	af00      	add	r7, sp, #0
 8100ec2:	60f8      	str	r0, [r7, #12]
 8100ec4:	60b9      	str	r1, [r7, #8]
 8100ec6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100ec8:	2300      	movs	r3, #0
 8100eca:	617b      	str	r3, [r7, #20]
 8100ecc:	e00a      	b.n	8100ee4 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8100ece:	f3af 8000 	nop.w
 8100ed2:	4601      	mov	r1, r0
 8100ed4:	68bb      	ldr	r3, [r7, #8]
 8100ed6:	1c5a      	adds	r2, r3, #1
 8100ed8:	60ba      	str	r2, [r7, #8]
 8100eda:	b2ca      	uxtb	r2, r1
 8100edc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100ede:	697b      	ldr	r3, [r7, #20]
 8100ee0:	3301      	adds	r3, #1
 8100ee2:	617b      	str	r3, [r7, #20]
 8100ee4:	697a      	ldr	r2, [r7, #20]
 8100ee6:	687b      	ldr	r3, [r7, #4]
 8100ee8:	429a      	cmp	r2, r3
 8100eea:	dbf0      	blt.n	8100ece <_read+0x12>
  }

  return len;
 8100eec:	687b      	ldr	r3, [r7, #4]
}
 8100eee:	4618      	mov	r0, r3
 8100ef0:	3718      	adds	r7, #24
 8100ef2:	46bd      	mov	sp, r7
 8100ef4:	bd80      	pop	{r7, pc}

08100ef6 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8100ef6:	b580      	push	{r7, lr}
 8100ef8:	b086      	sub	sp, #24
 8100efa:	af00      	add	r7, sp, #0
 8100efc:	60f8      	str	r0, [r7, #12]
 8100efe:	60b9      	str	r1, [r7, #8]
 8100f00:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100f02:	2300      	movs	r3, #0
 8100f04:	617b      	str	r3, [r7, #20]
 8100f06:	e009      	b.n	8100f1c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8100f08:	68bb      	ldr	r3, [r7, #8]
 8100f0a:	1c5a      	adds	r2, r3, #1
 8100f0c:	60ba      	str	r2, [r7, #8]
 8100f0e:	781b      	ldrb	r3, [r3, #0]
 8100f10:	4618      	mov	r0, r3
 8100f12:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8100f16:	697b      	ldr	r3, [r7, #20]
 8100f18:	3301      	adds	r3, #1
 8100f1a:	617b      	str	r3, [r7, #20]
 8100f1c:	697a      	ldr	r2, [r7, #20]
 8100f1e:	687b      	ldr	r3, [r7, #4]
 8100f20:	429a      	cmp	r2, r3
 8100f22:	dbf1      	blt.n	8100f08 <_write+0x12>
  }
  return len;
 8100f24:	687b      	ldr	r3, [r7, #4]
}
 8100f26:	4618      	mov	r0, r3
 8100f28:	3718      	adds	r7, #24
 8100f2a:	46bd      	mov	sp, r7
 8100f2c:	bd80      	pop	{r7, pc}

08100f2e <_close>:

int _close(int file)
{
 8100f2e:	b480      	push	{r7}
 8100f30:	b083      	sub	sp, #12
 8100f32:	af00      	add	r7, sp, #0
 8100f34:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8100f36:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
}
 8100f3a:	4618      	mov	r0, r3
 8100f3c:	370c      	adds	r7, #12
 8100f3e:	46bd      	mov	sp, r7
 8100f40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100f44:	4770      	bx	lr

08100f46 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8100f46:	b480      	push	{r7}
 8100f48:	b083      	sub	sp, #12
 8100f4a:	af00      	add	r7, sp, #0
 8100f4c:	6078      	str	r0, [r7, #4]
 8100f4e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8100f50:	683b      	ldr	r3, [r7, #0]
 8100f52:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8100f56:	605a      	str	r2, [r3, #4]
  return 0;
 8100f58:	2300      	movs	r3, #0
}
 8100f5a:	4618      	mov	r0, r3
 8100f5c:	370c      	adds	r7, #12
 8100f5e:	46bd      	mov	sp, r7
 8100f60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100f64:	4770      	bx	lr

08100f66 <_isatty>:

int _isatty(int file)
{
 8100f66:	b480      	push	{r7}
 8100f68:	b083      	sub	sp, #12
 8100f6a:	af00      	add	r7, sp, #0
 8100f6c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8100f6e:	2301      	movs	r3, #1
}
 8100f70:	4618      	mov	r0, r3
 8100f72:	370c      	adds	r7, #12
 8100f74:	46bd      	mov	sp, r7
 8100f76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100f7a:	4770      	bx	lr

08100f7c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8100f7c:	b480      	push	{r7}
 8100f7e:	b085      	sub	sp, #20
 8100f80:	af00      	add	r7, sp, #0
 8100f82:	60f8      	str	r0, [r7, #12]
 8100f84:	60b9      	str	r1, [r7, #8]
 8100f86:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8100f88:	2300      	movs	r3, #0
}
 8100f8a:	4618      	mov	r0, r3
 8100f8c:	3714      	adds	r7, #20
 8100f8e:	46bd      	mov	sp, r7
 8100f90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8100f94:	4770      	bx	lr
	...

08100f98 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8100f98:	b580      	push	{r7, lr}
 8100f9a:	b086      	sub	sp, #24
 8100f9c:	af00      	add	r7, sp, #0
 8100f9e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8100fa0:	4a14      	ldr	r2, [pc, #80]	@ (8100ff4 <_sbrk+0x5c>)
 8100fa2:	4b15      	ldr	r3, [pc, #84]	@ (8100ff8 <_sbrk+0x60>)
 8100fa4:	1ad3      	subs	r3, r2, r3
 8100fa6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8100fa8:	697b      	ldr	r3, [r7, #20]
 8100faa:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8100fac:	4b13      	ldr	r3, [pc, #76]	@ (8100ffc <_sbrk+0x64>)
 8100fae:	681b      	ldr	r3, [r3, #0]
 8100fb0:	2b00      	cmp	r3, #0
 8100fb2:	d102      	bne.n	8100fba <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8100fb4:	4b11      	ldr	r3, [pc, #68]	@ (8100ffc <_sbrk+0x64>)
 8100fb6:	4a12      	ldr	r2, [pc, #72]	@ (8101000 <_sbrk+0x68>)
 8100fb8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8100fba:	4b10      	ldr	r3, [pc, #64]	@ (8100ffc <_sbrk+0x64>)
 8100fbc:	681a      	ldr	r2, [r3, #0]
 8100fbe:	687b      	ldr	r3, [r7, #4]
 8100fc0:	4413      	add	r3, r2
 8100fc2:	693a      	ldr	r2, [r7, #16]
 8100fc4:	429a      	cmp	r2, r3
 8100fc6:	d207      	bcs.n	8100fd8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8100fc8:	f001 fbbe 	bl	8102748 <__errno>
 8100fcc:	4603      	mov	r3, r0
 8100fce:	220c      	movs	r2, #12
 8100fd0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8100fd2:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8100fd6:	e009      	b.n	8100fec <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8100fd8:	4b08      	ldr	r3, [pc, #32]	@ (8100ffc <_sbrk+0x64>)
 8100fda:	681b      	ldr	r3, [r3, #0]
 8100fdc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8100fde:	4b07      	ldr	r3, [pc, #28]	@ (8100ffc <_sbrk+0x64>)
 8100fe0:	681a      	ldr	r2, [r3, #0]
 8100fe2:	687b      	ldr	r3, [r7, #4]
 8100fe4:	4413      	add	r3, r2
 8100fe6:	4a05      	ldr	r2, [pc, #20]	@ (8100ffc <_sbrk+0x64>)
 8100fe8:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8100fea:	68fb      	ldr	r3, [r7, #12]
}
 8100fec:	4618      	mov	r0, r3
 8100fee:	3718      	adds	r7, #24
 8100ff0:	46bd      	mov	sp, r7
 8100ff2:	bd80      	pop	{r7, pc}
 8100ff4:	10048000 	.word	0x10048000
 8100ff8:	00000400 	.word	0x00000400
 8100ffc:	100001f4 	.word	0x100001f4
 8101000:	10000348 	.word	0x10000348

08101004 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:
  ldr   sp, =_estack      /* set stack pointer */
 8101004:	f8df d034 	ldr.w	sp, [pc, #52]	@ 810103c <LoopFillZerobss+0xe>

/* Call the clock system initialization function.*/
  bl  SystemInit
 8101008:	f7ff fe56 	bl	8100cb8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 810100c:	480c      	ldr	r0, [pc, #48]	@ (8101040 <LoopFillZerobss+0x12>)
  ldr r1, =_edata
 810100e:	490d      	ldr	r1, [pc, #52]	@ (8101044 <LoopFillZerobss+0x16>)
  ldr r2, =_sidata
 8101010:	4a0d      	ldr	r2, [pc, #52]	@ (8101048 <LoopFillZerobss+0x1a>)
  movs r3, #0
 8101012:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8101014:	e002      	b.n	810101c <LoopCopyDataInit>

08101016 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8101016:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8101018:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 810101a:	3304      	adds	r3, #4

0810101c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 810101c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 810101e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8101020:	d3f9      	bcc.n	8101016 <CopyDataInit>
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8101022:	4a0a      	ldr	r2, [pc, #40]	@ (810104c <LoopFillZerobss+0x1e>)
  ldr r4, =_ebss
 8101024:	4c0a      	ldr	r4, [pc, #40]	@ (8101050 <LoopFillZerobss+0x22>)
  movs r3, #0
 8101026:	2300      	movs	r3, #0
  b LoopFillZerobss
 8101028:	e001      	b.n	810102e <LoopFillZerobss>

0810102a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 810102a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 810102c:	3204      	adds	r2, #4

0810102e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 810102e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8101030:	d3fb      	bcc.n	810102a <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 8101032:	f001 fb8f 	bl	8102754 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8101036:	f7ff fe57 	bl	8100ce8 <main>
  bx  lr
 810103a:	4770      	bx	lr
  ldr   sp, =_estack      /* set stack pointer */
 810103c:	10048000 	.word	0x10048000
  ldr r0, =_sdata
 8101040:	10000000 	.word	0x10000000
  ldr r1, =_edata
 8101044:	100001d8 	.word	0x100001d8
  ldr r2, =_sidata
 8101048:	08104890 	.word	0x08104890
  ldr r2, =_sbss
 810104c:	100001d8 	.word	0x100001d8
  ldr r4, =_ebss
 8101050:	10000348 	.word	0x10000348

08101054 <ADC3_IRQHandler>:
 * @retval None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8101054:	e7fe      	b.n	8101054 <ADC3_IRQHandler>
	...

08101058 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8101058:	b580      	push	{r7, lr}
 810105a:	b082      	sub	sp, #8
 810105c:	af00      	add	r7, sp, #0

uint32_t common_system_clock;

#if defined(DUAL_CORE) && defined(CORE_CM4)
   /* Configure Cortex-M4 Instruction cache through ART accelerator */
   __HAL_RCC_ART_CLK_ENABLE();                   /* Enable the Cortex-M4 ART Clock */
 810105e:	4b28      	ldr	r3, [pc, #160]	@ (8101100 <HAL_Init+0xa8>)
 8101060:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8101064:	4a26      	ldr	r2, [pc, #152]	@ (8101100 <HAL_Init+0xa8>)
 8101066:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 810106a:	f8c2 30d8 	str.w	r3, [r2, #216]	@ 0xd8
 810106e:	4b24      	ldr	r3, [pc, #144]	@ (8101100 <HAL_Init+0xa8>)
 8101070:	f8d3 30d8 	ldr.w	r3, [r3, #216]	@ 0xd8
 8101074:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8101078:	603b      	str	r3, [r7, #0]
 810107a:	683b      	ldr	r3, [r7, #0]
   __HAL_ART_CONFIG_BASE_ADDRESS(0x08100000UL);  /* Configure the Cortex-M4 ART Base address to the Flash Bank 2 : */
 810107c:	4b21      	ldr	r3, [pc, #132]	@ (8101104 <HAL_Init+0xac>)
 810107e:	681b      	ldr	r3, [r3, #0]
 8101080:	f423 237f 	bic.w	r3, r3, #1044480	@ 0xff000
 8101084:	f423 6370 	bic.w	r3, r3, #3840	@ 0xf00
 8101088:	4a1e      	ldr	r2, [pc, #120]	@ (8101104 <HAL_Init+0xac>)
 810108a:	f443 4301 	orr.w	r3, r3, #33024	@ 0x8100
 810108e:	6013      	str	r3, [r2, #0]
   __HAL_ART_ENABLE();                           /* Enable the Cortex-M4 ART */
 8101090:	4b1c      	ldr	r3, [pc, #112]	@ (8101104 <HAL_Init+0xac>)
 8101092:	681b      	ldr	r3, [r3, #0]
 8101094:	4a1b      	ldr	r2, [pc, #108]	@ (8101104 <HAL_Init+0xac>)
 8101096:	f043 0301 	orr.w	r3, r3, #1
 810109a:	6013      	str	r3, [r2, #0]
#endif /* DUAL_CORE &&  CORE_CM4 */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 810109c:	2003      	movs	r0, #3
 810109e:	f000 f965 	bl	810136c <HAL_NVIC_SetPriorityGrouping>

  /* Update the SystemCoreClock global variable */
#if defined(RCC_D1CFGR_D1CPRE)
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_D1CPRE)>> RCC_D1CFGR_D1CPRE_Pos]) & 0x1FU);
 81010a2:	f000 fc27 	bl	81018f4 <HAL_RCC_GetSysClockFreq>
 81010a6:	4602      	mov	r2, r0
 81010a8:	4b15      	ldr	r3, [pc, #84]	@ (8101100 <HAL_Init+0xa8>)
 81010aa:	699b      	ldr	r3, [r3, #24]
 81010ac:	0a1b      	lsrs	r3, r3, #8
 81010ae:	f003 030f 	and.w	r3, r3, #15
 81010b2:	4915      	ldr	r1, [pc, #84]	@ (8101108 <HAL_Init+0xb0>)
 81010b4:	5ccb      	ldrb	r3, [r1, r3]
 81010b6:	f003 031f 	and.w	r3, r3, #31
 81010ba:	fa22 f303 	lsr.w	r3, r2, r3
 81010be:	607b      	str	r3, [r7, #4]
  common_system_clock = HAL_RCC_GetSysClockFreq() >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_CDCPRE)>> RCC_CDCFGR1_CDCPRE_Pos]) & 0x1FU);
#endif

  /* Update the SystemD2Clock global variable */
#if defined(RCC_D1CFGR_HPRE)
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->D1CFGR & RCC_D1CFGR_HPRE)>> RCC_D1CFGR_HPRE_Pos]) & 0x1FU));
 81010c0:	4b0f      	ldr	r3, [pc, #60]	@ (8101100 <HAL_Init+0xa8>)
 81010c2:	699b      	ldr	r3, [r3, #24]
 81010c4:	f003 030f 	and.w	r3, r3, #15
 81010c8:	4a0f      	ldr	r2, [pc, #60]	@ (8101108 <HAL_Init+0xb0>)
 81010ca:	5cd3      	ldrb	r3, [r2, r3]
 81010cc:	f003 031f 	and.w	r3, r3, #31
 81010d0:	687a      	ldr	r2, [r7, #4]
 81010d2:	fa22 f303 	lsr.w	r3, r2, r3
 81010d6:	4a0d      	ldr	r2, [pc, #52]	@ (810110c <HAL_Init+0xb4>)
 81010d8:	6013      	str	r3, [r2, #0]
#else
  SystemD2Clock = (common_system_clock >> ((D1CorePrescTable[(RCC->CDCFGR1 & RCC_CDCFGR1_HPRE)>> RCC_CDCFGR1_HPRE_Pos]) & 0x1FU));
#endif

#if defined(DUAL_CORE) && defined(CORE_CM4)
  SystemCoreClock = SystemD2Clock;
 81010da:	4b0c      	ldr	r3, [pc, #48]	@ (810110c <HAL_Init+0xb4>)
 81010dc:	681b      	ldr	r3, [r3, #0]
 81010de:	4a0c      	ldr	r2, [pc, #48]	@ (8101110 <HAL_Init+0xb8>)
 81010e0:	6013      	str	r3, [r2, #0]
#else
  SystemCoreClock = common_system_clock;
#endif /* DUAL_CORE && CORE_CM4 */

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  if(HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 81010e2:	2000      	movs	r0, #0
 81010e4:	f000 f816 	bl	8101114 <HAL_InitTick>
 81010e8:	4603      	mov	r3, r0
 81010ea:	2b00      	cmp	r3, #0
 81010ec:	d001      	beq.n	81010f2 <HAL_Init+0x9a>
  {
    return HAL_ERROR;
 81010ee:	2301      	movs	r3, #1
 81010f0:	e002      	b.n	81010f8 <HAL_Init+0xa0>
  }

  /* Init the low level hardware */
  HAL_MspInit();
 81010f2:	f7ff fe77 	bl	8100de4 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 81010f6:	2300      	movs	r3, #0
}
 81010f8:	4618      	mov	r0, r3
 81010fa:	3708      	adds	r7, #8
 81010fc:	46bd      	mov	sp, r7
 81010fe:	bd80      	pop	{r7, pc}
 8101100:	58024400 	.word	0x58024400
 8101104:	40024400 	.word	0x40024400
 8101108:	08104500 	.word	0x08104500
 810110c:	10000004 	.word	0x10000004
 8101110:	10000000 	.word	0x10000000

08101114 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8101114:	b580      	push	{r7, lr}
 8101116:	b082      	sub	sp, #8
 8101118:	af00      	add	r7, sp, #0
 810111a:	6078      	str	r0, [r7, #4]
  /* Check uwTickFreq for MisraC 2012 (even if uwTickFreq is a enum type that don't take the value zero)*/
  if((uint32_t)uwTickFreq == 0UL)
 810111c:	4b15      	ldr	r3, [pc, #84]	@ (8101174 <HAL_InitTick+0x60>)
 810111e:	781b      	ldrb	r3, [r3, #0]
 8101120:	2b00      	cmp	r3, #0
 8101122:	d101      	bne.n	8101128 <HAL_InitTick+0x14>
  {
    return HAL_ERROR;
 8101124:	2301      	movs	r3, #1
 8101126:	e021      	b.n	810116c <HAL_InitTick+0x58>
  }

    /* Configure the SysTick to have interrupt in 1ms time basis*/
    if (HAL_SYSTICK_Config(SystemCoreClock / (1000UL / (uint32_t)uwTickFreq)) > 0U)
 8101128:	4b13      	ldr	r3, [pc, #76]	@ (8101178 <HAL_InitTick+0x64>)
 810112a:	681a      	ldr	r2, [r3, #0]
 810112c:	4b11      	ldr	r3, [pc, #68]	@ (8101174 <HAL_InitTick+0x60>)
 810112e:	781b      	ldrb	r3, [r3, #0]
 8101130:	4619      	mov	r1, r3
 8101132:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8101136:	fbb3 f3f1 	udiv	r3, r3, r1
 810113a:	fbb2 f3f3 	udiv	r3, r2, r3
 810113e:	4618      	mov	r0, r3
 8101140:	f000 f939 	bl	81013b6 <HAL_SYSTICK_Config>
 8101144:	4603      	mov	r3, r0
 8101146:	2b00      	cmp	r3, #0
 8101148:	d001      	beq.n	810114e <HAL_InitTick+0x3a>
    {
      return HAL_ERROR;
 810114a:	2301      	movs	r3, #1
 810114c:	e00e      	b.n	810116c <HAL_InitTick+0x58>
    }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 810114e:	687b      	ldr	r3, [r7, #4]
 8101150:	2b0f      	cmp	r3, #15
 8101152:	d80a      	bhi.n	810116a <HAL_InitTick+0x56>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8101154:	2200      	movs	r2, #0
 8101156:	6879      	ldr	r1, [r7, #4]
 8101158:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 810115c:	f000 f911 	bl	8101382 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8101160:	4a06      	ldr	r2, [pc, #24]	@ (810117c <HAL_InitTick+0x68>)
 8101162:	687b      	ldr	r3, [r7, #4]
 8101164:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8101166:	2300      	movs	r3, #0
 8101168:	e000      	b.n	810116c <HAL_InitTick+0x58>
    return HAL_ERROR;
 810116a:	2301      	movs	r3, #1
}
 810116c:	4618      	mov	r0, r3
 810116e:	3708      	adds	r7, #8
 8101170:	46bd      	mov	sp, r7
 8101172:	bd80      	pop	{r7, pc}
 8101174:	1000000c 	.word	0x1000000c
 8101178:	10000000 	.word	0x10000000
 810117c:	10000008 	.word	0x10000008

08101180 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8101180:	b480      	push	{r7}
 8101182:	af00      	add	r7, sp, #0
  uwTick += (uint32_t)uwTickFreq;
 8101184:	4b06      	ldr	r3, [pc, #24]	@ (81011a0 <HAL_IncTick+0x20>)
 8101186:	781b      	ldrb	r3, [r3, #0]
 8101188:	461a      	mov	r2, r3
 810118a:	4b06      	ldr	r3, [pc, #24]	@ (81011a4 <HAL_IncTick+0x24>)
 810118c:	681b      	ldr	r3, [r3, #0]
 810118e:	4413      	add	r3, r2
 8101190:	4a04      	ldr	r2, [pc, #16]	@ (81011a4 <HAL_IncTick+0x24>)
 8101192:	6013      	str	r3, [r2, #0]
}
 8101194:	bf00      	nop
 8101196:	46bd      	mov	sp, r7
 8101198:	f85d 7b04 	ldr.w	r7, [sp], #4
 810119c:	4770      	bx	lr
 810119e:	bf00      	nop
 81011a0:	1000000c 	.word	0x1000000c
 81011a4:	100001f8 	.word	0x100001f8

081011a8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 81011a8:	b480      	push	{r7}
 81011aa:	af00      	add	r7, sp, #0
  return uwTick;
 81011ac:	4b03      	ldr	r3, [pc, #12]	@ (81011bc <HAL_GetTick+0x14>)
 81011ae:	681b      	ldr	r3, [r3, #0]
}
 81011b0:	4618      	mov	r0, r3
 81011b2:	46bd      	mov	sp, r7
 81011b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 81011b8:	4770      	bx	lr
 81011ba:	bf00      	nop
 81011bc:	100001f8 	.word	0x100001f8

081011c0 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay  specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 81011c0:	b580      	push	{r7, lr}
 81011c2:	b084      	sub	sp, #16
 81011c4:	af00      	add	r7, sp, #0
 81011c6:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 81011c8:	f7ff ffee 	bl	81011a8 <HAL_GetTick>
 81011cc:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 81011ce:	687b      	ldr	r3, [r7, #4]
 81011d0:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 81011d2:	68fb      	ldr	r3, [r7, #12]
 81011d4:	f1b3 3fff 	cmp.w	r3, #4294967295	@ 0xffffffff
 81011d8:	d005      	beq.n	81011e6 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 81011da:	4b0a      	ldr	r3, [pc, #40]	@ (8101204 <HAL_Delay+0x44>)
 81011dc:	781b      	ldrb	r3, [r3, #0]
 81011de:	461a      	mov	r2, r3
 81011e0:	68fb      	ldr	r3, [r7, #12]
 81011e2:	4413      	add	r3, r2
 81011e4:	60fb      	str	r3, [r7, #12]
  }

  while ((HAL_GetTick() - tickstart) < wait)
 81011e6:	bf00      	nop
 81011e8:	f7ff ffde 	bl	81011a8 <HAL_GetTick>
 81011ec:	4602      	mov	r2, r0
 81011ee:	68bb      	ldr	r3, [r7, #8]
 81011f0:	1ad3      	subs	r3, r2, r3
 81011f2:	68fa      	ldr	r2, [r7, #12]
 81011f4:	429a      	cmp	r2, r3
 81011f6:	d8f7      	bhi.n	81011e8 <HAL_Delay+0x28>
  {
  }
}
 81011f8:	bf00      	nop
 81011fa:	bf00      	nop
 81011fc:	3710      	adds	r7, #16
 81011fe:	46bd      	mov	sp, r7
 8101200:	bd80      	pop	{r7, pc}
 8101202:	bf00      	nop
 8101204:	1000000c 	.word	0x1000000c

08101208 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8101208:	b480      	push	{r7}
 810120a:	b085      	sub	sp, #20
 810120c:	af00      	add	r7, sp, #0
 810120e:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8101210:	687b      	ldr	r3, [r7, #4]
 8101212:	f003 0307 	and.w	r3, r3, #7
 8101216:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 8101218:	4b0c      	ldr	r3, [pc, #48]	@ (810124c <__NVIC_SetPriorityGrouping+0x44>)
 810121a:	68db      	ldr	r3, [r3, #12]
 810121c:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 810121e:	68ba      	ldr	r2, [r7, #8]
 8101220:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8101224:	4013      	ands	r3, r2
 8101226:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 8101228:	68fb      	ldr	r3, [r7, #12]
 810122a:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 810122c:	68bb      	ldr	r3, [r7, #8]
 810122e:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8101230:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8101234:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8101238:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 810123a:	4a04      	ldr	r2, [pc, #16]	@ (810124c <__NVIC_SetPriorityGrouping+0x44>)
 810123c:	68bb      	ldr	r3, [r7, #8]
 810123e:	60d3      	str	r3, [r2, #12]
}
 8101240:	bf00      	nop
 8101242:	3714      	adds	r7, #20
 8101244:	46bd      	mov	sp, r7
 8101246:	f85d 7b04 	ldr.w	r7, [sp], #4
 810124a:	4770      	bx	lr
 810124c:	e000ed00 	.word	0xe000ed00

08101250 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8101250:	b480      	push	{r7}
 8101252:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8101254:	4b04      	ldr	r3, [pc, #16]	@ (8101268 <__NVIC_GetPriorityGrouping+0x18>)
 8101256:	68db      	ldr	r3, [r3, #12]
 8101258:	0a1b      	lsrs	r3, r3, #8
 810125a:	f003 0307 	and.w	r3, r3, #7
}
 810125e:	4618      	mov	r0, r3
 8101260:	46bd      	mov	sp, r7
 8101262:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101266:	4770      	bx	lr
 8101268:	e000ed00 	.word	0xe000ed00

0810126c <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 810126c:	b480      	push	{r7}
 810126e:	b083      	sub	sp, #12
 8101270:	af00      	add	r7, sp, #0
 8101272:	4603      	mov	r3, r0
 8101274:	6039      	str	r1, [r7, #0]
 8101276:	80fb      	strh	r3, [r7, #6]
  if ((int32_t)(IRQn) >= 0)
 8101278:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 810127c:	2b00      	cmp	r3, #0
 810127e:	db0a      	blt.n	8101296 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8101280:	683b      	ldr	r3, [r7, #0]
 8101282:	b2da      	uxtb	r2, r3
 8101284:	490c      	ldr	r1, [pc, #48]	@ (81012b8 <__NVIC_SetPriority+0x4c>)
 8101286:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 810128a:	0112      	lsls	r2, r2, #4
 810128c:	b2d2      	uxtb	r2, r2
 810128e:	440b      	add	r3, r1
 8101290:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8101294:	e00a      	b.n	81012ac <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8101296:	683b      	ldr	r3, [r7, #0]
 8101298:	b2da      	uxtb	r2, r3
 810129a:	4908      	ldr	r1, [pc, #32]	@ (81012bc <__NVIC_SetPriority+0x50>)
 810129c:	88fb      	ldrh	r3, [r7, #6]
 810129e:	f003 030f 	and.w	r3, r3, #15
 81012a2:	3b04      	subs	r3, #4
 81012a4:	0112      	lsls	r2, r2, #4
 81012a6:	b2d2      	uxtb	r2, r2
 81012a8:	440b      	add	r3, r1
 81012aa:	761a      	strb	r2, [r3, #24]
}
 81012ac:	bf00      	nop
 81012ae:	370c      	adds	r7, #12
 81012b0:	46bd      	mov	sp, r7
 81012b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 81012b6:	4770      	bx	lr
 81012b8:	e000e100 	.word	0xe000e100
 81012bc:	e000ed00 	.word	0xe000ed00

081012c0 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 81012c0:	b480      	push	{r7}
 81012c2:	b089      	sub	sp, #36	@ 0x24
 81012c4:	af00      	add	r7, sp, #0
 81012c6:	60f8      	str	r0, [r7, #12]
 81012c8:	60b9      	str	r1, [r7, #8]
 81012ca:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 81012cc:	68fb      	ldr	r3, [r7, #12]
 81012ce:	f003 0307 	and.w	r3, r3, #7
 81012d2:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 81012d4:	69fb      	ldr	r3, [r7, #28]
 81012d6:	f1c3 0307 	rsb	r3, r3, #7
 81012da:	2b04      	cmp	r3, #4
 81012dc:	bf28      	it	cs
 81012de:	2304      	movcs	r3, #4
 81012e0:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 81012e2:	69fb      	ldr	r3, [r7, #28]
 81012e4:	3304      	adds	r3, #4
 81012e6:	2b06      	cmp	r3, #6
 81012e8:	d902      	bls.n	81012f0 <NVIC_EncodePriority+0x30>
 81012ea:	69fb      	ldr	r3, [r7, #28]
 81012ec:	3b03      	subs	r3, #3
 81012ee:	e000      	b.n	81012f2 <NVIC_EncodePriority+0x32>
 81012f0:	2300      	movs	r3, #0
 81012f2:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 81012f4:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 81012f8:	69bb      	ldr	r3, [r7, #24]
 81012fa:	fa02 f303 	lsl.w	r3, r2, r3
 81012fe:	43da      	mvns	r2, r3
 8101300:	68bb      	ldr	r3, [r7, #8]
 8101302:	401a      	ands	r2, r3
 8101304:	697b      	ldr	r3, [r7, #20]
 8101306:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8101308:	f04f 31ff 	mov.w	r1, #4294967295	@ 0xffffffff
 810130c:	697b      	ldr	r3, [r7, #20]
 810130e:	fa01 f303 	lsl.w	r3, r1, r3
 8101312:	43d9      	mvns	r1, r3
 8101314:	687b      	ldr	r3, [r7, #4]
 8101316:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8101318:	4313      	orrs	r3, r2
         );
}
 810131a:	4618      	mov	r0, r3
 810131c:	3724      	adds	r7, #36	@ 0x24
 810131e:	46bd      	mov	sp, r7
 8101320:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101324:	4770      	bx	lr
	...

08101328 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8101328:	b580      	push	{r7, lr}
 810132a:	b082      	sub	sp, #8
 810132c:	af00      	add	r7, sp, #0
 810132e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8101330:	687b      	ldr	r3, [r7, #4]
 8101332:	3b01      	subs	r3, #1
 8101334:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8101338:	d301      	bcc.n	810133e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 810133a:	2301      	movs	r3, #1
 810133c:	e00f      	b.n	810135e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 810133e:	4a0a      	ldr	r2, [pc, #40]	@ (8101368 <SysTick_Config+0x40>)
 8101340:	687b      	ldr	r3, [r7, #4]
 8101342:	3b01      	subs	r3, #1
 8101344:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8101346:	210f      	movs	r1, #15
 8101348:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 810134c:	f7ff ff8e 	bl	810126c <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8101350:	4b05      	ldr	r3, [pc, #20]	@ (8101368 <SysTick_Config+0x40>)
 8101352:	2200      	movs	r2, #0
 8101354:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8101356:	4b04      	ldr	r3, [pc, #16]	@ (8101368 <SysTick_Config+0x40>)
 8101358:	2207      	movs	r2, #7
 810135a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 810135c:	2300      	movs	r3, #0
}
 810135e:	4618      	mov	r0, r3
 8101360:	3708      	adds	r7, #8
 8101362:	46bd      	mov	sp, r7
 8101364:	bd80      	pop	{r7, pc}
 8101366:	bf00      	nop
 8101368:	e000e010 	.word	0xe000e010

0810136c <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible.
  *         The pending IRQ priority will be managed only by the subpriority.
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 810136c:	b580      	push	{r7, lr}
 810136e:	b082      	sub	sp, #8
 8101370:	af00      	add	r7, sp, #0
 8101372:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));

  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8101374:	6878      	ldr	r0, [r7, #4]
 8101376:	f7ff ff47 	bl	8101208 <__NVIC_SetPriorityGrouping>
}
 810137a:	bf00      	nop
 810137c:	3708      	adds	r7, #8
 810137e:	46bd      	mov	sp, r7
 8101380:	bd80      	pop	{r7, pc}

08101382 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8101382:	b580      	push	{r7, lr}
 8101384:	b086      	sub	sp, #24
 8101386:	af00      	add	r7, sp, #0
 8101388:	4603      	mov	r3, r0
 810138a:	60b9      	str	r1, [r7, #8]
 810138c:	607a      	str	r2, [r7, #4]
 810138e:	81fb      	strh	r3, [r7, #14]

  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));

  prioritygroup = NVIC_GetPriorityGrouping();
 8101390:	f7ff ff5e 	bl	8101250 <__NVIC_GetPriorityGrouping>
 8101394:	6178      	str	r0, [r7, #20]

  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 8101396:	687a      	ldr	r2, [r7, #4]
 8101398:	68b9      	ldr	r1, [r7, #8]
 810139a:	6978      	ldr	r0, [r7, #20]
 810139c:	f7ff ff90 	bl	81012c0 <NVIC_EncodePriority>
 81013a0:	4602      	mov	r2, r0
 81013a2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 81013a6:	4611      	mov	r1, r2
 81013a8:	4618      	mov	r0, r3
 81013aa:	f7ff ff5f 	bl	810126c <__NVIC_SetPriority>
}
 81013ae:	bf00      	nop
 81013b0:	3718      	adds	r7, #24
 81013b2:	46bd      	mov	sp, r7
 81013b4:	bd80      	pop	{r7, pc}

081013b6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status   - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 81013b6:	b580      	push	{r7, lr}
 81013b8:	b082      	sub	sp, #8
 81013ba:	af00      	add	r7, sp, #0
 81013bc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 81013be:	6878      	ldr	r0, [r7, #4]
 81013c0:	f7ff ffb2 	bl	8101328 <SysTick_Config>
 81013c4:	4603      	mov	r3, r0
}
 81013c6:	4618      	mov	r0, r3
 81013c8:	3708      	adds	r7, #8
 81013ca:	46bd      	mov	sp, r7
 81013cc:	bd80      	pop	{r7, pc}
	...

081013d0 <HAL_GetCurrentCPUID>:
/**
  * @brief  Returns the current CPU ID.
  * @retval CPU identifier
  */
uint32_t HAL_GetCurrentCPUID(void)
{
 81013d0:	b480      	push	{r7}
 81013d2:	af00      	add	r7, sp, #0
  if (((SCB->CPUID & 0x000000F0U) >> 4 )== 0x7U)
 81013d4:	4b07      	ldr	r3, [pc, #28]	@ (81013f4 <HAL_GetCurrentCPUID+0x24>)
 81013d6:	681b      	ldr	r3, [r3, #0]
 81013d8:	091b      	lsrs	r3, r3, #4
 81013da:	f003 030f 	and.w	r3, r3, #15
 81013de:	2b07      	cmp	r3, #7
 81013e0:	d101      	bne.n	81013e6 <HAL_GetCurrentCPUID+0x16>
  {
    return  CM7_CPUID;
 81013e2:	2303      	movs	r3, #3
 81013e4:	e000      	b.n	81013e8 <HAL_GetCurrentCPUID+0x18>
  }
  else
  {
    return CM4_CPUID;
 81013e6:	2301      	movs	r3, #1
  }
}
 81013e8:	4618      	mov	r0, r3
 81013ea:	46bd      	mov	sp, r7
 81013ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 81013f0:	4770      	bx	lr
 81013f2:	bf00      	nop
 81013f4:	e000ed00 	.word	0xe000ed00

081013f8 <HAL_GPIO_Init>:
  * @param  GPIO_Init: pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 81013f8:	b480      	push	{r7}
 81013fa:	b089      	sub	sp, #36	@ 0x24
 81013fc:	af00      	add	r7, sp, #0
 81013fe:	6078      	str	r0, [r7, #4]
 8101400:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 8101402:	2300      	movs	r3, #0
 8101404:	61fb      	str	r3, [r7, #28]
  uint32_t iocurrent;
  uint32_t temp;
  EXTI_Core_TypeDef *EXTI_CurrentCPU;

#if defined(DUAL_CORE) && defined(CORE_CM4)
  EXTI_CurrentCPU = EXTI_D2; /* EXTI for CM4 CPU */
 8101406:	4b89      	ldr	r3, [pc, #548]	@ (810162c <HAL_GPIO_Init+0x234>)
 8101408:	617b      	str	r3, [r7, #20]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 810140a:	e194      	b.n	8101736 <HAL_GPIO_Init+0x33e>
  {
    /* Get current io position */
    iocurrent = (GPIO_Init->Pin) & (1UL << position);
 810140c:	683b      	ldr	r3, [r7, #0]
 810140e:	681a      	ldr	r2, [r3, #0]
 8101410:	2101      	movs	r1, #1
 8101412:	69fb      	ldr	r3, [r7, #28]
 8101414:	fa01 f303 	lsl.w	r3, r1, r3
 8101418:	4013      	ands	r3, r2
 810141a:	613b      	str	r3, [r7, #16]

    if (iocurrent != 0x00U)
 810141c:	693b      	ldr	r3, [r7, #16]
 810141e:	2b00      	cmp	r3, #0
 8101420:	f000 8186 	beq.w	8101730 <HAL_GPIO_Init+0x338>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 8101424:	683b      	ldr	r3, [r7, #0]
 8101426:	685b      	ldr	r3, [r3, #4]
 8101428:	f003 0303 	and.w	r3, r3, #3
 810142c:	2b01      	cmp	r3, #1
 810142e:	d005      	beq.n	810143c <HAL_GPIO_Init+0x44>
 8101430:	683b      	ldr	r3, [r7, #0]
 8101432:	685b      	ldr	r3, [r3, #4]
 8101434:	f003 0303 	and.w	r3, r3, #3
 8101438:	2b02      	cmp	r3, #2
 810143a:	d130      	bne.n	810149e <HAL_GPIO_Init+0xa6>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));

        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 810143c:	687b      	ldr	r3, [r7, #4]
 810143e:	689b      	ldr	r3, [r3, #8]
 8101440:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDR_OSPEED0 << (position * 2U));
 8101442:	69fb      	ldr	r3, [r7, #28]
 8101444:	005b      	lsls	r3, r3, #1
 8101446:	2203      	movs	r2, #3
 8101448:	fa02 f303 	lsl.w	r3, r2, r3
 810144c:	43db      	mvns	r3, r3
 810144e:	69ba      	ldr	r2, [r7, #24]
 8101450:	4013      	ands	r3, r2
 8101452:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8101454:	683b      	ldr	r3, [r7, #0]
 8101456:	68da      	ldr	r2, [r3, #12]
 8101458:	69fb      	ldr	r3, [r7, #28]
 810145a:	005b      	lsls	r3, r3, #1
 810145c:	fa02 f303 	lsl.w	r3, r2, r3
 8101460:	69ba      	ldr	r2, [r7, #24]
 8101462:	4313      	orrs	r3, r2
 8101464:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8101466:	687b      	ldr	r3, [r7, #4]
 8101468:	69ba      	ldr	r2, [r7, #24]
 810146a:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 810146c:	687b      	ldr	r3, [r7, #4]
 810146e:	685b      	ldr	r3, [r3, #4]
 8101470:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT0 << position) ;
 8101472:	2201      	movs	r2, #1
 8101474:	69fb      	ldr	r3, [r7, #28]
 8101476:	fa02 f303 	lsl.w	r3, r2, r3
 810147a:	43db      	mvns	r3, r3
 810147c:	69ba      	ldr	r2, [r7, #24]
 810147e:	4013      	ands	r3, r2
 8101480:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8101482:	683b      	ldr	r3, [r7, #0]
 8101484:	685b      	ldr	r3, [r3, #4]
 8101486:	091b      	lsrs	r3, r3, #4
 8101488:	f003 0201 	and.w	r2, r3, #1
 810148c:	69fb      	ldr	r3, [r7, #28]
 810148e:	fa02 f303 	lsl.w	r3, r2, r3
 8101492:	69ba      	ldr	r2, [r7, #24]
 8101494:	4313      	orrs	r3, r2
 8101496:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8101498:	687b      	ldr	r3, [r7, #4]
 810149a:	69ba      	ldr	r2, [r7, #24]
 810149c:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 810149e:	683b      	ldr	r3, [r7, #0]
 81014a0:	685b      	ldr	r3, [r3, #4]
 81014a2:	f003 0303 	and.w	r3, r3, #3
 81014a6:	2b03      	cmp	r3, #3
 81014a8:	d017      	beq.n	81014da <HAL_GPIO_Init+0xe2>
      {
       /* Check the Pull parameter */
       assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 81014aa:	687b      	ldr	r3, [r7, #4]
 81014ac:	68db      	ldr	r3, [r3, #12]
 81014ae:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 81014b0:	69fb      	ldr	r3, [r7, #28]
 81014b2:	005b      	lsls	r3, r3, #1
 81014b4:	2203      	movs	r2, #3
 81014b6:	fa02 f303 	lsl.w	r3, r2, r3
 81014ba:	43db      	mvns	r3, r3
 81014bc:	69ba      	ldr	r2, [r7, #24]
 81014be:	4013      	ands	r3, r2
 81014c0:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 81014c2:	683b      	ldr	r3, [r7, #0]
 81014c4:	689a      	ldr	r2, [r3, #8]
 81014c6:	69fb      	ldr	r3, [r7, #28]
 81014c8:	005b      	lsls	r3, r3, #1
 81014ca:	fa02 f303 	lsl.w	r3, r2, r3
 81014ce:	69ba      	ldr	r2, [r7, #24]
 81014d0:	4313      	orrs	r3, r2
 81014d2:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 81014d4:	687b      	ldr	r3, [r7, #4]
 81014d6:	69ba      	ldr	r2, [r7, #24]
 81014d8:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 81014da:	683b      	ldr	r3, [r7, #0]
 81014dc:	685b      	ldr	r3, [r3, #4]
 81014de:	f003 0303 	and.w	r3, r3, #3
 81014e2:	2b02      	cmp	r3, #2
 81014e4:	d123      	bne.n	810152e <HAL_GPIO_Init+0x136>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 81014e6:	69fb      	ldr	r3, [r7, #28]
 81014e8:	08da      	lsrs	r2, r3, #3
 81014ea:	687b      	ldr	r3, [r7, #4]
 81014ec:	3208      	adds	r2, #8
 81014ee:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 81014f2:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((position & 0x07U) * 4U));
 81014f4:	69fb      	ldr	r3, [r7, #28]
 81014f6:	f003 0307 	and.w	r3, r3, #7
 81014fa:	009b      	lsls	r3, r3, #2
 81014fc:	220f      	movs	r2, #15
 81014fe:	fa02 f303 	lsl.w	r3, r2, r3
 8101502:	43db      	mvns	r3, r3
 8101504:	69ba      	ldr	r2, [r7, #24]
 8101506:	4013      	ands	r3, r2
 8101508:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Alternate) << ((position & 0x07U) * 4U));
 810150a:	683b      	ldr	r3, [r7, #0]
 810150c:	691a      	ldr	r2, [r3, #16]
 810150e:	69fb      	ldr	r3, [r7, #28]
 8101510:	f003 0307 	and.w	r3, r3, #7
 8101514:	009b      	lsls	r3, r3, #2
 8101516:	fa02 f303 	lsl.w	r3, r2, r3
 810151a:	69ba      	ldr	r2, [r7, #24]
 810151c:	4313      	orrs	r3, r2
 810151e:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 8101520:	69fb      	ldr	r3, [r7, #28]
 8101522:	08da      	lsrs	r2, r3, #3
 8101524:	687b      	ldr	r3, [r7, #4]
 8101526:	3208      	adds	r2, #8
 8101528:	69b9      	ldr	r1, [r7, #24]
 810152a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 810152e:	687b      	ldr	r3, [r7, #4]
 8101530:	681b      	ldr	r3, [r3, #0]
 8101532:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8101534:	69fb      	ldr	r3, [r7, #28]
 8101536:	005b      	lsls	r3, r3, #1
 8101538:	2203      	movs	r2, #3
 810153a:	fa02 f303 	lsl.w	r3, r2, r3
 810153e:	43db      	mvns	r3, r3
 8101540:	69ba      	ldr	r2, [r7, #24]
 8101542:	4013      	ands	r3, r2
 8101544:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8101546:	683b      	ldr	r3, [r7, #0]
 8101548:	685b      	ldr	r3, [r3, #4]
 810154a:	f003 0203 	and.w	r2, r3, #3
 810154e:	69fb      	ldr	r3, [r7, #28]
 8101550:	005b      	lsls	r3, r3, #1
 8101552:	fa02 f303 	lsl.w	r3, r2, r3
 8101556:	69ba      	ldr	r2, [r7, #24]
 8101558:	4313      	orrs	r3, r2
 810155a:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 810155c:	687b      	ldr	r3, [r7, #4]
 810155e:	69ba      	ldr	r2, [r7, #24]
 8101560:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8101562:	683b      	ldr	r3, [r7, #0]
 8101564:	685b      	ldr	r3, [r3, #4]
 8101566:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 810156a:	2b00      	cmp	r3, #0
 810156c:	f000 80e0 	beq.w	8101730 <HAL_GPIO_Init+0x338>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8101570:	4b2f      	ldr	r3, [pc, #188]	@ (8101630 <HAL_GPIO_Init+0x238>)
 8101572:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8101576:	4a2e      	ldr	r2, [pc, #184]	@ (8101630 <HAL_GPIO_Init+0x238>)
 8101578:	f043 0302 	orr.w	r3, r3, #2
 810157c:	f8c2 30f4 	str.w	r3, [r2, #244]	@ 0xf4
 8101580:	4b2b      	ldr	r3, [pc, #172]	@ (8101630 <HAL_GPIO_Init+0x238>)
 8101582:	f8d3 30f4 	ldr.w	r3, [r3, #244]	@ 0xf4
 8101586:	f003 0302 	and.w	r3, r3, #2
 810158a:	60fb      	str	r3, [r7, #12]
 810158c:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 810158e:	4a29      	ldr	r2, [pc, #164]	@ (8101634 <HAL_GPIO_Init+0x23c>)
 8101590:	69fb      	ldr	r3, [r7, #28]
 8101592:	089b      	lsrs	r3, r3, #2
 8101594:	3302      	adds	r3, #2
 8101596:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 810159a:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FUL << (4U * (position & 0x03U)));
 810159c:	69fb      	ldr	r3, [r7, #28]
 810159e:	f003 0303 	and.w	r3, r3, #3
 81015a2:	009b      	lsls	r3, r3, #2
 81015a4:	220f      	movs	r2, #15
 81015a6:	fa02 f303 	lsl.w	r3, r2, r3
 81015aa:	43db      	mvns	r3, r3
 81015ac:	69ba      	ldr	r2, [r7, #24]
 81015ae:	4013      	ands	r3, r2
 81015b0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_GET_INDEX(GPIOx) << (4U * (position & 0x03U)));
 81015b2:	687b      	ldr	r3, [r7, #4]
 81015b4:	4a20      	ldr	r2, [pc, #128]	@ (8101638 <HAL_GPIO_Init+0x240>)
 81015b6:	4293      	cmp	r3, r2
 81015b8:	d052      	beq.n	8101660 <HAL_GPIO_Init+0x268>
 81015ba:	687b      	ldr	r3, [r7, #4]
 81015bc:	4a1f      	ldr	r2, [pc, #124]	@ (810163c <HAL_GPIO_Init+0x244>)
 81015be:	4293      	cmp	r3, r2
 81015c0:	d031      	beq.n	8101626 <HAL_GPIO_Init+0x22e>
 81015c2:	687b      	ldr	r3, [r7, #4]
 81015c4:	4a1e      	ldr	r2, [pc, #120]	@ (8101640 <HAL_GPIO_Init+0x248>)
 81015c6:	4293      	cmp	r3, r2
 81015c8:	d02b      	beq.n	8101622 <HAL_GPIO_Init+0x22a>
 81015ca:	687b      	ldr	r3, [r7, #4]
 81015cc:	4a1d      	ldr	r2, [pc, #116]	@ (8101644 <HAL_GPIO_Init+0x24c>)
 81015ce:	4293      	cmp	r3, r2
 81015d0:	d025      	beq.n	810161e <HAL_GPIO_Init+0x226>
 81015d2:	687b      	ldr	r3, [r7, #4]
 81015d4:	4a1c      	ldr	r2, [pc, #112]	@ (8101648 <HAL_GPIO_Init+0x250>)
 81015d6:	4293      	cmp	r3, r2
 81015d8:	d01f      	beq.n	810161a <HAL_GPIO_Init+0x222>
 81015da:	687b      	ldr	r3, [r7, #4]
 81015dc:	4a1b      	ldr	r2, [pc, #108]	@ (810164c <HAL_GPIO_Init+0x254>)
 81015de:	4293      	cmp	r3, r2
 81015e0:	d019      	beq.n	8101616 <HAL_GPIO_Init+0x21e>
 81015e2:	687b      	ldr	r3, [r7, #4]
 81015e4:	4a1a      	ldr	r2, [pc, #104]	@ (8101650 <HAL_GPIO_Init+0x258>)
 81015e6:	4293      	cmp	r3, r2
 81015e8:	d013      	beq.n	8101612 <HAL_GPIO_Init+0x21a>
 81015ea:	687b      	ldr	r3, [r7, #4]
 81015ec:	4a19      	ldr	r2, [pc, #100]	@ (8101654 <HAL_GPIO_Init+0x25c>)
 81015ee:	4293      	cmp	r3, r2
 81015f0:	d00d      	beq.n	810160e <HAL_GPIO_Init+0x216>
 81015f2:	687b      	ldr	r3, [r7, #4]
 81015f4:	4a18      	ldr	r2, [pc, #96]	@ (8101658 <HAL_GPIO_Init+0x260>)
 81015f6:	4293      	cmp	r3, r2
 81015f8:	d007      	beq.n	810160a <HAL_GPIO_Init+0x212>
 81015fa:	687b      	ldr	r3, [r7, #4]
 81015fc:	4a17      	ldr	r2, [pc, #92]	@ (810165c <HAL_GPIO_Init+0x264>)
 81015fe:	4293      	cmp	r3, r2
 8101600:	d101      	bne.n	8101606 <HAL_GPIO_Init+0x20e>
 8101602:	2309      	movs	r3, #9
 8101604:	e02d      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 8101606:	230a      	movs	r3, #10
 8101608:	e02b      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 810160a:	2308      	movs	r3, #8
 810160c:	e029      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 810160e:	2307      	movs	r3, #7
 8101610:	e027      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 8101612:	2306      	movs	r3, #6
 8101614:	e025      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 8101616:	2305      	movs	r3, #5
 8101618:	e023      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 810161a:	2304      	movs	r3, #4
 810161c:	e021      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 810161e:	2303      	movs	r3, #3
 8101620:	e01f      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 8101622:	2302      	movs	r3, #2
 8101624:	e01d      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 8101626:	2301      	movs	r3, #1
 8101628:	e01b      	b.n	8101662 <HAL_GPIO_Init+0x26a>
 810162a:	bf00      	nop
 810162c:	580000c0 	.word	0x580000c0
 8101630:	58024400 	.word	0x58024400
 8101634:	58000400 	.word	0x58000400
 8101638:	58020000 	.word	0x58020000
 810163c:	58020400 	.word	0x58020400
 8101640:	58020800 	.word	0x58020800
 8101644:	58020c00 	.word	0x58020c00
 8101648:	58021000 	.word	0x58021000
 810164c:	58021400 	.word	0x58021400
 8101650:	58021800 	.word	0x58021800
 8101654:	58021c00 	.word	0x58021c00
 8101658:	58022000 	.word	0x58022000
 810165c:	58022400 	.word	0x58022400
 8101660:	2300      	movs	r3, #0
 8101662:	69fa      	ldr	r2, [r7, #28]
 8101664:	f002 0203 	and.w	r2, r2, #3
 8101668:	0092      	lsls	r2, r2, #2
 810166a:	4093      	lsls	r3, r2
 810166c:	69ba      	ldr	r2, [r7, #24]
 810166e:	4313      	orrs	r3, r2
 8101670:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8101672:	4938      	ldr	r1, [pc, #224]	@ (8101754 <HAL_GPIO_Init+0x35c>)
 8101674:	69fb      	ldr	r3, [r7, #28]
 8101676:	089b      	lsrs	r3, r3, #2
 8101678:	3302      	adds	r3, #2
 810167a:	69ba      	ldr	r2, [r7, #24]
 810167c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR1;
 8101680:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 8101684:	681b      	ldr	r3, [r3, #0]
 8101686:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 8101688:	693b      	ldr	r3, [r7, #16]
 810168a:	43db      	mvns	r3, r3
 810168c:	69ba      	ldr	r2, [r7, #24]
 810168e:	4013      	ands	r3, r2
 8101690:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8101692:	683b      	ldr	r3, [r7, #0]
 8101694:	685b      	ldr	r3, [r3, #4]
 8101696:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 810169a:	2b00      	cmp	r3, #0
 810169c:	d003      	beq.n	81016a6 <HAL_GPIO_Init+0x2ae>
        {
          temp |= iocurrent;
 810169e:	69ba      	ldr	r2, [r7, #24]
 81016a0:	693b      	ldr	r3, [r7, #16]
 81016a2:	4313      	orrs	r3, r2
 81016a4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR1 = temp;
 81016a6:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 81016aa:	69bb      	ldr	r3, [r7, #24]
 81016ac:	6013      	str	r3, [r2, #0]

        temp = EXTI->FTSR1;
 81016ae:	f04f 43b0 	mov.w	r3, #1476395008	@ 0x58000000
 81016b2:	685b      	ldr	r3, [r3, #4]
 81016b4:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 81016b6:	693b      	ldr	r3, [r7, #16]
 81016b8:	43db      	mvns	r3, r3
 81016ba:	69ba      	ldr	r2, [r7, #24]
 81016bc:	4013      	ands	r3, r2
 81016be:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 81016c0:	683b      	ldr	r3, [r7, #0]
 81016c2:	685b      	ldr	r3, [r3, #4]
 81016c4:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 81016c8:	2b00      	cmp	r3, #0
 81016ca:	d003      	beq.n	81016d4 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 81016cc:	69ba      	ldr	r2, [r7, #24]
 81016ce:	693b      	ldr	r3, [r7, #16]
 81016d0:	4313      	orrs	r3, r2
 81016d2:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR1 = temp;
 81016d4:	f04f 42b0 	mov.w	r2, #1476395008	@ 0x58000000
 81016d8:	69bb      	ldr	r3, [r7, #24]
 81016da:	6053      	str	r3, [r2, #4]

        temp = EXTI_CurrentCPU->EMR1;
 81016dc:	697b      	ldr	r3, [r7, #20]
 81016de:	685b      	ldr	r3, [r3, #4]
 81016e0:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 81016e2:	693b      	ldr	r3, [r7, #16]
 81016e4:	43db      	mvns	r3, r3
 81016e6:	69ba      	ldr	r2, [r7, #24]
 81016e8:	4013      	ands	r3, r2
 81016ea:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 81016ec:	683b      	ldr	r3, [r7, #0]
 81016ee:	685b      	ldr	r3, [r3, #4]
 81016f0:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 81016f4:	2b00      	cmp	r3, #0
 81016f6:	d003      	beq.n	8101700 <HAL_GPIO_Init+0x308>
        {
          temp |= iocurrent;
 81016f8:	69ba      	ldr	r2, [r7, #24]
 81016fa:	693b      	ldr	r3, [r7, #16]
 81016fc:	4313      	orrs	r3, r2
 81016fe:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->EMR1 = temp;
 8101700:	697b      	ldr	r3, [r7, #20]
 8101702:	69ba      	ldr	r2, [r7, #24]
 8101704:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI_CurrentCPU->IMR1;
 8101706:	697b      	ldr	r3, [r7, #20]
 8101708:	681b      	ldr	r3, [r3, #0]
 810170a:	61bb      	str	r3, [r7, #24]
        temp &= ~(iocurrent);
 810170c:	693b      	ldr	r3, [r7, #16]
 810170e:	43db      	mvns	r3, r3
 8101710:	69ba      	ldr	r2, [r7, #24]
 8101712:	4013      	ands	r3, r2
 8101714:	61bb      	str	r3, [r7, #24]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8101716:	683b      	ldr	r3, [r7, #0]
 8101718:	685b      	ldr	r3, [r3, #4]
 810171a:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 810171e:	2b00      	cmp	r3, #0
 8101720:	d003      	beq.n	810172a <HAL_GPIO_Init+0x332>
        {
          temp |= iocurrent;
 8101722:	69ba      	ldr	r2, [r7, #24]
 8101724:	693b      	ldr	r3, [r7, #16]
 8101726:	4313      	orrs	r3, r2
 8101728:	61bb      	str	r3, [r7, #24]
        }
        EXTI_CurrentCPU->IMR1 = temp;
 810172a:	697b      	ldr	r3, [r7, #20]
 810172c:	69ba      	ldr	r2, [r7, #24]
 810172e:	601a      	str	r2, [r3, #0]
      }
    }

    position++;
 8101730:	69fb      	ldr	r3, [r7, #28]
 8101732:	3301      	adds	r3, #1
 8101734:	61fb      	str	r3, [r7, #28]
  while (((GPIO_Init->Pin) >> position) != 0x00U)
 8101736:	683b      	ldr	r3, [r7, #0]
 8101738:	681a      	ldr	r2, [r3, #0]
 810173a:	69fb      	ldr	r3, [r7, #28]
 810173c:	fa22 f303 	lsr.w	r3, r2, r3
 8101740:	2b00      	cmp	r3, #0
 8101742:	f47f ae63 	bne.w	810140c <HAL_GPIO_Init+0x14>
  }
}
 8101746:	bf00      	nop
 8101748:	bf00      	nop
 810174a:	3724      	adds	r7, #36	@ 0x24
 810174c:	46bd      	mov	sp, r7
 810174e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101752:	4770      	bx	lr
 8101754:	58000400 	.word	0x58000400

08101758 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8101758:	b480      	push	{r7}
 810175a:	b083      	sub	sp, #12
 810175c:	af00      	add	r7, sp, #0
 810175e:	6078      	str	r0, [r7, #4]
 8101760:	460b      	mov	r3, r1
 8101762:	807b      	strh	r3, [r7, #2]
 8101764:	4613      	mov	r3, r2
 8101766:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8101768:	787b      	ldrb	r3, [r7, #1]
 810176a:	2b00      	cmp	r3, #0
 810176c:	d003      	beq.n	8101776 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 810176e:	887a      	ldrh	r2, [r7, #2]
 8101770:	687b      	ldr	r3, [r7, #4]
 8101772:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
  }
}
 8101774:	e003      	b.n	810177e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << GPIO_NUMBER;
 8101776:	887b      	ldrh	r3, [r7, #2]
 8101778:	041a      	lsls	r2, r3, #16
 810177a:	687b      	ldr	r3, [r7, #4]
 810177c:	619a      	str	r2, [r3, #24]
}
 810177e:	bf00      	nop
 8101780:	370c      	adds	r7, #12
 8101782:	46bd      	mov	sp, r7
 8101784:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101788:	4770      	bx	lr

0810178a <HAL_GPIO_TogglePin>:
  * @param  GPIOx: Where x can be (A..K) to select the GPIO peripheral.
  * @param  GPIO_Pin: Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 810178a:	b480      	push	{r7}
 810178c:	b085      	sub	sp, #20
 810178e:	af00      	add	r7, sp, #0
 8101790:	6078      	str	r0, [r7, #4]
 8101792:	460b      	mov	r3, r1
 8101794:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8101796:	687b      	ldr	r3, [r7, #4]
 8101798:	695b      	ldr	r3, [r3, #20]
 810179a:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 810179c:	887a      	ldrh	r2, [r7, #2]
 810179e:	68fb      	ldr	r3, [r7, #12]
 81017a0:	4013      	ands	r3, r2
 81017a2:	041a      	lsls	r2, r3, #16
 81017a4:	68fb      	ldr	r3, [r7, #12]
 81017a6:	43d9      	mvns	r1, r3
 81017a8:	887b      	ldrh	r3, [r7, #2]
 81017aa:	400b      	ands	r3, r1
 81017ac:	431a      	orrs	r2, r3
 81017ae:	687b      	ldr	r3, [r7, #4]
 81017b0:	619a      	str	r2, [r3, #24]
}
 81017b2:	bf00      	nop
 81017b4:	3714      	adds	r7, #20
 81017b6:	46bd      	mov	sp, r7
 81017b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 81017bc:	4770      	bx	lr
	...

081017c0 <HAL_HSEM_ActivateNotification>:
  * @brief  Activate Semaphore release Notification for a given Semaphores Mask .
  * @param  SemMask: Mask of Released semaphores
  * @retval Semaphore Key
  */
void HAL_HSEM_ActivateNotification(uint32_t SemMask)
{
 81017c0:	b480      	push	{r7}
 81017c2:	b083      	sub	sp, #12
 81017c4:	af00      	add	r7, sp, #0
 81017c6:	6078      	str	r0, [r7, #4]
  {
    /*Use interrupt line 1 for CPU2 Master*/
    HSEM->C2IER |= SemMask;
  }
#else
  HSEM_COMMON->IER |= SemMask;
 81017c8:	4b05      	ldr	r3, [pc, #20]	@ (81017e0 <HAL_HSEM_ActivateNotification+0x20>)
 81017ca:	681a      	ldr	r2, [r3, #0]
 81017cc:	4904      	ldr	r1, [pc, #16]	@ (81017e0 <HAL_HSEM_ActivateNotification+0x20>)
 81017ce:	687b      	ldr	r3, [r7, #4]
 81017d0:	4313      	orrs	r3, r2
 81017d2:	600b      	str	r3, [r1, #0]
#endif
}
 81017d4:	bf00      	nop
 81017d6:	370c      	adds	r7, #12
 81017d8:	46bd      	mov	sp, r7
 81017da:	f85d 7b04 	ldr.w	r7, [sp], #4
 81017de:	4770      	bx	lr
 81017e0:	58026510 	.word	0x58026510

081017e4 <HAL_PWREx_EnterSTOPMode>:
  *            @arg PWR_D2_DOMAIN : Enter D2 Domain to DSTOP mode.
  *            @arg PWR_D3_DOMAIN : Enter D3/SRD Domain to DSTOP mode.
  * @retval None.
  */
void HAL_PWREx_EnterSTOPMode (uint32_t Regulator, uint8_t STOPEntry, uint32_t Domain)
{
 81017e4:	b580      	push	{r7, lr}
 81017e6:	b084      	sub	sp, #16
 81017e8:	af00      	add	r7, sp, #0
 81017ea:	60f8      	str	r0, [r7, #12]
 81017ec:	460b      	mov	r3, r1
 81017ee:	607a      	str	r2, [r7, #4]
 81017f0:	72fb      	strb	r3, [r7, #11]
  assert_param (IS_PWR_REGULATOR (Regulator));
  assert_param (IS_PWR_STOP_ENTRY (STOPEntry));
  assert_param (IS_PWR_DOMAIN (Domain));

  /* Select the regulator state in Stop mode */
  MODIFY_REG (PWR->CR1, PWR_CR1_LPDS, Regulator);
 81017f2:	4b37      	ldr	r3, [pc, #220]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 81017f4:	681b      	ldr	r3, [r3, #0]
 81017f6:	f023 0201 	bic.w	r2, r3, #1
 81017fa:	4935      	ldr	r1, [pc, #212]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 81017fc:	68fb      	ldr	r3, [r7, #12]
 81017fe:	4313      	orrs	r3, r2
 8101800:	600b      	str	r3, [r1, #0]

  /* Select the domain Power Down DeepSleep */
  if (Domain == PWR_D1_DOMAIN)
 8101802:	687b      	ldr	r3, [r7, #4]
 8101804:	2b00      	cmp	r3, #0
 8101806:	d123      	bne.n	8101850 <HAL_PWREx_EnterSTOPMode+0x6c>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM7_CPUID)
 8101808:	f7ff fde2 	bl	81013d0 <HAL_GetCurrentCPUID>
 810180c:	4603      	mov	r3, r0
 810180e:	2b03      	cmp	r3, #3
 8101810:	d158      	bne.n	81018c4 <HAL_PWREx_EnterSTOPMode+0xe0>
      return;
    }
#endif /* defined (DUAL_CORE) */

    /* Keep DSTOP mode when D1/CD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D1);
 8101812:	4b2f      	ldr	r3, [pc, #188]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101814:	691b      	ldr	r3, [r3, #16]
 8101816:	4a2e      	ldr	r2, [pc, #184]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101818:	f023 0301 	bic.w	r3, r3, #1
 810181c:	6113      	str	r3, [r2, #16]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810181e:	4b2d      	ldr	r3, [pc, #180]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101820:	691b      	ldr	r3, [r3, #16]
 8101822:	4a2c      	ldr	r2, [pc, #176]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101824:	f043 0304 	orr.w	r3, r3, #4
 8101828:	6113      	str	r3, [r2, #16]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 810182a:	f3bf 8f4f 	dsb	sy
}
 810182e:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 8101830:	f3bf 8f6f 	isb	sy
}
 8101834:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 8101836:	7afb      	ldrb	r3, [r7, #11]
 8101838:	2b01      	cmp	r3, #1
 810183a:	d101      	bne.n	8101840 <HAL_PWREx_EnterSTOPMode+0x5c>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 810183c:	bf30      	wfi
 810183e:	e000      	b.n	8101842 <HAL_PWREx_EnterSTOPMode+0x5e>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 8101840:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 8101842:	4b24      	ldr	r3, [pc, #144]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101844:	691b      	ldr	r3, [r3, #16]
 8101846:	4a23      	ldr	r2, [pc, #140]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101848:	f023 0304 	bic.w	r3, r3, #4
 810184c:	6113      	str	r3, [r2, #16]
 810184e:	e03c      	b.n	81018ca <HAL_PWREx_EnterSTOPMode+0xe6>
  }
#if defined (PWR_CPUCR_PDDS_D2)
  else if (Domain == PWR_D2_DOMAIN)
 8101850:	687b      	ldr	r3, [r7, #4]
 8101852:	2b01      	cmp	r3, #1
 8101854:	d123      	bne.n	810189e <HAL_PWREx_EnterSTOPMode+0xba>
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () != CM4_CPUID)
 8101856:	f7ff fdbb 	bl	81013d0 <HAL_GetCurrentCPUID>
 810185a:	4603      	mov	r3, r0
 810185c:	2b01      	cmp	r3, #1
 810185e:	d133      	bne.n	81018c8 <HAL_PWREx_EnterSTOPMode+0xe4>
      */
      return;
    }

    /* Keep DSTOP mode when D2 domain enters Deepsleep */
    CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D2);
 8101860:	4b1b      	ldr	r3, [pc, #108]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101862:	695b      	ldr	r3, [r3, #20]
 8101864:	4a1a      	ldr	r2, [pc, #104]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 8101866:	f023 0302 	bic.w	r3, r3, #2
 810186a:	6153      	str	r3, [r2, #20]

    /* Set SLEEPDEEP bit of Cortex System Control Register */
    SET_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 810186c:	4b19      	ldr	r3, [pc, #100]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 810186e:	691b      	ldr	r3, [r3, #16]
 8101870:	4a18      	ldr	r2, [pc, #96]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101872:	f043 0304 	orr.w	r3, r3, #4
 8101876:	6113      	str	r3, [r2, #16]
  __ASM volatile ("dsb 0xF":::"memory");
 8101878:	f3bf 8f4f 	dsb	sy
}
 810187c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 810187e:	f3bf 8f6f 	isb	sy
}
 8101882:	bf00      	nop
    /* Ensure that all instructions are done before entering STOP mode */
    __DSB ();
    __ISB ();

    /* Select Stop mode entry */
    if (STOPEntry == PWR_STOPENTRY_WFI)
 8101884:	7afb      	ldrb	r3, [r7, #11]
 8101886:	2b01      	cmp	r3, #1
 8101888:	d101      	bne.n	810188e <HAL_PWREx_EnterSTOPMode+0xaa>
    {
      /* Request Wait For Interrupt */
      __WFI ();
 810188a:	bf30      	wfi
 810188c:	e000      	b.n	8101890 <HAL_PWREx_EnterSTOPMode+0xac>
    }
    else
    {
      /* Request Wait For Event */
      __WFE ();
 810188e:	bf20      	wfe
    }

    /* Clear SLEEPDEEP bit of Cortex-Mx in the System Control Register */
    CLEAR_BIT (SCB->SCR, SCB_SCR_SLEEPDEEP_Msk);
 8101890:	4b10      	ldr	r3, [pc, #64]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101892:	691b      	ldr	r3, [r3, #16]
 8101894:	4a0f      	ldr	r2, [pc, #60]	@ (81018d4 <HAL_PWREx_EnterSTOPMode+0xf0>)
 8101896:	f023 0304 	bic.w	r3, r3, #4
 810189a:	6113      	str	r3, [r2, #16]
 810189c:	e015      	b.n	81018ca <HAL_PWREx_EnterSTOPMode+0xe6>
#endif /* defined (PWR_CPUCR_PDDS_D2) */
  else
  {
#if defined (DUAL_CORE)
    /* Check current core */
    if (HAL_GetCurrentCPUID () == CM7_CPUID)
 810189e:	f7ff fd97 	bl	81013d0 <HAL_GetCurrentCPUID>
 81018a2:	4603      	mov	r3, r0
 81018a4:	2b03      	cmp	r3, #3
 81018a6:	d106      	bne.n	81018b6 <HAL_PWREx_EnterSTOPMode+0xd2>
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
 81018a8:	4b09      	ldr	r3, [pc, #36]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 81018aa:	691b      	ldr	r3, [r3, #16]
 81018ac:	4a08      	ldr	r2, [pc, #32]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 81018ae:	f023 0304 	bic.w	r3, r3, #4
 81018b2:	6113      	str	r3, [r2, #16]
 81018b4:	e009      	b.n	81018ca <HAL_PWREx_EnterSTOPMode+0xe6>
    }
    else
    {
      /* Keep DSTOP mode when D3 domain enters Deepsleep */
      CLEAR_BIT (PWR->CPU2CR, PWR_CPU2CR_PDDS_D3);
 81018b6:	4b06      	ldr	r3, [pc, #24]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 81018b8:	695b      	ldr	r3, [r3, #20]
 81018ba:	4a05      	ldr	r2, [pc, #20]	@ (81018d0 <HAL_PWREx_EnterSTOPMode+0xec>)
 81018bc:	f023 0304 	bic.w	r3, r3, #4
 81018c0:	6153      	str	r3, [r2, #20]
 81018c2:	e002      	b.n	81018ca <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 81018c4:	bf00      	nop
 81018c6:	e000      	b.n	81018ca <HAL_PWREx_EnterSTOPMode+0xe6>
      return;
 81018c8:	bf00      	nop
#else
    /* Keep DSTOP mode when D3/SRD domain enters Deepsleep */
    CLEAR_BIT (PWR->CPUCR, PWR_CPUCR_PDDS_D3);
#endif  /* defined (DUAL_CORE) */
  }
}
 81018ca:	3710      	adds	r7, #16
 81018cc:	46bd      	mov	sp, r7
 81018ce:	bd80      	pop	{r7, pc}
 81018d0:	58024800 	.word	0x58024800
 81018d4:	e000ed00 	.word	0xe000ed00

081018d8 <HAL_PWREx_ClearPendingEvent>:
  *         enter low power mode using Wait For Event request.
  * @note   Cortex-M7 must be in CRUN mode when calling this API by Cortex-M4.
  * @retval None.
  */
void HAL_PWREx_ClearPendingEvent (void)
{
 81018d8:	b580      	push	{r7, lr}
 81018da:	af00      	add	r7, sp, #0
#if defined (DUAL_CORE)
  /* Check the current Core */
  if (HAL_GetCurrentCPUID () == CM7_CPUID)
 81018dc:	f7ff fd78 	bl	81013d0 <HAL_GetCurrentCPUID>
 81018e0:	4603      	mov	r3, r0
 81018e2:	2b03      	cmp	r3, #3
 81018e4:	d101      	bne.n	81018ea <HAL_PWREx_ClearPendingEvent+0x12>
  {
    __WFE ();
 81018e6:	bf20      	wfe
    __WFE ();
  }
#else
  __WFE ();
#endif /* defined (DUAL_CORE) */
}
 81018e8:	e001      	b.n	81018ee <HAL_PWREx_ClearPendingEvent+0x16>
    __SEV ();
 81018ea:	bf40      	sev
    __WFE ();
 81018ec:	bf20      	wfe
}
 81018ee:	bf00      	nop
 81018f0:	bd80      	pop	{r7, pc}
	...

081018f4 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 81018f4:	b480      	push	{r7}
 81018f6:	b089      	sub	sp, #36	@ 0x24
 81018f8:	af00      	add	r7, sp, #0
  float_t fracn1, pllvco;
  uint32_t sysclockfreq;

  /* Get SYSCLK source -------------------------------------------------------*/

  switch (RCC->CFGR & RCC_CFGR_SWS)
 81018fa:	4bb3      	ldr	r3, [pc, #716]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81018fc:	691b      	ldr	r3, [r3, #16]
 81018fe:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8101902:	2b18      	cmp	r3, #24
 8101904:	f200 8155 	bhi.w	8101bb2 <HAL_RCC_GetSysClockFreq+0x2be>
 8101908:	a201      	add	r2, pc, #4	@ (adr r2, 8101910 <HAL_RCC_GetSysClockFreq+0x1c>)
 810190a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 810190e:	bf00      	nop
 8101910:	08101975 	.word	0x08101975
 8101914:	08101bb3 	.word	0x08101bb3
 8101918:	08101bb3 	.word	0x08101bb3
 810191c:	08101bb3 	.word	0x08101bb3
 8101920:	08101bb3 	.word	0x08101bb3
 8101924:	08101bb3 	.word	0x08101bb3
 8101928:	08101bb3 	.word	0x08101bb3
 810192c:	08101bb3 	.word	0x08101bb3
 8101930:	0810199b 	.word	0x0810199b
 8101934:	08101bb3 	.word	0x08101bb3
 8101938:	08101bb3 	.word	0x08101bb3
 810193c:	08101bb3 	.word	0x08101bb3
 8101940:	08101bb3 	.word	0x08101bb3
 8101944:	08101bb3 	.word	0x08101bb3
 8101948:	08101bb3 	.word	0x08101bb3
 810194c:	08101bb3 	.word	0x08101bb3
 8101950:	081019a1 	.word	0x081019a1
 8101954:	08101bb3 	.word	0x08101bb3
 8101958:	08101bb3 	.word	0x08101bb3
 810195c:	08101bb3 	.word	0x08101bb3
 8101960:	08101bb3 	.word	0x08101bb3
 8101964:	08101bb3 	.word	0x08101bb3
 8101968:	08101bb3 	.word	0x08101bb3
 810196c:	08101bb3 	.word	0x08101bb3
 8101970:	081019a7 	.word	0x081019a7
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */

      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8101974:	4b94      	ldr	r3, [pc, #592]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101976:	681b      	ldr	r3, [r3, #0]
 8101978:	f003 0320 	and.w	r3, r3, #32
 810197c:	2b00      	cmp	r3, #0
 810197e:	d009      	beq.n	8101994 <HAL_RCC_GetSysClockFreq+0xa0>
      {
        sysclockfreq = (uint32_t)(HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8101980:	4b91      	ldr	r3, [pc, #580]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101982:	681b      	ldr	r3, [r3, #0]
 8101984:	08db      	lsrs	r3, r3, #3
 8101986:	f003 0303 	and.w	r3, r3, #3
 810198a:	4a90      	ldr	r2, [pc, #576]	@ (8101bcc <HAL_RCC_GetSysClockFreq+0x2d8>)
 810198c:	fa22 f303 	lsr.w	r3, r2, r3
 8101990:	61bb      	str	r3, [r7, #24]
      else
      {
        sysclockfreq = (uint32_t) HSI_VALUE;
      }

      break;
 8101992:	e111      	b.n	8101bb8 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = (uint32_t) HSI_VALUE;
 8101994:	4b8d      	ldr	r3, [pc, #564]	@ (8101bcc <HAL_RCC_GetSysClockFreq+0x2d8>)
 8101996:	61bb      	str	r3, [r7, #24]
      break;
 8101998:	e10e      	b.n	8101bb8 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_CSI:  /* CSI used as system clock  source */
      sysclockfreq = CSI_VALUE;
 810199a:	4b8d      	ldr	r3, [pc, #564]	@ (8101bd0 <HAL_RCC_GetSysClockFreq+0x2dc>)
 810199c:	61bb      	str	r3, [r7, #24]
      break;
 810199e:	e10b      	b.n	8101bb8 <HAL_RCC_GetSysClockFreq+0x2c4>

    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
      sysclockfreq = HSE_VALUE;
 81019a0:	4b8c      	ldr	r3, [pc, #560]	@ (8101bd4 <HAL_RCC_GetSysClockFreq+0x2e0>)
 81019a2:	61bb      	str	r3, [r7, #24]
      break;
 81019a4:	e108      	b.n	8101bb8 <HAL_RCC_GetSysClockFreq+0x2c4>
    case RCC_CFGR_SWS_PLL1:  /* PLL1 used as system clock  source */

      /* PLL_VCO = (HSE_VALUE or HSI_VALUE or CSI_VALUE/ PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR
      */
      pllsource = (RCC->PLLCKSELR & RCC_PLLCKSELR_PLLSRC);
 81019a6:	4b88      	ldr	r3, [pc, #544]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81019a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81019aa:	f003 0303 	and.w	r3, r3, #3
 81019ae:	617b      	str	r3, [r7, #20]
      pllm = ((RCC->PLLCKSELR & RCC_PLLCKSELR_DIVM1) >> 4)  ;
 81019b0:	4b85      	ldr	r3, [pc, #532]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81019b2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 81019b4:	091b      	lsrs	r3, r3, #4
 81019b6:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 81019ba:	613b      	str	r3, [r7, #16]
      pllfracen = ((RCC-> PLLCFGR & RCC_PLLCFGR_PLL1FRACEN) >> RCC_PLLCFGR_PLL1FRACEN_Pos);
 81019bc:	4b82      	ldr	r3, [pc, #520]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81019be:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 81019c0:	f003 0301 	and.w	r3, r3, #1
 81019c4:	60fb      	str	r3, [r7, #12]
      fracn1 = (float_t)(uint32_t)(pllfracen * ((RCC->PLL1FRACR & RCC_PLL1FRACR_FRACN1) >> 3));
 81019c6:	4b80      	ldr	r3, [pc, #512]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 81019c8:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 81019ca:	08db      	lsrs	r3, r3, #3
 81019cc:	f3c3 030c 	ubfx	r3, r3, #0, #13
 81019d0:	68fa      	ldr	r2, [r7, #12]
 81019d2:	fb02 f303 	mul.w	r3, r2, r3
 81019d6:	ee07 3a90 	vmov	s15, r3
 81019da:	eef8 7a67 	vcvt.f32.u32	s15, s15
 81019de:	edc7 7a02 	vstr	s15, [r7, #8]

      if (pllm != 0U)
 81019e2:	693b      	ldr	r3, [r7, #16]
 81019e4:	2b00      	cmp	r3, #0
 81019e6:	f000 80e1 	beq.w	8101bac <HAL_RCC_GetSysClockFreq+0x2b8>
 81019ea:	697b      	ldr	r3, [r7, #20]
 81019ec:	2b02      	cmp	r3, #2
 81019ee:	f000 8083 	beq.w	8101af8 <HAL_RCC_GetSysClockFreq+0x204>
 81019f2:	697b      	ldr	r3, [r7, #20]
 81019f4:	2b02      	cmp	r3, #2
 81019f6:	f200 80a1 	bhi.w	8101b3c <HAL_RCC_GetSysClockFreq+0x248>
 81019fa:	697b      	ldr	r3, [r7, #20]
 81019fc:	2b00      	cmp	r3, #0
 81019fe:	d003      	beq.n	8101a08 <HAL_RCC_GetSysClockFreq+0x114>
 8101a00:	697b      	ldr	r3, [r7, #20]
 8101a02:	2b01      	cmp	r3, #1
 8101a04:	d056      	beq.n	8101ab4 <HAL_RCC_GetSysClockFreq+0x1c0>
 8101a06:	e099      	b.n	8101b3c <HAL_RCC_GetSysClockFreq+0x248>
      {
        switch (pllsource)
        {
          case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */

            if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8101a08:	4b6f      	ldr	r3, [pc, #444]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101a0a:	681b      	ldr	r3, [r3, #0]
 8101a0c:	f003 0320 	and.w	r3, r3, #32
 8101a10:	2b00      	cmp	r3, #0
 8101a12:	d02d      	beq.n	8101a70 <HAL_RCC_GetSysClockFreq+0x17c>
            {
              hsivalue = (HSI_VALUE >> (__HAL_RCC_GET_HSI_DIVIDER() >> 3));
 8101a14:	4b6c      	ldr	r3, [pc, #432]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101a16:	681b      	ldr	r3, [r3, #0]
 8101a18:	08db      	lsrs	r3, r3, #3
 8101a1a:	f003 0303 	and.w	r3, r3, #3
 8101a1e:	4a6b      	ldr	r2, [pc, #428]	@ (8101bcc <HAL_RCC_GetSysClockFreq+0x2d8>)
 8101a20:	fa22 f303 	lsr.w	r3, r2, r3
 8101a24:	607b      	str	r3, [r7, #4]
              pllvco = ((float_t)hsivalue / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101a26:	687b      	ldr	r3, [r7, #4]
 8101a28:	ee07 3a90 	vmov	s15, r3
 8101a2c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101a30:	693b      	ldr	r3, [r7, #16]
 8101a32:	ee07 3a90 	vmov	s15, r3
 8101a36:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101a3a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101a3e:	4b62      	ldr	r3, [pc, #392]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101a40:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101a42:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101a46:	ee07 3a90 	vmov	s15, r3
 8101a4a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101a4e:	ed97 6a02 	vldr	s12, [r7, #8]
 8101a52:	eddf 5a61 	vldr	s11, [pc, #388]	@ 8101bd8 <HAL_RCC_GetSysClockFreq+0x2e4>
 8101a56:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8101a5a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101a5e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101a62:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101a66:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101a6a:	edc7 7a07 	vstr	s15, [r7, #28]
            }
            else
            {
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
            }
            break;
 8101a6e:	e087      	b.n	8101b80 <HAL_RCC_GetSysClockFreq+0x28c>
              pllvco = ((float_t)HSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101a70:	693b      	ldr	r3, [r7, #16]
 8101a72:	ee07 3a90 	vmov	s15, r3
 8101a76:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101a7a:	eddf 6a58 	vldr	s13, [pc, #352]	@ 8101bdc <HAL_RCC_GetSysClockFreq+0x2e8>
 8101a7e:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101a82:	4b51      	ldr	r3, [pc, #324]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101a84:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101a86:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101a8a:	ee07 3a90 	vmov	s15, r3
 8101a8e:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101a92:	ed97 6a02 	vldr	s12, [r7, #8]
 8101a96:	eddf 5a50 	vldr	s11, [pc, #320]	@ 8101bd8 <HAL_RCC_GetSysClockFreq+0x2e4>
 8101a9a:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8101a9e:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101aa2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101aa6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101aaa:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101aae:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8101ab2:	e065      	b.n	8101b80 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_CSI:  /* CSI used as PLL clock source */
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101ab4:	693b      	ldr	r3, [r7, #16]
 8101ab6:	ee07 3a90 	vmov	s15, r3
 8101aba:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101abe:	eddf 6a48 	vldr	s13, [pc, #288]	@ 8101be0 <HAL_RCC_GetSysClockFreq+0x2ec>
 8101ac2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101ac6:	4b40      	ldr	r3, [pc, #256]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101ac8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101aca:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101ace:	ee07 3a90 	vmov	s15, r3
 8101ad2:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101ad6:	ed97 6a02 	vldr	s12, [r7, #8]
 8101ada:	eddf 5a3f 	vldr	s11, [pc, #252]	@ 8101bd8 <HAL_RCC_GetSysClockFreq+0x2e4>
 8101ade:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8101ae2:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101ae6:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101aea:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101aee:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101af2:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8101af6:	e043      	b.n	8101b80 <HAL_RCC_GetSysClockFreq+0x28c>

          case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
            pllvco = ((float_t)HSE_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101af8:	693b      	ldr	r3, [r7, #16]
 8101afa:	ee07 3a90 	vmov	s15, r3
 8101afe:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101b02:	eddf 6a38 	vldr	s13, [pc, #224]	@ 8101be4 <HAL_RCC_GetSysClockFreq+0x2f0>
 8101b06:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101b0a:	4b2f      	ldr	r3, [pc, #188]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101b0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101b0e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101b12:	ee07 3a90 	vmov	s15, r3
 8101b16:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101b1a:	ed97 6a02 	vldr	s12, [r7, #8]
 8101b1e:	eddf 5a2e 	vldr	s11, [pc, #184]	@ 8101bd8 <HAL_RCC_GetSysClockFreq+0x2e4>
 8101b22:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8101b26:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101b2a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101b2e:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101b32:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101b36:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8101b3a:	e021      	b.n	8101b80 <HAL_RCC_GetSysClockFreq+0x28c>

          default:
            pllvco = ((float_t)CSI_VALUE / (float_t)pllm) * ((float_t)(uint32_t)(RCC->PLL1DIVR & RCC_PLL1DIVR_N1) + (fracn1 / (float_t)0x2000) + (float_t)1);
 8101b3c:	693b      	ldr	r3, [r7, #16]
 8101b3e:	ee07 3a90 	vmov	s15, r3
 8101b42:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8101b46:	eddf 6a26 	vldr	s13, [pc, #152]	@ 8101be0 <HAL_RCC_GetSysClockFreq+0x2ec>
 8101b4a:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8101b4e:	4b1e      	ldr	r3, [pc, #120]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101b50:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101b52:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8101b56:	ee07 3a90 	vmov	s15, r3
 8101b5a:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8101b5e:	ed97 6a02 	vldr	s12, [r7, #8]
 8101b62:	eddf 5a1d 	vldr	s11, [pc, #116]	@ 8101bd8 <HAL_RCC_GetSysClockFreq+0x2e4>
 8101b66:	eec6 7a25 	vdiv.f32	s15, s12, s11
 8101b6a:	ee76 7aa7 	vadd.f32	s15, s13, s15
 8101b6e:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8101b72:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8101b76:	ee67 7a27 	vmul.f32	s15, s14, s15
 8101b7a:	edc7 7a07 	vstr	s15, [r7, #28]
            break;
 8101b7e:	bf00      	nop
        }
        pllp = (((RCC->PLL1DIVR & RCC_PLL1DIVR_P1) >> 9) + 1U) ;
 8101b80:	4b11      	ldr	r3, [pc, #68]	@ (8101bc8 <HAL_RCC_GetSysClockFreq+0x2d4>)
 8101b82:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8101b84:	0a5b      	lsrs	r3, r3, #9
 8101b86:	f003 037f 	and.w	r3, r3, #127	@ 0x7f
 8101b8a:	3301      	adds	r3, #1
 8101b8c:	603b      	str	r3, [r7, #0]
        sysclockfreq = (uint32_t)(float_t)(pllvco / (float_t)pllp);
 8101b8e:	683b      	ldr	r3, [r7, #0]
 8101b90:	ee07 3a90 	vmov	s15, r3
 8101b94:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8101b98:	edd7 6a07 	vldr	s13, [r7, #28]
 8101b9c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8101ba0:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8101ba4:	ee17 3a90 	vmov	r3, s15
 8101ba8:	61bb      	str	r3, [r7, #24]
      }
      else
      {
        sysclockfreq = 0U;
      }
      break;
 8101baa:	e005      	b.n	8101bb8 <HAL_RCC_GetSysClockFreq+0x2c4>
        sysclockfreq = 0U;
 8101bac:	2300      	movs	r3, #0
 8101bae:	61bb      	str	r3, [r7, #24]
      break;
 8101bb0:	e002      	b.n	8101bb8 <HAL_RCC_GetSysClockFreq+0x2c4>

    default:
      sysclockfreq = CSI_VALUE;
 8101bb2:	4b07      	ldr	r3, [pc, #28]	@ (8101bd0 <HAL_RCC_GetSysClockFreq+0x2dc>)
 8101bb4:	61bb      	str	r3, [r7, #24]
      break;
 8101bb6:	bf00      	nop
  }

  return sysclockfreq;
 8101bb8:	69bb      	ldr	r3, [r7, #24]
}
 8101bba:	4618      	mov	r0, r3
 8101bbc:	3724      	adds	r7, #36	@ 0x24
 8101bbe:	46bd      	mov	sp, r7
 8101bc0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8101bc4:	4770      	bx	lr
 8101bc6:	bf00      	nop
 8101bc8:	58024400 	.word	0x58024400
 8101bcc:	03d09000 	.word	0x03d09000
 8101bd0:	003d0900 	.word	0x003d0900
 8101bd4:	007a1200 	.word	0x007a1200
 8101bd8:	46000000 	.word	0x46000000
 8101bdc:	4c742400 	.word	0x4c742400
 8101be0:	4a742400 	.word	0x4a742400
 8101be4:	4af42400 	.word	0x4af42400

08101be8 <__cvt>:
 8101be8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8101bec:	ec57 6b10 	vmov	r6, r7, d0
 8101bf0:	2f00      	cmp	r7, #0
 8101bf2:	460c      	mov	r4, r1
 8101bf4:	4619      	mov	r1, r3
 8101bf6:	463b      	mov	r3, r7
 8101bf8:	bfbb      	ittet	lt
 8101bfa:	f107 4300 	addlt.w	r3, r7, #2147483648	@ 0x80000000
 8101bfe:	461f      	movlt	r7, r3
 8101c00:	2300      	movge	r3, #0
 8101c02:	232d      	movlt	r3, #45	@ 0x2d
 8101c04:	700b      	strb	r3, [r1, #0]
 8101c06:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8101c08:	f8dd a030 	ldr.w	sl, [sp, #48]	@ 0x30
 8101c0c:	4691      	mov	r9, r2
 8101c0e:	f023 0820 	bic.w	r8, r3, #32
 8101c12:	bfbc      	itt	lt
 8101c14:	4632      	movlt	r2, r6
 8101c16:	4616      	movlt	r6, r2
 8101c18:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8101c1c:	d005      	beq.n	8101c2a <__cvt+0x42>
 8101c1e:	f1b8 0f45 	cmp.w	r8, #69	@ 0x45
 8101c22:	d100      	bne.n	8101c26 <__cvt+0x3e>
 8101c24:	3401      	adds	r4, #1
 8101c26:	2102      	movs	r1, #2
 8101c28:	e000      	b.n	8101c2c <__cvt+0x44>
 8101c2a:	2103      	movs	r1, #3
 8101c2c:	ab03      	add	r3, sp, #12
 8101c2e:	9301      	str	r3, [sp, #4]
 8101c30:	ab02      	add	r3, sp, #8
 8101c32:	9300      	str	r3, [sp, #0]
 8101c34:	ec47 6b10 	vmov	d0, r6, r7
 8101c38:	4653      	mov	r3, sl
 8101c3a:	4622      	mov	r2, r4
 8101c3c:	f000 fe3c 	bl	81028b8 <_dtoa_r>
 8101c40:	f1b8 0f47 	cmp.w	r8, #71	@ 0x47
 8101c44:	4605      	mov	r5, r0
 8101c46:	d119      	bne.n	8101c7c <__cvt+0x94>
 8101c48:	f019 0f01 	tst.w	r9, #1
 8101c4c:	d00e      	beq.n	8101c6c <__cvt+0x84>
 8101c4e:	eb00 0904 	add.w	r9, r0, r4
 8101c52:	2200      	movs	r2, #0
 8101c54:	2300      	movs	r3, #0
 8101c56:	4630      	mov	r0, r6
 8101c58:	4639      	mov	r1, r7
 8101c5a:	f7fe ffbd 	bl	8100bd8 <__aeabi_dcmpeq>
 8101c5e:	b108      	cbz	r0, 8101c64 <__cvt+0x7c>
 8101c60:	f8cd 900c 	str.w	r9, [sp, #12]
 8101c64:	2230      	movs	r2, #48	@ 0x30
 8101c66:	9b03      	ldr	r3, [sp, #12]
 8101c68:	454b      	cmp	r3, r9
 8101c6a:	d31e      	bcc.n	8101caa <__cvt+0xc2>
 8101c6c:	9b03      	ldr	r3, [sp, #12]
 8101c6e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8101c70:	1b5b      	subs	r3, r3, r5
 8101c72:	4628      	mov	r0, r5
 8101c74:	6013      	str	r3, [r2, #0]
 8101c76:	b004      	add	sp, #16
 8101c78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8101c7c:	f1b8 0f46 	cmp.w	r8, #70	@ 0x46
 8101c80:	eb00 0904 	add.w	r9, r0, r4
 8101c84:	d1e5      	bne.n	8101c52 <__cvt+0x6a>
 8101c86:	7803      	ldrb	r3, [r0, #0]
 8101c88:	2b30      	cmp	r3, #48	@ 0x30
 8101c8a:	d10a      	bne.n	8101ca2 <__cvt+0xba>
 8101c8c:	2200      	movs	r2, #0
 8101c8e:	2300      	movs	r3, #0
 8101c90:	4630      	mov	r0, r6
 8101c92:	4639      	mov	r1, r7
 8101c94:	f7fe ffa0 	bl	8100bd8 <__aeabi_dcmpeq>
 8101c98:	b918      	cbnz	r0, 8101ca2 <__cvt+0xba>
 8101c9a:	f1c4 0401 	rsb	r4, r4, #1
 8101c9e:	f8ca 4000 	str.w	r4, [sl]
 8101ca2:	f8da 3000 	ldr.w	r3, [sl]
 8101ca6:	4499      	add	r9, r3
 8101ca8:	e7d3      	b.n	8101c52 <__cvt+0x6a>
 8101caa:	1c59      	adds	r1, r3, #1
 8101cac:	9103      	str	r1, [sp, #12]
 8101cae:	701a      	strb	r2, [r3, #0]
 8101cb0:	e7d9      	b.n	8101c66 <__cvt+0x7e>

08101cb2 <__exponent>:
 8101cb2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8101cb4:	2900      	cmp	r1, #0
 8101cb6:	bfba      	itte	lt
 8101cb8:	4249      	neglt	r1, r1
 8101cba:	232d      	movlt	r3, #45	@ 0x2d
 8101cbc:	232b      	movge	r3, #43	@ 0x2b
 8101cbe:	2909      	cmp	r1, #9
 8101cc0:	7002      	strb	r2, [r0, #0]
 8101cc2:	7043      	strb	r3, [r0, #1]
 8101cc4:	dd29      	ble.n	8101d1a <__exponent+0x68>
 8101cc6:	f10d 0307 	add.w	r3, sp, #7
 8101cca:	461d      	mov	r5, r3
 8101ccc:	270a      	movs	r7, #10
 8101cce:	461a      	mov	r2, r3
 8101cd0:	fbb1 f6f7 	udiv	r6, r1, r7
 8101cd4:	fb07 1416 	mls	r4, r7, r6, r1
 8101cd8:	3430      	adds	r4, #48	@ 0x30
 8101cda:	f802 4c01 	strb.w	r4, [r2, #-1]
 8101cde:	460c      	mov	r4, r1
 8101ce0:	2c63      	cmp	r4, #99	@ 0x63
 8101ce2:	f103 33ff 	add.w	r3, r3, #4294967295	@ 0xffffffff
 8101ce6:	4631      	mov	r1, r6
 8101ce8:	dcf1      	bgt.n	8101cce <__exponent+0x1c>
 8101cea:	3130      	adds	r1, #48	@ 0x30
 8101cec:	1e94      	subs	r4, r2, #2
 8101cee:	f803 1c01 	strb.w	r1, [r3, #-1]
 8101cf2:	1c41      	adds	r1, r0, #1
 8101cf4:	4623      	mov	r3, r4
 8101cf6:	42ab      	cmp	r3, r5
 8101cf8:	d30a      	bcc.n	8101d10 <__exponent+0x5e>
 8101cfa:	f10d 0309 	add.w	r3, sp, #9
 8101cfe:	1a9b      	subs	r3, r3, r2
 8101d00:	42ac      	cmp	r4, r5
 8101d02:	bf88      	it	hi
 8101d04:	2300      	movhi	r3, #0
 8101d06:	3302      	adds	r3, #2
 8101d08:	4403      	add	r3, r0
 8101d0a:	1a18      	subs	r0, r3, r0
 8101d0c:	b003      	add	sp, #12
 8101d0e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8101d10:	f813 6b01 	ldrb.w	r6, [r3], #1
 8101d14:	f801 6f01 	strb.w	r6, [r1, #1]!
 8101d18:	e7ed      	b.n	8101cf6 <__exponent+0x44>
 8101d1a:	2330      	movs	r3, #48	@ 0x30
 8101d1c:	3130      	adds	r1, #48	@ 0x30
 8101d1e:	7083      	strb	r3, [r0, #2]
 8101d20:	70c1      	strb	r1, [r0, #3]
 8101d22:	1d03      	adds	r3, r0, #4
 8101d24:	e7f1      	b.n	8101d0a <__exponent+0x58>
	...

08101d28 <_printf_float>:
 8101d28:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8101d2c:	b08d      	sub	sp, #52	@ 0x34
 8101d2e:	460c      	mov	r4, r1
 8101d30:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8101d34:	4616      	mov	r6, r2
 8101d36:	461f      	mov	r7, r3
 8101d38:	4605      	mov	r5, r0
 8101d3a:	f000 fcbb 	bl	81026b4 <_localeconv_r>
 8101d3e:	6803      	ldr	r3, [r0, #0]
 8101d40:	9304      	str	r3, [sp, #16]
 8101d42:	4618      	mov	r0, r3
 8101d44:	f7fe fb1c 	bl	8100380 <strlen>
 8101d48:	2300      	movs	r3, #0
 8101d4a:	930a      	str	r3, [sp, #40]	@ 0x28
 8101d4c:	f8d8 3000 	ldr.w	r3, [r8]
 8101d50:	9005      	str	r0, [sp, #20]
 8101d52:	3307      	adds	r3, #7
 8101d54:	f023 0307 	bic.w	r3, r3, #7
 8101d58:	f103 0208 	add.w	r2, r3, #8
 8101d5c:	f894 a018 	ldrb.w	sl, [r4, #24]
 8101d60:	f8d4 b000 	ldr.w	fp, [r4]
 8101d64:	f8c8 2000 	str.w	r2, [r8]
 8101d68:	e9d3 8900 	ldrd	r8, r9, [r3]
 8101d6c:	f029 4300 	bic.w	r3, r9, #2147483648	@ 0x80000000
 8101d70:	9307      	str	r3, [sp, #28]
 8101d72:	f8cd 8018 	str.w	r8, [sp, #24]
 8101d76:	e9c4 8912 	strd	r8, r9, [r4, #72]	@ 0x48
 8101d7a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8101d7e:	4b9c      	ldr	r3, [pc, #624]	@ (8101ff0 <_printf_float+0x2c8>)
 8101d80:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8101d84:	f7fe ff5a 	bl	8100c3c <__aeabi_dcmpun>
 8101d88:	bb70      	cbnz	r0, 8101de8 <_printf_float+0xc0>
 8101d8a:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8101d8e:	4b98      	ldr	r3, [pc, #608]	@ (8101ff0 <_printf_float+0x2c8>)
 8101d90:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 8101d94:	f7fe ff34 	bl	8100c00 <__aeabi_dcmple>
 8101d98:	bb30      	cbnz	r0, 8101de8 <_printf_float+0xc0>
 8101d9a:	2200      	movs	r2, #0
 8101d9c:	2300      	movs	r3, #0
 8101d9e:	4640      	mov	r0, r8
 8101da0:	4649      	mov	r1, r9
 8101da2:	f7fe ff23 	bl	8100bec <__aeabi_dcmplt>
 8101da6:	b110      	cbz	r0, 8101dae <_printf_float+0x86>
 8101da8:	232d      	movs	r3, #45	@ 0x2d
 8101daa:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8101dae:	4a91      	ldr	r2, [pc, #580]	@ (8101ff4 <_printf_float+0x2cc>)
 8101db0:	4b91      	ldr	r3, [pc, #580]	@ (8101ff8 <_printf_float+0x2d0>)
 8101db2:	f1ba 0f47 	cmp.w	sl, #71	@ 0x47
 8101db6:	bf94      	ite	ls
 8101db8:	4690      	movls	r8, r2
 8101dba:	4698      	movhi	r8, r3
 8101dbc:	2303      	movs	r3, #3
 8101dbe:	6123      	str	r3, [r4, #16]
 8101dc0:	f02b 0304 	bic.w	r3, fp, #4
 8101dc4:	6023      	str	r3, [r4, #0]
 8101dc6:	f04f 0900 	mov.w	r9, #0
 8101dca:	9700      	str	r7, [sp, #0]
 8101dcc:	4633      	mov	r3, r6
 8101dce:	aa0b      	add	r2, sp, #44	@ 0x2c
 8101dd0:	4621      	mov	r1, r4
 8101dd2:	4628      	mov	r0, r5
 8101dd4:	f000 f9d2 	bl	810217c <_printf_common>
 8101dd8:	3001      	adds	r0, #1
 8101dda:	f040 808d 	bne.w	8101ef8 <_printf_float+0x1d0>
 8101dde:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8101de2:	b00d      	add	sp, #52	@ 0x34
 8101de4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8101de8:	4642      	mov	r2, r8
 8101dea:	464b      	mov	r3, r9
 8101dec:	4640      	mov	r0, r8
 8101dee:	4649      	mov	r1, r9
 8101df0:	f7fe ff24 	bl	8100c3c <__aeabi_dcmpun>
 8101df4:	b140      	cbz	r0, 8101e08 <_printf_float+0xe0>
 8101df6:	464b      	mov	r3, r9
 8101df8:	2b00      	cmp	r3, #0
 8101dfa:	bfbc      	itt	lt
 8101dfc:	232d      	movlt	r3, #45	@ 0x2d
 8101dfe:	f884 3043 	strblt.w	r3, [r4, #67]	@ 0x43
 8101e02:	4a7e      	ldr	r2, [pc, #504]	@ (8101ffc <_printf_float+0x2d4>)
 8101e04:	4b7e      	ldr	r3, [pc, #504]	@ (8102000 <_printf_float+0x2d8>)
 8101e06:	e7d4      	b.n	8101db2 <_printf_float+0x8a>
 8101e08:	6863      	ldr	r3, [r4, #4]
 8101e0a:	f00a 02df 	and.w	r2, sl, #223	@ 0xdf
 8101e0e:	9206      	str	r2, [sp, #24]
 8101e10:	1c5a      	adds	r2, r3, #1
 8101e12:	d13b      	bne.n	8101e8c <_printf_float+0x164>
 8101e14:	2306      	movs	r3, #6
 8101e16:	6063      	str	r3, [r4, #4]
 8101e18:	f44b 6280 	orr.w	r2, fp, #1024	@ 0x400
 8101e1c:	2300      	movs	r3, #0
 8101e1e:	6022      	str	r2, [r4, #0]
 8101e20:	9303      	str	r3, [sp, #12]
 8101e22:	ab0a      	add	r3, sp, #40	@ 0x28
 8101e24:	e9cd a301 	strd	sl, r3, [sp, #4]
 8101e28:	ab09      	add	r3, sp, #36	@ 0x24
 8101e2a:	9300      	str	r3, [sp, #0]
 8101e2c:	6861      	ldr	r1, [r4, #4]
 8101e2e:	ec49 8b10 	vmov	d0, r8, r9
 8101e32:	f10d 0323 	add.w	r3, sp, #35	@ 0x23
 8101e36:	4628      	mov	r0, r5
 8101e38:	f7ff fed6 	bl	8101be8 <__cvt>
 8101e3c:	9b06      	ldr	r3, [sp, #24]
 8101e3e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8101e40:	2b47      	cmp	r3, #71	@ 0x47
 8101e42:	4680      	mov	r8, r0
 8101e44:	d129      	bne.n	8101e9a <_printf_float+0x172>
 8101e46:	1cc8      	adds	r0, r1, #3
 8101e48:	db02      	blt.n	8101e50 <_printf_float+0x128>
 8101e4a:	6863      	ldr	r3, [r4, #4]
 8101e4c:	4299      	cmp	r1, r3
 8101e4e:	dd41      	ble.n	8101ed4 <_printf_float+0x1ac>
 8101e50:	f1aa 0a02 	sub.w	sl, sl, #2
 8101e54:	fa5f fa8a 	uxtb.w	sl, sl
 8101e58:	3901      	subs	r1, #1
 8101e5a:	4652      	mov	r2, sl
 8101e5c:	f104 0050 	add.w	r0, r4, #80	@ 0x50
 8101e60:	9109      	str	r1, [sp, #36]	@ 0x24
 8101e62:	f7ff ff26 	bl	8101cb2 <__exponent>
 8101e66:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8101e68:	1813      	adds	r3, r2, r0
 8101e6a:	2a01      	cmp	r2, #1
 8101e6c:	4681      	mov	r9, r0
 8101e6e:	6123      	str	r3, [r4, #16]
 8101e70:	dc02      	bgt.n	8101e78 <_printf_float+0x150>
 8101e72:	6822      	ldr	r2, [r4, #0]
 8101e74:	07d2      	lsls	r2, r2, #31
 8101e76:	d501      	bpl.n	8101e7c <_printf_float+0x154>
 8101e78:	3301      	adds	r3, #1
 8101e7a:	6123      	str	r3, [r4, #16]
 8101e7c:	f89d 3023 	ldrb.w	r3, [sp, #35]	@ 0x23
 8101e80:	2b00      	cmp	r3, #0
 8101e82:	d0a2      	beq.n	8101dca <_printf_float+0xa2>
 8101e84:	232d      	movs	r3, #45	@ 0x2d
 8101e86:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8101e8a:	e79e      	b.n	8101dca <_printf_float+0xa2>
 8101e8c:	9a06      	ldr	r2, [sp, #24]
 8101e8e:	2a47      	cmp	r2, #71	@ 0x47
 8101e90:	d1c2      	bne.n	8101e18 <_printf_float+0xf0>
 8101e92:	2b00      	cmp	r3, #0
 8101e94:	d1c0      	bne.n	8101e18 <_printf_float+0xf0>
 8101e96:	2301      	movs	r3, #1
 8101e98:	e7bd      	b.n	8101e16 <_printf_float+0xee>
 8101e9a:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8101e9e:	d9db      	bls.n	8101e58 <_printf_float+0x130>
 8101ea0:	f1ba 0f66 	cmp.w	sl, #102	@ 0x66
 8101ea4:	d118      	bne.n	8101ed8 <_printf_float+0x1b0>
 8101ea6:	2900      	cmp	r1, #0
 8101ea8:	6863      	ldr	r3, [r4, #4]
 8101eaa:	dd0b      	ble.n	8101ec4 <_printf_float+0x19c>
 8101eac:	6121      	str	r1, [r4, #16]
 8101eae:	b913      	cbnz	r3, 8101eb6 <_printf_float+0x18e>
 8101eb0:	6822      	ldr	r2, [r4, #0]
 8101eb2:	07d0      	lsls	r0, r2, #31
 8101eb4:	d502      	bpl.n	8101ebc <_printf_float+0x194>
 8101eb6:	3301      	adds	r3, #1
 8101eb8:	440b      	add	r3, r1
 8101eba:	6123      	str	r3, [r4, #16]
 8101ebc:	65a1      	str	r1, [r4, #88]	@ 0x58
 8101ebe:	f04f 0900 	mov.w	r9, #0
 8101ec2:	e7db      	b.n	8101e7c <_printf_float+0x154>
 8101ec4:	b913      	cbnz	r3, 8101ecc <_printf_float+0x1a4>
 8101ec6:	6822      	ldr	r2, [r4, #0]
 8101ec8:	07d2      	lsls	r2, r2, #31
 8101eca:	d501      	bpl.n	8101ed0 <_printf_float+0x1a8>
 8101ecc:	3302      	adds	r3, #2
 8101ece:	e7f4      	b.n	8101eba <_printf_float+0x192>
 8101ed0:	2301      	movs	r3, #1
 8101ed2:	e7f2      	b.n	8101eba <_printf_float+0x192>
 8101ed4:	f04f 0a67 	mov.w	sl, #103	@ 0x67
 8101ed8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8101eda:	4299      	cmp	r1, r3
 8101edc:	db05      	blt.n	8101eea <_printf_float+0x1c2>
 8101ede:	6823      	ldr	r3, [r4, #0]
 8101ee0:	6121      	str	r1, [r4, #16]
 8101ee2:	07d8      	lsls	r0, r3, #31
 8101ee4:	d5ea      	bpl.n	8101ebc <_printf_float+0x194>
 8101ee6:	1c4b      	adds	r3, r1, #1
 8101ee8:	e7e7      	b.n	8101eba <_printf_float+0x192>
 8101eea:	2900      	cmp	r1, #0
 8101eec:	bfd4      	ite	le
 8101eee:	f1c1 0202 	rsble	r2, r1, #2
 8101ef2:	2201      	movgt	r2, #1
 8101ef4:	4413      	add	r3, r2
 8101ef6:	e7e0      	b.n	8101eba <_printf_float+0x192>
 8101ef8:	6823      	ldr	r3, [r4, #0]
 8101efa:	055a      	lsls	r2, r3, #21
 8101efc:	d407      	bmi.n	8101f0e <_printf_float+0x1e6>
 8101efe:	6923      	ldr	r3, [r4, #16]
 8101f00:	4642      	mov	r2, r8
 8101f02:	4631      	mov	r1, r6
 8101f04:	4628      	mov	r0, r5
 8101f06:	47b8      	blx	r7
 8101f08:	3001      	adds	r0, #1
 8101f0a:	d12b      	bne.n	8101f64 <_printf_float+0x23c>
 8101f0c:	e767      	b.n	8101dde <_printf_float+0xb6>
 8101f0e:	f1ba 0f65 	cmp.w	sl, #101	@ 0x65
 8101f12:	f240 80dd 	bls.w	81020d0 <_printf_float+0x3a8>
 8101f16:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8101f1a:	2200      	movs	r2, #0
 8101f1c:	2300      	movs	r3, #0
 8101f1e:	f7fe fe5b 	bl	8100bd8 <__aeabi_dcmpeq>
 8101f22:	2800      	cmp	r0, #0
 8101f24:	d033      	beq.n	8101f8e <_printf_float+0x266>
 8101f26:	4a37      	ldr	r2, [pc, #220]	@ (8102004 <_printf_float+0x2dc>)
 8101f28:	2301      	movs	r3, #1
 8101f2a:	4631      	mov	r1, r6
 8101f2c:	4628      	mov	r0, r5
 8101f2e:	47b8      	blx	r7
 8101f30:	3001      	adds	r0, #1
 8101f32:	f43f af54 	beq.w	8101dde <_printf_float+0xb6>
 8101f36:	e9dd 3809 	ldrd	r3, r8, [sp, #36]	@ 0x24
 8101f3a:	4543      	cmp	r3, r8
 8101f3c:	db02      	blt.n	8101f44 <_printf_float+0x21c>
 8101f3e:	6823      	ldr	r3, [r4, #0]
 8101f40:	07d8      	lsls	r0, r3, #31
 8101f42:	d50f      	bpl.n	8101f64 <_printf_float+0x23c>
 8101f44:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8101f48:	4631      	mov	r1, r6
 8101f4a:	4628      	mov	r0, r5
 8101f4c:	47b8      	blx	r7
 8101f4e:	3001      	adds	r0, #1
 8101f50:	f43f af45 	beq.w	8101dde <_printf_float+0xb6>
 8101f54:	f04f 0900 	mov.w	r9, #0
 8101f58:	f108 38ff 	add.w	r8, r8, #4294967295	@ 0xffffffff
 8101f5c:	f104 0a1a 	add.w	sl, r4, #26
 8101f60:	45c8      	cmp	r8, r9
 8101f62:	dc09      	bgt.n	8101f78 <_printf_float+0x250>
 8101f64:	6823      	ldr	r3, [r4, #0]
 8101f66:	079b      	lsls	r3, r3, #30
 8101f68:	f100 8103 	bmi.w	8102172 <_printf_float+0x44a>
 8101f6c:	68e0      	ldr	r0, [r4, #12]
 8101f6e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8101f70:	4298      	cmp	r0, r3
 8101f72:	bfb8      	it	lt
 8101f74:	4618      	movlt	r0, r3
 8101f76:	e734      	b.n	8101de2 <_printf_float+0xba>
 8101f78:	2301      	movs	r3, #1
 8101f7a:	4652      	mov	r2, sl
 8101f7c:	4631      	mov	r1, r6
 8101f7e:	4628      	mov	r0, r5
 8101f80:	47b8      	blx	r7
 8101f82:	3001      	adds	r0, #1
 8101f84:	f43f af2b 	beq.w	8101dde <_printf_float+0xb6>
 8101f88:	f109 0901 	add.w	r9, r9, #1
 8101f8c:	e7e8      	b.n	8101f60 <_printf_float+0x238>
 8101f8e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101f90:	2b00      	cmp	r3, #0
 8101f92:	dc39      	bgt.n	8102008 <_printf_float+0x2e0>
 8101f94:	4a1b      	ldr	r2, [pc, #108]	@ (8102004 <_printf_float+0x2dc>)
 8101f96:	2301      	movs	r3, #1
 8101f98:	4631      	mov	r1, r6
 8101f9a:	4628      	mov	r0, r5
 8101f9c:	47b8      	blx	r7
 8101f9e:	3001      	adds	r0, #1
 8101fa0:	f43f af1d 	beq.w	8101dde <_printf_float+0xb6>
 8101fa4:	e9dd 3909 	ldrd	r3, r9, [sp, #36]	@ 0x24
 8101fa8:	ea59 0303 	orrs.w	r3, r9, r3
 8101fac:	d102      	bne.n	8101fb4 <_printf_float+0x28c>
 8101fae:	6823      	ldr	r3, [r4, #0]
 8101fb0:	07d9      	lsls	r1, r3, #31
 8101fb2:	d5d7      	bpl.n	8101f64 <_printf_float+0x23c>
 8101fb4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8101fb8:	4631      	mov	r1, r6
 8101fba:	4628      	mov	r0, r5
 8101fbc:	47b8      	blx	r7
 8101fbe:	3001      	adds	r0, #1
 8101fc0:	f43f af0d 	beq.w	8101dde <_printf_float+0xb6>
 8101fc4:	f04f 0a00 	mov.w	sl, #0
 8101fc8:	f104 0b1a 	add.w	fp, r4, #26
 8101fcc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8101fce:	425b      	negs	r3, r3
 8101fd0:	4553      	cmp	r3, sl
 8101fd2:	dc01      	bgt.n	8101fd8 <_printf_float+0x2b0>
 8101fd4:	464b      	mov	r3, r9
 8101fd6:	e793      	b.n	8101f00 <_printf_float+0x1d8>
 8101fd8:	2301      	movs	r3, #1
 8101fda:	465a      	mov	r2, fp
 8101fdc:	4631      	mov	r1, r6
 8101fde:	4628      	mov	r0, r5
 8101fe0:	47b8      	blx	r7
 8101fe2:	3001      	adds	r0, #1
 8101fe4:	f43f aefb 	beq.w	8101dde <_printf_float+0xb6>
 8101fe8:	f10a 0a01 	add.w	sl, sl, #1
 8101fec:	e7ee      	b.n	8101fcc <_printf_float+0x2a4>
 8101fee:	bf00      	nop
 8101ff0:	7fefffff 	.word	0x7fefffff
 8101ff4:	08104510 	.word	0x08104510
 8101ff8:	08104514 	.word	0x08104514
 8101ffc:	08104518 	.word	0x08104518
 8102000:	0810451c 	.word	0x0810451c
 8102004:	08104520 	.word	0x08104520
 8102008:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 810200a:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 810200e:	4553      	cmp	r3, sl
 8102010:	bfa8      	it	ge
 8102012:	4653      	movge	r3, sl
 8102014:	2b00      	cmp	r3, #0
 8102016:	4699      	mov	r9, r3
 8102018:	dc36      	bgt.n	8102088 <_printf_float+0x360>
 810201a:	f04f 0b00 	mov.w	fp, #0
 810201e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8102022:	f104 021a 	add.w	r2, r4, #26
 8102026:	6da3      	ldr	r3, [r4, #88]	@ 0x58
 8102028:	9306      	str	r3, [sp, #24]
 810202a:	eba3 0309 	sub.w	r3, r3, r9
 810202e:	455b      	cmp	r3, fp
 8102030:	dc31      	bgt.n	8102096 <_printf_float+0x36e>
 8102032:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102034:	459a      	cmp	sl, r3
 8102036:	dc3a      	bgt.n	81020ae <_printf_float+0x386>
 8102038:	6823      	ldr	r3, [r4, #0]
 810203a:	07da      	lsls	r2, r3, #31
 810203c:	d437      	bmi.n	81020ae <_printf_float+0x386>
 810203e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102040:	ebaa 0903 	sub.w	r9, sl, r3
 8102044:	9b06      	ldr	r3, [sp, #24]
 8102046:	ebaa 0303 	sub.w	r3, sl, r3
 810204a:	4599      	cmp	r9, r3
 810204c:	bfa8      	it	ge
 810204e:	4699      	movge	r9, r3
 8102050:	f1b9 0f00 	cmp.w	r9, #0
 8102054:	dc33      	bgt.n	81020be <_printf_float+0x396>
 8102056:	f04f 0800 	mov.w	r8, #0
 810205a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 810205e:	f104 0b1a 	add.w	fp, r4, #26
 8102062:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102064:	ebaa 0303 	sub.w	r3, sl, r3
 8102068:	eba3 0309 	sub.w	r3, r3, r9
 810206c:	4543      	cmp	r3, r8
 810206e:	f77f af79 	ble.w	8101f64 <_printf_float+0x23c>
 8102072:	2301      	movs	r3, #1
 8102074:	465a      	mov	r2, fp
 8102076:	4631      	mov	r1, r6
 8102078:	4628      	mov	r0, r5
 810207a:	47b8      	blx	r7
 810207c:	3001      	adds	r0, #1
 810207e:	f43f aeae 	beq.w	8101dde <_printf_float+0xb6>
 8102082:	f108 0801 	add.w	r8, r8, #1
 8102086:	e7ec      	b.n	8102062 <_printf_float+0x33a>
 8102088:	4642      	mov	r2, r8
 810208a:	4631      	mov	r1, r6
 810208c:	4628      	mov	r0, r5
 810208e:	47b8      	blx	r7
 8102090:	3001      	adds	r0, #1
 8102092:	d1c2      	bne.n	810201a <_printf_float+0x2f2>
 8102094:	e6a3      	b.n	8101dde <_printf_float+0xb6>
 8102096:	2301      	movs	r3, #1
 8102098:	4631      	mov	r1, r6
 810209a:	4628      	mov	r0, r5
 810209c:	9206      	str	r2, [sp, #24]
 810209e:	47b8      	blx	r7
 81020a0:	3001      	adds	r0, #1
 81020a2:	f43f ae9c 	beq.w	8101dde <_printf_float+0xb6>
 81020a6:	9a06      	ldr	r2, [sp, #24]
 81020a8:	f10b 0b01 	add.w	fp, fp, #1
 81020ac:	e7bb      	b.n	8102026 <_printf_float+0x2fe>
 81020ae:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 81020b2:	4631      	mov	r1, r6
 81020b4:	4628      	mov	r0, r5
 81020b6:	47b8      	blx	r7
 81020b8:	3001      	adds	r0, #1
 81020ba:	d1c0      	bne.n	810203e <_printf_float+0x316>
 81020bc:	e68f      	b.n	8101dde <_printf_float+0xb6>
 81020be:	9a06      	ldr	r2, [sp, #24]
 81020c0:	464b      	mov	r3, r9
 81020c2:	4442      	add	r2, r8
 81020c4:	4631      	mov	r1, r6
 81020c6:	4628      	mov	r0, r5
 81020c8:	47b8      	blx	r7
 81020ca:	3001      	adds	r0, #1
 81020cc:	d1c3      	bne.n	8102056 <_printf_float+0x32e>
 81020ce:	e686      	b.n	8101dde <_printf_float+0xb6>
 81020d0:	f8dd a028 	ldr.w	sl, [sp, #40]	@ 0x28
 81020d4:	f1ba 0f01 	cmp.w	sl, #1
 81020d8:	dc01      	bgt.n	81020de <_printf_float+0x3b6>
 81020da:	07db      	lsls	r3, r3, #31
 81020dc:	d536      	bpl.n	810214c <_printf_float+0x424>
 81020de:	2301      	movs	r3, #1
 81020e0:	4642      	mov	r2, r8
 81020e2:	4631      	mov	r1, r6
 81020e4:	4628      	mov	r0, r5
 81020e6:	47b8      	blx	r7
 81020e8:	3001      	adds	r0, #1
 81020ea:	f43f ae78 	beq.w	8101dde <_printf_float+0xb6>
 81020ee:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 81020f2:	4631      	mov	r1, r6
 81020f4:	4628      	mov	r0, r5
 81020f6:	47b8      	blx	r7
 81020f8:	3001      	adds	r0, #1
 81020fa:	f43f ae70 	beq.w	8101dde <_printf_float+0xb6>
 81020fe:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	@ 0x48
 8102102:	2200      	movs	r2, #0
 8102104:	2300      	movs	r3, #0
 8102106:	f10a 3aff 	add.w	sl, sl, #4294967295	@ 0xffffffff
 810210a:	f7fe fd65 	bl	8100bd8 <__aeabi_dcmpeq>
 810210e:	b9c0      	cbnz	r0, 8102142 <_printf_float+0x41a>
 8102110:	4653      	mov	r3, sl
 8102112:	f108 0201 	add.w	r2, r8, #1
 8102116:	4631      	mov	r1, r6
 8102118:	4628      	mov	r0, r5
 810211a:	47b8      	blx	r7
 810211c:	3001      	adds	r0, #1
 810211e:	d10c      	bne.n	810213a <_printf_float+0x412>
 8102120:	e65d      	b.n	8101dde <_printf_float+0xb6>
 8102122:	2301      	movs	r3, #1
 8102124:	465a      	mov	r2, fp
 8102126:	4631      	mov	r1, r6
 8102128:	4628      	mov	r0, r5
 810212a:	47b8      	blx	r7
 810212c:	3001      	adds	r0, #1
 810212e:	f43f ae56 	beq.w	8101dde <_printf_float+0xb6>
 8102132:	f108 0801 	add.w	r8, r8, #1
 8102136:	45d0      	cmp	r8, sl
 8102138:	dbf3      	blt.n	8102122 <_printf_float+0x3fa>
 810213a:	464b      	mov	r3, r9
 810213c:	f104 0250 	add.w	r2, r4, #80	@ 0x50
 8102140:	e6df      	b.n	8101f02 <_printf_float+0x1da>
 8102142:	f04f 0800 	mov.w	r8, #0
 8102146:	f104 0b1a 	add.w	fp, r4, #26
 810214a:	e7f4      	b.n	8102136 <_printf_float+0x40e>
 810214c:	2301      	movs	r3, #1
 810214e:	4642      	mov	r2, r8
 8102150:	e7e1      	b.n	8102116 <_printf_float+0x3ee>
 8102152:	2301      	movs	r3, #1
 8102154:	464a      	mov	r2, r9
 8102156:	4631      	mov	r1, r6
 8102158:	4628      	mov	r0, r5
 810215a:	47b8      	blx	r7
 810215c:	3001      	adds	r0, #1
 810215e:	f43f ae3e 	beq.w	8101dde <_printf_float+0xb6>
 8102162:	f108 0801 	add.w	r8, r8, #1
 8102166:	68e3      	ldr	r3, [r4, #12]
 8102168:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 810216a:	1a5b      	subs	r3, r3, r1
 810216c:	4543      	cmp	r3, r8
 810216e:	dcf0      	bgt.n	8102152 <_printf_float+0x42a>
 8102170:	e6fc      	b.n	8101f6c <_printf_float+0x244>
 8102172:	f04f 0800 	mov.w	r8, #0
 8102176:	f104 0919 	add.w	r9, r4, #25
 810217a:	e7f4      	b.n	8102166 <_printf_float+0x43e>

0810217c <_printf_common>:
 810217c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8102180:	4616      	mov	r6, r2
 8102182:	4698      	mov	r8, r3
 8102184:	688a      	ldr	r2, [r1, #8]
 8102186:	690b      	ldr	r3, [r1, #16]
 8102188:	f8dd 9020 	ldr.w	r9, [sp, #32]
 810218c:	4293      	cmp	r3, r2
 810218e:	bfb8      	it	lt
 8102190:	4613      	movlt	r3, r2
 8102192:	6033      	str	r3, [r6, #0]
 8102194:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8102198:	4607      	mov	r7, r0
 810219a:	460c      	mov	r4, r1
 810219c:	b10a      	cbz	r2, 81021a2 <_printf_common+0x26>
 810219e:	3301      	adds	r3, #1
 81021a0:	6033      	str	r3, [r6, #0]
 81021a2:	6823      	ldr	r3, [r4, #0]
 81021a4:	0699      	lsls	r1, r3, #26
 81021a6:	bf42      	ittt	mi
 81021a8:	6833      	ldrmi	r3, [r6, #0]
 81021aa:	3302      	addmi	r3, #2
 81021ac:	6033      	strmi	r3, [r6, #0]
 81021ae:	6825      	ldr	r5, [r4, #0]
 81021b0:	f015 0506 	ands.w	r5, r5, #6
 81021b4:	d106      	bne.n	81021c4 <_printf_common+0x48>
 81021b6:	f104 0a19 	add.w	sl, r4, #25
 81021ba:	68e3      	ldr	r3, [r4, #12]
 81021bc:	6832      	ldr	r2, [r6, #0]
 81021be:	1a9b      	subs	r3, r3, r2
 81021c0:	42ab      	cmp	r3, r5
 81021c2:	dc26      	bgt.n	8102212 <_printf_common+0x96>
 81021c4:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 81021c8:	6822      	ldr	r2, [r4, #0]
 81021ca:	3b00      	subs	r3, #0
 81021cc:	bf18      	it	ne
 81021ce:	2301      	movne	r3, #1
 81021d0:	0692      	lsls	r2, r2, #26
 81021d2:	d42b      	bmi.n	810222c <_printf_common+0xb0>
 81021d4:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 81021d8:	4641      	mov	r1, r8
 81021da:	4638      	mov	r0, r7
 81021dc:	47c8      	blx	r9
 81021de:	3001      	adds	r0, #1
 81021e0:	d01e      	beq.n	8102220 <_printf_common+0xa4>
 81021e2:	6823      	ldr	r3, [r4, #0]
 81021e4:	6922      	ldr	r2, [r4, #16]
 81021e6:	f003 0306 	and.w	r3, r3, #6
 81021ea:	2b04      	cmp	r3, #4
 81021ec:	bf02      	ittt	eq
 81021ee:	68e5      	ldreq	r5, [r4, #12]
 81021f0:	6833      	ldreq	r3, [r6, #0]
 81021f2:	1aed      	subeq	r5, r5, r3
 81021f4:	68a3      	ldr	r3, [r4, #8]
 81021f6:	bf0c      	ite	eq
 81021f8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 81021fc:	2500      	movne	r5, #0
 81021fe:	4293      	cmp	r3, r2
 8102200:	bfc4      	itt	gt
 8102202:	1a9b      	subgt	r3, r3, r2
 8102204:	18ed      	addgt	r5, r5, r3
 8102206:	2600      	movs	r6, #0
 8102208:	341a      	adds	r4, #26
 810220a:	42b5      	cmp	r5, r6
 810220c:	d11a      	bne.n	8102244 <_printf_common+0xc8>
 810220e:	2000      	movs	r0, #0
 8102210:	e008      	b.n	8102224 <_printf_common+0xa8>
 8102212:	2301      	movs	r3, #1
 8102214:	4652      	mov	r2, sl
 8102216:	4641      	mov	r1, r8
 8102218:	4638      	mov	r0, r7
 810221a:	47c8      	blx	r9
 810221c:	3001      	adds	r0, #1
 810221e:	d103      	bne.n	8102228 <_printf_common+0xac>
 8102220:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8102224:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8102228:	3501      	adds	r5, #1
 810222a:	e7c6      	b.n	81021ba <_printf_common+0x3e>
 810222c:	18e1      	adds	r1, r4, r3
 810222e:	1c5a      	adds	r2, r3, #1
 8102230:	2030      	movs	r0, #48	@ 0x30
 8102232:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8102236:	4422      	add	r2, r4
 8102238:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 810223c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8102240:	3302      	adds	r3, #2
 8102242:	e7c7      	b.n	81021d4 <_printf_common+0x58>
 8102244:	2301      	movs	r3, #1
 8102246:	4622      	mov	r2, r4
 8102248:	4641      	mov	r1, r8
 810224a:	4638      	mov	r0, r7
 810224c:	47c8      	blx	r9
 810224e:	3001      	adds	r0, #1
 8102250:	d0e6      	beq.n	8102220 <_printf_common+0xa4>
 8102252:	3601      	adds	r6, #1
 8102254:	e7d9      	b.n	810220a <_printf_common+0x8e>
	...

08102258 <_printf_i>:
 8102258:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 810225c:	7e0f      	ldrb	r7, [r1, #24]
 810225e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8102260:	2f78      	cmp	r7, #120	@ 0x78
 8102262:	4691      	mov	r9, r2
 8102264:	4680      	mov	r8, r0
 8102266:	460c      	mov	r4, r1
 8102268:	469a      	mov	sl, r3
 810226a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 810226e:	d807      	bhi.n	8102280 <_printf_i+0x28>
 8102270:	2f62      	cmp	r7, #98	@ 0x62
 8102272:	d80a      	bhi.n	810228a <_printf_i+0x32>
 8102274:	2f00      	cmp	r7, #0
 8102276:	f000 80d2 	beq.w	810241e <_printf_i+0x1c6>
 810227a:	2f58      	cmp	r7, #88	@ 0x58
 810227c:	f000 80b9 	beq.w	81023f2 <_printf_i+0x19a>
 8102280:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8102284:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8102288:	e03a      	b.n	8102300 <_printf_i+0xa8>
 810228a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 810228e:	2b15      	cmp	r3, #21
 8102290:	d8f6      	bhi.n	8102280 <_printf_i+0x28>
 8102292:	a101      	add	r1, pc, #4	@ (adr r1, 8102298 <_printf_i+0x40>)
 8102294:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8102298:	081022f1 	.word	0x081022f1
 810229c:	08102305 	.word	0x08102305
 81022a0:	08102281 	.word	0x08102281
 81022a4:	08102281 	.word	0x08102281
 81022a8:	08102281 	.word	0x08102281
 81022ac:	08102281 	.word	0x08102281
 81022b0:	08102305 	.word	0x08102305
 81022b4:	08102281 	.word	0x08102281
 81022b8:	08102281 	.word	0x08102281
 81022bc:	08102281 	.word	0x08102281
 81022c0:	08102281 	.word	0x08102281
 81022c4:	08102405 	.word	0x08102405
 81022c8:	0810232f 	.word	0x0810232f
 81022cc:	081023bf 	.word	0x081023bf
 81022d0:	08102281 	.word	0x08102281
 81022d4:	08102281 	.word	0x08102281
 81022d8:	08102427 	.word	0x08102427
 81022dc:	08102281 	.word	0x08102281
 81022e0:	0810232f 	.word	0x0810232f
 81022e4:	08102281 	.word	0x08102281
 81022e8:	08102281 	.word	0x08102281
 81022ec:	081023c7 	.word	0x081023c7
 81022f0:	6833      	ldr	r3, [r6, #0]
 81022f2:	1d1a      	adds	r2, r3, #4
 81022f4:	681b      	ldr	r3, [r3, #0]
 81022f6:	6032      	str	r2, [r6, #0]
 81022f8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 81022fc:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8102300:	2301      	movs	r3, #1
 8102302:	e09d      	b.n	8102440 <_printf_i+0x1e8>
 8102304:	6833      	ldr	r3, [r6, #0]
 8102306:	6820      	ldr	r0, [r4, #0]
 8102308:	1d19      	adds	r1, r3, #4
 810230a:	6031      	str	r1, [r6, #0]
 810230c:	0606      	lsls	r6, r0, #24
 810230e:	d501      	bpl.n	8102314 <_printf_i+0xbc>
 8102310:	681d      	ldr	r5, [r3, #0]
 8102312:	e003      	b.n	810231c <_printf_i+0xc4>
 8102314:	0645      	lsls	r5, r0, #25
 8102316:	d5fb      	bpl.n	8102310 <_printf_i+0xb8>
 8102318:	f9b3 5000 	ldrsh.w	r5, [r3]
 810231c:	2d00      	cmp	r5, #0
 810231e:	da03      	bge.n	8102328 <_printf_i+0xd0>
 8102320:	232d      	movs	r3, #45	@ 0x2d
 8102322:	426d      	negs	r5, r5
 8102324:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8102328:	4859      	ldr	r0, [pc, #356]	@ (8102490 <_printf_i+0x238>)
 810232a:	230a      	movs	r3, #10
 810232c:	e011      	b.n	8102352 <_printf_i+0xfa>
 810232e:	6821      	ldr	r1, [r4, #0]
 8102330:	6833      	ldr	r3, [r6, #0]
 8102332:	0608      	lsls	r0, r1, #24
 8102334:	f853 5b04 	ldr.w	r5, [r3], #4
 8102338:	d402      	bmi.n	8102340 <_printf_i+0xe8>
 810233a:	0649      	lsls	r1, r1, #25
 810233c:	bf48      	it	mi
 810233e:	b2ad      	uxthmi	r5, r5
 8102340:	2f6f      	cmp	r7, #111	@ 0x6f
 8102342:	4853      	ldr	r0, [pc, #332]	@ (8102490 <_printf_i+0x238>)
 8102344:	6033      	str	r3, [r6, #0]
 8102346:	bf14      	ite	ne
 8102348:	230a      	movne	r3, #10
 810234a:	2308      	moveq	r3, #8
 810234c:	2100      	movs	r1, #0
 810234e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8102352:	6866      	ldr	r6, [r4, #4]
 8102354:	60a6      	str	r6, [r4, #8]
 8102356:	2e00      	cmp	r6, #0
 8102358:	bfa2      	ittt	ge
 810235a:	6821      	ldrge	r1, [r4, #0]
 810235c:	f021 0104 	bicge.w	r1, r1, #4
 8102360:	6021      	strge	r1, [r4, #0]
 8102362:	b90d      	cbnz	r5, 8102368 <_printf_i+0x110>
 8102364:	2e00      	cmp	r6, #0
 8102366:	d04b      	beq.n	8102400 <_printf_i+0x1a8>
 8102368:	4616      	mov	r6, r2
 810236a:	fbb5 f1f3 	udiv	r1, r5, r3
 810236e:	fb03 5711 	mls	r7, r3, r1, r5
 8102372:	5dc7      	ldrb	r7, [r0, r7]
 8102374:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8102378:	462f      	mov	r7, r5
 810237a:	42bb      	cmp	r3, r7
 810237c:	460d      	mov	r5, r1
 810237e:	d9f4      	bls.n	810236a <_printf_i+0x112>
 8102380:	2b08      	cmp	r3, #8
 8102382:	d10b      	bne.n	810239c <_printf_i+0x144>
 8102384:	6823      	ldr	r3, [r4, #0]
 8102386:	07df      	lsls	r7, r3, #31
 8102388:	d508      	bpl.n	810239c <_printf_i+0x144>
 810238a:	6923      	ldr	r3, [r4, #16]
 810238c:	6861      	ldr	r1, [r4, #4]
 810238e:	4299      	cmp	r1, r3
 8102390:	bfde      	ittt	le
 8102392:	2330      	movle	r3, #48	@ 0x30
 8102394:	f806 3c01 	strble.w	r3, [r6, #-1]
 8102398:	f106 36ff 	addle.w	r6, r6, #4294967295	@ 0xffffffff
 810239c:	1b92      	subs	r2, r2, r6
 810239e:	6122      	str	r2, [r4, #16]
 81023a0:	f8cd a000 	str.w	sl, [sp]
 81023a4:	464b      	mov	r3, r9
 81023a6:	aa03      	add	r2, sp, #12
 81023a8:	4621      	mov	r1, r4
 81023aa:	4640      	mov	r0, r8
 81023ac:	f7ff fee6 	bl	810217c <_printf_common>
 81023b0:	3001      	adds	r0, #1
 81023b2:	d14a      	bne.n	810244a <_printf_i+0x1f2>
 81023b4:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 81023b8:	b004      	add	sp, #16
 81023ba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 81023be:	6823      	ldr	r3, [r4, #0]
 81023c0:	f043 0320 	orr.w	r3, r3, #32
 81023c4:	6023      	str	r3, [r4, #0]
 81023c6:	4833      	ldr	r0, [pc, #204]	@ (8102494 <_printf_i+0x23c>)
 81023c8:	2778      	movs	r7, #120	@ 0x78
 81023ca:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 81023ce:	6823      	ldr	r3, [r4, #0]
 81023d0:	6831      	ldr	r1, [r6, #0]
 81023d2:	061f      	lsls	r7, r3, #24
 81023d4:	f851 5b04 	ldr.w	r5, [r1], #4
 81023d8:	d402      	bmi.n	81023e0 <_printf_i+0x188>
 81023da:	065f      	lsls	r7, r3, #25
 81023dc:	bf48      	it	mi
 81023de:	b2ad      	uxthmi	r5, r5
 81023e0:	6031      	str	r1, [r6, #0]
 81023e2:	07d9      	lsls	r1, r3, #31
 81023e4:	bf44      	itt	mi
 81023e6:	f043 0320 	orrmi.w	r3, r3, #32
 81023ea:	6023      	strmi	r3, [r4, #0]
 81023ec:	b11d      	cbz	r5, 81023f6 <_printf_i+0x19e>
 81023ee:	2310      	movs	r3, #16
 81023f0:	e7ac      	b.n	810234c <_printf_i+0xf4>
 81023f2:	4827      	ldr	r0, [pc, #156]	@ (8102490 <_printf_i+0x238>)
 81023f4:	e7e9      	b.n	81023ca <_printf_i+0x172>
 81023f6:	6823      	ldr	r3, [r4, #0]
 81023f8:	f023 0320 	bic.w	r3, r3, #32
 81023fc:	6023      	str	r3, [r4, #0]
 81023fe:	e7f6      	b.n	81023ee <_printf_i+0x196>
 8102400:	4616      	mov	r6, r2
 8102402:	e7bd      	b.n	8102380 <_printf_i+0x128>
 8102404:	6833      	ldr	r3, [r6, #0]
 8102406:	6825      	ldr	r5, [r4, #0]
 8102408:	6961      	ldr	r1, [r4, #20]
 810240a:	1d18      	adds	r0, r3, #4
 810240c:	6030      	str	r0, [r6, #0]
 810240e:	062e      	lsls	r6, r5, #24
 8102410:	681b      	ldr	r3, [r3, #0]
 8102412:	d501      	bpl.n	8102418 <_printf_i+0x1c0>
 8102414:	6019      	str	r1, [r3, #0]
 8102416:	e002      	b.n	810241e <_printf_i+0x1c6>
 8102418:	0668      	lsls	r0, r5, #25
 810241a:	d5fb      	bpl.n	8102414 <_printf_i+0x1bc>
 810241c:	8019      	strh	r1, [r3, #0]
 810241e:	2300      	movs	r3, #0
 8102420:	6123      	str	r3, [r4, #16]
 8102422:	4616      	mov	r6, r2
 8102424:	e7bc      	b.n	81023a0 <_printf_i+0x148>
 8102426:	6833      	ldr	r3, [r6, #0]
 8102428:	1d1a      	adds	r2, r3, #4
 810242a:	6032      	str	r2, [r6, #0]
 810242c:	681e      	ldr	r6, [r3, #0]
 810242e:	6862      	ldr	r2, [r4, #4]
 8102430:	2100      	movs	r1, #0
 8102432:	4630      	mov	r0, r6
 8102434:	f7fd ff54 	bl	81002e0 <memchr>
 8102438:	b108      	cbz	r0, 810243e <_printf_i+0x1e6>
 810243a:	1b80      	subs	r0, r0, r6
 810243c:	6060      	str	r0, [r4, #4]
 810243e:	6863      	ldr	r3, [r4, #4]
 8102440:	6123      	str	r3, [r4, #16]
 8102442:	2300      	movs	r3, #0
 8102444:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8102448:	e7aa      	b.n	81023a0 <_printf_i+0x148>
 810244a:	6923      	ldr	r3, [r4, #16]
 810244c:	4632      	mov	r2, r6
 810244e:	4649      	mov	r1, r9
 8102450:	4640      	mov	r0, r8
 8102452:	47d0      	blx	sl
 8102454:	3001      	adds	r0, #1
 8102456:	d0ad      	beq.n	81023b4 <_printf_i+0x15c>
 8102458:	6823      	ldr	r3, [r4, #0]
 810245a:	079b      	lsls	r3, r3, #30
 810245c:	d413      	bmi.n	8102486 <_printf_i+0x22e>
 810245e:	68e0      	ldr	r0, [r4, #12]
 8102460:	9b03      	ldr	r3, [sp, #12]
 8102462:	4298      	cmp	r0, r3
 8102464:	bfb8      	it	lt
 8102466:	4618      	movlt	r0, r3
 8102468:	e7a6      	b.n	81023b8 <_printf_i+0x160>
 810246a:	2301      	movs	r3, #1
 810246c:	4632      	mov	r2, r6
 810246e:	4649      	mov	r1, r9
 8102470:	4640      	mov	r0, r8
 8102472:	47d0      	blx	sl
 8102474:	3001      	adds	r0, #1
 8102476:	d09d      	beq.n	81023b4 <_printf_i+0x15c>
 8102478:	3501      	adds	r5, #1
 810247a:	68e3      	ldr	r3, [r4, #12]
 810247c:	9903      	ldr	r1, [sp, #12]
 810247e:	1a5b      	subs	r3, r3, r1
 8102480:	42ab      	cmp	r3, r5
 8102482:	dcf2      	bgt.n	810246a <_printf_i+0x212>
 8102484:	e7eb      	b.n	810245e <_printf_i+0x206>
 8102486:	2500      	movs	r5, #0
 8102488:	f104 0619 	add.w	r6, r4, #25
 810248c:	e7f5      	b.n	810247a <_printf_i+0x222>
 810248e:	bf00      	nop
 8102490:	08104522 	.word	0x08104522
 8102494:	08104533 	.word	0x08104533

08102498 <std>:
 8102498:	2300      	movs	r3, #0
 810249a:	b510      	push	{r4, lr}
 810249c:	4604      	mov	r4, r0
 810249e:	e9c0 3300 	strd	r3, r3, [r0]
 81024a2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 81024a6:	6083      	str	r3, [r0, #8]
 81024a8:	8181      	strh	r1, [r0, #12]
 81024aa:	6643      	str	r3, [r0, #100]	@ 0x64
 81024ac:	81c2      	strh	r2, [r0, #14]
 81024ae:	6183      	str	r3, [r0, #24]
 81024b0:	4619      	mov	r1, r3
 81024b2:	2208      	movs	r2, #8
 81024b4:	305c      	adds	r0, #92	@ 0x5c
 81024b6:	f000 f8f4 	bl	81026a2 <memset>
 81024ba:	4b0d      	ldr	r3, [pc, #52]	@ (81024f0 <std+0x58>)
 81024bc:	6263      	str	r3, [r4, #36]	@ 0x24
 81024be:	4b0d      	ldr	r3, [pc, #52]	@ (81024f4 <std+0x5c>)
 81024c0:	62a3      	str	r3, [r4, #40]	@ 0x28
 81024c2:	4b0d      	ldr	r3, [pc, #52]	@ (81024f8 <std+0x60>)
 81024c4:	62e3      	str	r3, [r4, #44]	@ 0x2c
 81024c6:	4b0d      	ldr	r3, [pc, #52]	@ (81024fc <std+0x64>)
 81024c8:	6323      	str	r3, [r4, #48]	@ 0x30
 81024ca:	4b0d      	ldr	r3, [pc, #52]	@ (8102500 <std+0x68>)
 81024cc:	6224      	str	r4, [r4, #32]
 81024ce:	429c      	cmp	r4, r3
 81024d0:	d006      	beq.n	81024e0 <std+0x48>
 81024d2:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 81024d6:	4294      	cmp	r4, r2
 81024d8:	d002      	beq.n	81024e0 <std+0x48>
 81024da:	33d0      	adds	r3, #208	@ 0xd0
 81024dc:	429c      	cmp	r4, r3
 81024de:	d105      	bne.n	81024ec <std+0x54>
 81024e0:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 81024e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 81024e8:	f000 b958 	b.w	810279c <__retarget_lock_init_recursive>
 81024ec:	bd10      	pop	{r4, pc}
 81024ee:	bf00      	nop
 81024f0:	0810261d 	.word	0x0810261d
 81024f4:	0810263f 	.word	0x0810263f
 81024f8:	08102677 	.word	0x08102677
 81024fc:	0810269b 	.word	0x0810269b
 8102500:	100001fc 	.word	0x100001fc

08102504 <stdio_exit_handler>:
 8102504:	4a02      	ldr	r2, [pc, #8]	@ (8102510 <stdio_exit_handler+0xc>)
 8102506:	4903      	ldr	r1, [pc, #12]	@ (8102514 <stdio_exit_handler+0x10>)
 8102508:	4803      	ldr	r0, [pc, #12]	@ (8102518 <stdio_exit_handler+0x14>)
 810250a:	f000 b869 	b.w	81025e0 <_fwalk_sglue>
 810250e:	bf00      	nop
 8102510:	10000010 	.word	0x10000010
 8102514:	08103e4d 	.word	0x08103e4d
 8102518:	10000020 	.word	0x10000020

0810251c <cleanup_stdio>:
 810251c:	6841      	ldr	r1, [r0, #4]
 810251e:	4b0c      	ldr	r3, [pc, #48]	@ (8102550 <cleanup_stdio+0x34>)
 8102520:	4299      	cmp	r1, r3
 8102522:	b510      	push	{r4, lr}
 8102524:	4604      	mov	r4, r0
 8102526:	d001      	beq.n	810252c <cleanup_stdio+0x10>
 8102528:	f001 fc90 	bl	8103e4c <_fflush_r>
 810252c:	68a1      	ldr	r1, [r4, #8]
 810252e:	4b09      	ldr	r3, [pc, #36]	@ (8102554 <cleanup_stdio+0x38>)
 8102530:	4299      	cmp	r1, r3
 8102532:	d002      	beq.n	810253a <cleanup_stdio+0x1e>
 8102534:	4620      	mov	r0, r4
 8102536:	f001 fc89 	bl	8103e4c <_fflush_r>
 810253a:	68e1      	ldr	r1, [r4, #12]
 810253c:	4b06      	ldr	r3, [pc, #24]	@ (8102558 <cleanup_stdio+0x3c>)
 810253e:	4299      	cmp	r1, r3
 8102540:	d004      	beq.n	810254c <cleanup_stdio+0x30>
 8102542:	4620      	mov	r0, r4
 8102544:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8102548:	f001 bc80 	b.w	8103e4c <_fflush_r>
 810254c:	bd10      	pop	{r4, pc}
 810254e:	bf00      	nop
 8102550:	100001fc 	.word	0x100001fc
 8102554:	10000264 	.word	0x10000264
 8102558:	100002cc 	.word	0x100002cc

0810255c <global_stdio_init.part.0>:
 810255c:	b510      	push	{r4, lr}
 810255e:	4b0b      	ldr	r3, [pc, #44]	@ (810258c <global_stdio_init.part.0+0x30>)
 8102560:	4c0b      	ldr	r4, [pc, #44]	@ (8102590 <global_stdio_init.part.0+0x34>)
 8102562:	4a0c      	ldr	r2, [pc, #48]	@ (8102594 <global_stdio_init.part.0+0x38>)
 8102564:	601a      	str	r2, [r3, #0]
 8102566:	4620      	mov	r0, r4
 8102568:	2200      	movs	r2, #0
 810256a:	2104      	movs	r1, #4
 810256c:	f7ff ff94 	bl	8102498 <std>
 8102570:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8102574:	2201      	movs	r2, #1
 8102576:	2109      	movs	r1, #9
 8102578:	f7ff ff8e 	bl	8102498 <std>
 810257c:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8102580:	2202      	movs	r2, #2
 8102582:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8102586:	2112      	movs	r1, #18
 8102588:	f7ff bf86 	b.w	8102498 <std>
 810258c:	10000334 	.word	0x10000334
 8102590:	100001fc 	.word	0x100001fc
 8102594:	08102505 	.word	0x08102505

08102598 <__sfp_lock_acquire>:
 8102598:	4801      	ldr	r0, [pc, #4]	@ (81025a0 <__sfp_lock_acquire+0x8>)
 810259a:	f000 b900 	b.w	810279e <__retarget_lock_acquire_recursive>
 810259e:	bf00      	nop
 81025a0:	1000033d 	.word	0x1000033d

081025a4 <__sfp_lock_release>:
 81025a4:	4801      	ldr	r0, [pc, #4]	@ (81025ac <__sfp_lock_release+0x8>)
 81025a6:	f000 b8fb 	b.w	81027a0 <__retarget_lock_release_recursive>
 81025aa:	bf00      	nop
 81025ac:	1000033d 	.word	0x1000033d

081025b0 <__sinit>:
 81025b0:	b510      	push	{r4, lr}
 81025b2:	4604      	mov	r4, r0
 81025b4:	f7ff fff0 	bl	8102598 <__sfp_lock_acquire>
 81025b8:	6a23      	ldr	r3, [r4, #32]
 81025ba:	b11b      	cbz	r3, 81025c4 <__sinit+0x14>
 81025bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 81025c0:	f7ff bff0 	b.w	81025a4 <__sfp_lock_release>
 81025c4:	4b04      	ldr	r3, [pc, #16]	@ (81025d8 <__sinit+0x28>)
 81025c6:	6223      	str	r3, [r4, #32]
 81025c8:	4b04      	ldr	r3, [pc, #16]	@ (81025dc <__sinit+0x2c>)
 81025ca:	681b      	ldr	r3, [r3, #0]
 81025cc:	2b00      	cmp	r3, #0
 81025ce:	d1f5      	bne.n	81025bc <__sinit+0xc>
 81025d0:	f7ff ffc4 	bl	810255c <global_stdio_init.part.0>
 81025d4:	e7f2      	b.n	81025bc <__sinit+0xc>
 81025d6:	bf00      	nop
 81025d8:	0810251d 	.word	0x0810251d
 81025dc:	10000334 	.word	0x10000334

081025e0 <_fwalk_sglue>:
 81025e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 81025e4:	4607      	mov	r7, r0
 81025e6:	4688      	mov	r8, r1
 81025e8:	4614      	mov	r4, r2
 81025ea:	2600      	movs	r6, #0
 81025ec:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 81025f0:	f1b9 0901 	subs.w	r9, r9, #1
 81025f4:	d505      	bpl.n	8102602 <_fwalk_sglue+0x22>
 81025f6:	6824      	ldr	r4, [r4, #0]
 81025f8:	2c00      	cmp	r4, #0
 81025fa:	d1f7      	bne.n	81025ec <_fwalk_sglue+0xc>
 81025fc:	4630      	mov	r0, r6
 81025fe:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8102602:	89ab      	ldrh	r3, [r5, #12]
 8102604:	2b01      	cmp	r3, #1
 8102606:	d907      	bls.n	8102618 <_fwalk_sglue+0x38>
 8102608:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 810260c:	3301      	adds	r3, #1
 810260e:	d003      	beq.n	8102618 <_fwalk_sglue+0x38>
 8102610:	4629      	mov	r1, r5
 8102612:	4638      	mov	r0, r7
 8102614:	47c0      	blx	r8
 8102616:	4306      	orrs	r6, r0
 8102618:	3568      	adds	r5, #104	@ 0x68
 810261a:	e7e9      	b.n	81025f0 <_fwalk_sglue+0x10>

0810261c <__sread>:
 810261c:	b510      	push	{r4, lr}
 810261e:	460c      	mov	r4, r1
 8102620:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8102624:	f000 f86c 	bl	8102700 <_read_r>
 8102628:	2800      	cmp	r0, #0
 810262a:	bfab      	itete	ge
 810262c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 810262e:	89a3      	ldrhlt	r3, [r4, #12]
 8102630:	181b      	addge	r3, r3, r0
 8102632:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8102636:	bfac      	ite	ge
 8102638:	6563      	strge	r3, [r4, #84]	@ 0x54
 810263a:	81a3      	strhlt	r3, [r4, #12]
 810263c:	bd10      	pop	{r4, pc}

0810263e <__swrite>:
 810263e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8102642:	461f      	mov	r7, r3
 8102644:	898b      	ldrh	r3, [r1, #12]
 8102646:	05db      	lsls	r3, r3, #23
 8102648:	4605      	mov	r5, r0
 810264a:	460c      	mov	r4, r1
 810264c:	4616      	mov	r6, r2
 810264e:	d505      	bpl.n	810265c <__swrite+0x1e>
 8102650:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8102654:	2302      	movs	r3, #2
 8102656:	2200      	movs	r2, #0
 8102658:	f000 f840 	bl	81026dc <_lseek_r>
 810265c:	89a3      	ldrh	r3, [r4, #12]
 810265e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8102662:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8102666:	81a3      	strh	r3, [r4, #12]
 8102668:	4632      	mov	r2, r6
 810266a:	463b      	mov	r3, r7
 810266c:	4628      	mov	r0, r5
 810266e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8102672:	f000 b857 	b.w	8102724 <_write_r>

08102676 <__sseek>:
 8102676:	b510      	push	{r4, lr}
 8102678:	460c      	mov	r4, r1
 810267a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810267e:	f000 f82d 	bl	81026dc <_lseek_r>
 8102682:	1c43      	adds	r3, r0, #1
 8102684:	89a3      	ldrh	r3, [r4, #12]
 8102686:	bf15      	itete	ne
 8102688:	6560      	strne	r0, [r4, #84]	@ 0x54
 810268a:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 810268e:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8102692:	81a3      	strheq	r3, [r4, #12]
 8102694:	bf18      	it	ne
 8102696:	81a3      	strhne	r3, [r4, #12]
 8102698:	bd10      	pop	{r4, pc}

0810269a <__sclose>:
 810269a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 810269e:	f000 b80d 	b.w	81026bc <_close_r>

081026a2 <memset>:
 81026a2:	4402      	add	r2, r0
 81026a4:	4603      	mov	r3, r0
 81026a6:	4293      	cmp	r3, r2
 81026a8:	d100      	bne.n	81026ac <memset+0xa>
 81026aa:	4770      	bx	lr
 81026ac:	f803 1b01 	strb.w	r1, [r3], #1
 81026b0:	e7f9      	b.n	81026a6 <memset+0x4>
	...

081026b4 <_localeconv_r>:
 81026b4:	4800      	ldr	r0, [pc, #0]	@ (81026b8 <_localeconv_r+0x4>)
 81026b6:	4770      	bx	lr
 81026b8:	1000015c 	.word	0x1000015c

081026bc <_close_r>:
 81026bc:	b538      	push	{r3, r4, r5, lr}
 81026be:	4d06      	ldr	r5, [pc, #24]	@ (81026d8 <_close_r+0x1c>)
 81026c0:	2300      	movs	r3, #0
 81026c2:	4604      	mov	r4, r0
 81026c4:	4608      	mov	r0, r1
 81026c6:	602b      	str	r3, [r5, #0]
 81026c8:	f7fe fc31 	bl	8100f2e <_close>
 81026cc:	1c43      	adds	r3, r0, #1
 81026ce:	d102      	bne.n	81026d6 <_close_r+0x1a>
 81026d0:	682b      	ldr	r3, [r5, #0]
 81026d2:	b103      	cbz	r3, 81026d6 <_close_r+0x1a>
 81026d4:	6023      	str	r3, [r4, #0]
 81026d6:	bd38      	pop	{r3, r4, r5, pc}
 81026d8:	10000338 	.word	0x10000338

081026dc <_lseek_r>:
 81026dc:	b538      	push	{r3, r4, r5, lr}
 81026de:	4d07      	ldr	r5, [pc, #28]	@ (81026fc <_lseek_r+0x20>)
 81026e0:	4604      	mov	r4, r0
 81026e2:	4608      	mov	r0, r1
 81026e4:	4611      	mov	r1, r2
 81026e6:	2200      	movs	r2, #0
 81026e8:	602a      	str	r2, [r5, #0]
 81026ea:	461a      	mov	r2, r3
 81026ec:	f7fe fc46 	bl	8100f7c <_lseek>
 81026f0:	1c43      	adds	r3, r0, #1
 81026f2:	d102      	bne.n	81026fa <_lseek_r+0x1e>
 81026f4:	682b      	ldr	r3, [r5, #0]
 81026f6:	b103      	cbz	r3, 81026fa <_lseek_r+0x1e>
 81026f8:	6023      	str	r3, [r4, #0]
 81026fa:	bd38      	pop	{r3, r4, r5, pc}
 81026fc:	10000338 	.word	0x10000338

08102700 <_read_r>:
 8102700:	b538      	push	{r3, r4, r5, lr}
 8102702:	4d07      	ldr	r5, [pc, #28]	@ (8102720 <_read_r+0x20>)
 8102704:	4604      	mov	r4, r0
 8102706:	4608      	mov	r0, r1
 8102708:	4611      	mov	r1, r2
 810270a:	2200      	movs	r2, #0
 810270c:	602a      	str	r2, [r5, #0]
 810270e:	461a      	mov	r2, r3
 8102710:	f7fe fbd4 	bl	8100ebc <_read>
 8102714:	1c43      	adds	r3, r0, #1
 8102716:	d102      	bne.n	810271e <_read_r+0x1e>
 8102718:	682b      	ldr	r3, [r5, #0]
 810271a:	b103      	cbz	r3, 810271e <_read_r+0x1e>
 810271c:	6023      	str	r3, [r4, #0]
 810271e:	bd38      	pop	{r3, r4, r5, pc}
 8102720:	10000338 	.word	0x10000338

08102724 <_write_r>:
 8102724:	b538      	push	{r3, r4, r5, lr}
 8102726:	4d07      	ldr	r5, [pc, #28]	@ (8102744 <_write_r+0x20>)
 8102728:	4604      	mov	r4, r0
 810272a:	4608      	mov	r0, r1
 810272c:	4611      	mov	r1, r2
 810272e:	2200      	movs	r2, #0
 8102730:	602a      	str	r2, [r5, #0]
 8102732:	461a      	mov	r2, r3
 8102734:	f7fe fbdf 	bl	8100ef6 <_write>
 8102738:	1c43      	adds	r3, r0, #1
 810273a:	d102      	bne.n	8102742 <_write_r+0x1e>
 810273c:	682b      	ldr	r3, [r5, #0]
 810273e:	b103      	cbz	r3, 8102742 <_write_r+0x1e>
 8102740:	6023      	str	r3, [r4, #0]
 8102742:	bd38      	pop	{r3, r4, r5, pc}
 8102744:	10000338 	.word	0x10000338

08102748 <__errno>:
 8102748:	4b01      	ldr	r3, [pc, #4]	@ (8102750 <__errno+0x8>)
 810274a:	6818      	ldr	r0, [r3, #0]
 810274c:	4770      	bx	lr
 810274e:	bf00      	nop
 8102750:	1000001c 	.word	0x1000001c

08102754 <__libc_init_array>:
 8102754:	b570      	push	{r4, r5, r6, lr}
 8102756:	4d0d      	ldr	r5, [pc, #52]	@ (810278c <__libc_init_array+0x38>)
 8102758:	4c0d      	ldr	r4, [pc, #52]	@ (8102790 <__libc_init_array+0x3c>)
 810275a:	1b64      	subs	r4, r4, r5
 810275c:	10a4      	asrs	r4, r4, #2
 810275e:	2600      	movs	r6, #0
 8102760:	42a6      	cmp	r6, r4
 8102762:	d109      	bne.n	8102778 <__libc_init_array+0x24>
 8102764:	4d0b      	ldr	r5, [pc, #44]	@ (8102794 <__libc_init_array+0x40>)
 8102766:	4c0c      	ldr	r4, [pc, #48]	@ (8102798 <__libc_init_array+0x44>)
 8102768:	f001 febe 	bl	81044e8 <_init>
 810276c:	1b64      	subs	r4, r4, r5
 810276e:	10a4      	asrs	r4, r4, #2
 8102770:	2600      	movs	r6, #0
 8102772:	42a6      	cmp	r6, r4
 8102774:	d105      	bne.n	8102782 <__libc_init_array+0x2e>
 8102776:	bd70      	pop	{r4, r5, r6, pc}
 8102778:	f855 3b04 	ldr.w	r3, [r5], #4
 810277c:	4798      	blx	r3
 810277e:	3601      	adds	r6, #1
 8102780:	e7ee      	b.n	8102760 <__libc_init_array+0xc>
 8102782:	f855 3b04 	ldr.w	r3, [r5], #4
 8102786:	4798      	blx	r3
 8102788:	3601      	adds	r6, #1
 810278a:	e7f2      	b.n	8102772 <__libc_init_array+0x1e>
 810278c:	08104888 	.word	0x08104888
 8102790:	08104888 	.word	0x08104888
 8102794:	08104888 	.word	0x08104888
 8102798:	0810488c 	.word	0x0810488c

0810279c <__retarget_lock_init_recursive>:
 810279c:	4770      	bx	lr

0810279e <__retarget_lock_acquire_recursive>:
 810279e:	4770      	bx	lr

081027a0 <__retarget_lock_release_recursive>:
 81027a0:	4770      	bx	lr

081027a2 <quorem>:
 81027a2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81027a6:	6903      	ldr	r3, [r0, #16]
 81027a8:	690c      	ldr	r4, [r1, #16]
 81027aa:	42a3      	cmp	r3, r4
 81027ac:	4607      	mov	r7, r0
 81027ae:	db7e      	blt.n	81028ae <quorem+0x10c>
 81027b0:	3c01      	subs	r4, #1
 81027b2:	f101 0814 	add.w	r8, r1, #20
 81027b6:	00a3      	lsls	r3, r4, #2
 81027b8:	f100 0514 	add.w	r5, r0, #20
 81027bc:	9300      	str	r3, [sp, #0]
 81027be:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 81027c2:	9301      	str	r3, [sp, #4]
 81027c4:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 81027c8:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 81027cc:	3301      	adds	r3, #1
 81027ce:	429a      	cmp	r2, r3
 81027d0:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 81027d4:	fbb2 f6f3 	udiv	r6, r2, r3
 81027d8:	d32e      	bcc.n	8102838 <quorem+0x96>
 81027da:	f04f 0a00 	mov.w	sl, #0
 81027de:	46c4      	mov	ip, r8
 81027e0:	46ae      	mov	lr, r5
 81027e2:	46d3      	mov	fp, sl
 81027e4:	f85c 3b04 	ldr.w	r3, [ip], #4
 81027e8:	b298      	uxth	r0, r3
 81027ea:	fb06 a000 	mla	r0, r6, r0, sl
 81027ee:	0c02      	lsrs	r2, r0, #16
 81027f0:	0c1b      	lsrs	r3, r3, #16
 81027f2:	fb06 2303 	mla	r3, r6, r3, r2
 81027f6:	f8de 2000 	ldr.w	r2, [lr]
 81027fa:	b280      	uxth	r0, r0
 81027fc:	b292      	uxth	r2, r2
 81027fe:	1a12      	subs	r2, r2, r0
 8102800:	445a      	add	r2, fp
 8102802:	f8de 0000 	ldr.w	r0, [lr]
 8102806:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 810280a:	b29b      	uxth	r3, r3
 810280c:	ebc3 4322 	rsb	r3, r3, r2, asr #16
 8102810:	eb03 4310 	add.w	r3, r3, r0, lsr #16
 8102814:	b292      	uxth	r2, r2
 8102816:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 810281a:	45e1      	cmp	r9, ip
 810281c:	f84e 2b04 	str.w	r2, [lr], #4
 8102820:	ea4f 4b23 	mov.w	fp, r3, asr #16
 8102824:	d2de      	bcs.n	81027e4 <quorem+0x42>
 8102826:	9b00      	ldr	r3, [sp, #0]
 8102828:	58eb      	ldr	r3, [r5, r3]
 810282a:	b92b      	cbnz	r3, 8102838 <quorem+0x96>
 810282c:	9b01      	ldr	r3, [sp, #4]
 810282e:	3b04      	subs	r3, #4
 8102830:	429d      	cmp	r5, r3
 8102832:	461a      	mov	r2, r3
 8102834:	d32f      	bcc.n	8102896 <quorem+0xf4>
 8102836:	613c      	str	r4, [r7, #16]
 8102838:	4638      	mov	r0, r7
 810283a:	f001 f97b 	bl	8103b34 <__mcmp>
 810283e:	2800      	cmp	r0, #0
 8102840:	db25      	blt.n	810288e <quorem+0xec>
 8102842:	4629      	mov	r1, r5
 8102844:	2000      	movs	r0, #0
 8102846:	f858 2b04 	ldr.w	r2, [r8], #4
 810284a:	f8d1 c000 	ldr.w	ip, [r1]
 810284e:	fa1f fe82 	uxth.w	lr, r2
 8102852:	fa1f f38c 	uxth.w	r3, ip
 8102856:	eba3 030e 	sub.w	r3, r3, lr
 810285a:	4403      	add	r3, r0
 810285c:	0c12      	lsrs	r2, r2, #16
 810285e:	ebc2 4223 	rsb	r2, r2, r3, asr #16
 8102862:	eb02 421c 	add.w	r2, r2, ip, lsr #16
 8102866:	b29b      	uxth	r3, r3
 8102868:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 810286c:	45c1      	cmp	r9, r8
 810286e:	f841 3b04 	str.w	r3, [r1], #4
 8102872:	ea4f 4022 	mov.w	r0, r2, asr #16
 8102876:	d2e6      	bcs.n	8102846 <quorem+0xa4>
 8102878:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 810287c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8102880:	b922      	cbnz	r2, 810288c <quorem+0xea>
 8102882:	3b04      	subs	r3, #4
 8102884:	429d      	cmp	r5, r3
 8102886:	461a      	mov	r2, r3
 8102888:	d30b      	bcc.n	81028a2 <quorem+0x100>
 810288a:	613c      	str	r4, [r7, #16]
 810288c:	3601      	adds	r6, #1
 810288e:	4630      	mov	r0, r6
 8102890:	b003      	add	sp, #12
 8102892:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8102896:	6812      	ldr	r2, [r2, #0]
 8102898:	3b04      	subs	r3, #4
 810289a:	2a00      	cmp	r2, #0
 810289c:	d1cb      	bne.n	8102836 <quorem+0x94>
 810289e:	3c01      	subs	r4, #1
 81028a0:	e7c6      	b.n	8102830 <quorem+0x8e>
 81028a2:	6812      	ldr	r2, [r2, #0]
 81028a4:	3b04      	subs	r3, #4
 81028a6:	2a00      	cmp	r2, #0
 81028a8:	d1ef      	bne.n	810288a <quorem+0xe8>
 81028aa:	3c01      	subs	r4, #1
 81028ac:	e7ea      	b.n	8102884 <quorem+0xe2>
 81028ae:	2000      	movs	r0, #0
 81028b0:	e7ee      	b.n	8102890 <quorem+0xee>
 81028b2:	0000      	movs	r0, r0
 81028b4:	0000      	movs	r0, r0
	...

081028b8 <_dtoa_r>:
 81028b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 81028bc:	69c7      	ldr	r7, [r0, #28]
 81028be:	b099      	sub	sp, #100	@ 0x64
 81028c0:	ed8d 0b02 	vstr	d0, [sp, #8]
 81028c4:	ec55 4b10 	vmov	r4, r5, d0
 81028c8:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 81028ca:	9109      	str	r1, [sp, #36]	@ 0x24
 81028cc:	4683      	mov	fp, r0
 81028ce:	920e      	str	r2, [sp, #56]	@ 0x38
 81028d0:	9313      	str	r3, [sp, #76]	@ 0x4c
 81028d2:	b97f      	cbnz	r7, 81028f4 <_dtoa_r+0x3c>
 81028d4:	2010      	movs	r0, #16
 81028d6:	f000 fdfd 	bl	81034d4 <malloc>
 81028da:	4602      	mov	r2, r0
 81028dc:	f8cb 001c 	str.w	r0, [fp, #28]
 81028e0:	b920      	cbnz	r0, 81028ec <_dtoa_r+0x34>
 81028e2:	4ba7      	ldr	r3, [pc, #668]	@ (8102b80 <_dtoa_r+0x2c8>)
 81028e4:	21ef      	movs	r1, #239	@ 0xef
 81028e6:	48a7      	ldr	r0, [pc, #668]	@ (8102b84 <_dtoa_r+0x2cc>)
 81028e8:	f001 faf6 	bl	8103ed8 <__assert_func>
 81028ec:	e9c0 7701 	strd	r7, r7, [r0, #4]
 81028f0:	6007      	str	r7, [r0, #0]
 81028f2:	60c7      	str	r7, [r0, #12]
 81028f4:	f8db 301c 	ldr.w	r3, [fp, #28]
 81028f8:	6819      	ldr	r1, [r3, #0]
 81028fa:	b159      	cbz	r1, 8102914 <_dtoa_r+0x5c>
 81028fc:	685a      	ldr	r2, [r3, #4]
 81028fe:	604a      	str	r2, [r1, #4]
 8102900:	2301      	movs	r3, #1
 8102902:	4093      	lsls	r3, r2
 8102904:	608b      	str	r3, [r1, #8]
 8102906:	4658      	mov	r0, fp
 8102908:	f000 feda 	bl	81036c0 <_Bfree>
 810290c:	f8db 301c 	ldr.w	r3, [fp, #28]
 8102910:	2200      	movs	r2, #0
 8102912:	601a      	str	r2, [r3, #0]
 8102914:	1e2b      	subs	r3, r5, #0
 8102916:	bfb9      	ittee	lt
 8102918:	f023 4300 	biclt.w	r3, r3, #2147483648	@ 0x80000000
 810291c:	9303      	strlt	r3, [sp, #12]
 810291e:	2300      	movge	r3, #0
 8102920:	6033      	strge	r3, [r6, #0]
 8102922:	9f03      	ldr	r7, [sp, #12]
 8102924:	4b98      	ldr	r3, [pc, #608]	@ (8102b88 <_dtoa_r+0x2d0>)
 8102926:	bfbc      	itt	lt
 8102928:	2201      	movlt	r2, #1
 810292a:	6032      	strlt	r2, [r6, #0]
 810292c:	43bb      	bics	r3, r7
 810292e:	d112      	bne.n	8102956 <_dtoa_r+0x9e>
 8102930:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8102932:	f242 730f 	movw	r3, #9999	@ 0x270f
 8102936:	6013      	str	r3, [r2, #0]
 8102938:	f3c7 0313 	ubfx	r3, r7, #0, #20
 810293c:	4323      	orrs	r3, r4
 810293e:	f000 854d 	beq.w	81033dc <_dtoa_r+0xb24>
 8102942:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8102944:	f8df a254 	ldr.w	sl, [pc, #596]	@ 8102b9c <_dtoa_r+0x2e4>
 8102948:	2b00      	cmp	r3, #0
 810294a:	f000 854f 	beq.w	81033ec <_dtoa_r+0xb34>
 810294e:	f10a 0303 	add.w	r3, sl, #3
 8102952:	f000 bd49 	b.w	81033e8 <_dtoa_r+0xb30>
 8102956:	ed9d 7b02 	vldr	d7, [sp, #8]
 810295a:	2200      	movs	r2, #0
 810295c:	ec51 0b17 	vmov	r0, r1, d7
 8102960:	2300      	movs	r3, #0
 8102962:	ed8d 7b0c 	vstr	d7, [sp, #48]	@ 0x30
 8102966:	f7fe f937 	bl	8100bd8 <__aeabi_dcmpeq>
 810296a:	4680      	mov	r8, r0
 810296c:	b158      	cbz	r0, 8102986 <_dtoa_r+0xce>
 810296e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8102970:	2301      	movs	r3, #1
 8102972:	6013      	str	r3, [r2, #0]
 8102974:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8102976:	b113      	cbz	r3, 810297e <_dtoa_r+0xc6>
 8102978:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 810297a:	4b84      	ldr	r3, [pc, #528]	@ (8102b8c <_dtoa_r+0x2d4>)
 810297c:	6013      	str	r3, [r2, #0]
 810297e:	f8df a220 	ldr.w	sl, [pc, #544]	@ 8102ba0 <_dtoa_r+0x2e8>
 8102982:	f000 bd33 	b.w	81033ec <_dtoa_r+0xb34>
 8102986:	ed9d 0b0c 	vldr	d0, [sp, #48]	@ 0x30
 810298a:	aa16      	add	r2, sp, #88	@ 0x58
 810298c:	a917      	add	r1, sp, #92	@ 0x5c
 810298e:	4658      	mov	r0, fp
 8102990:	f001 f980 	bl	8103c94 <__d2b>
 8102994:	f3c7 560a 	ubfx	r6, r7, #20, #11
 8102998:	4681      	mov	r9, r0
 810299a:	2e00      	cmp	r6, #0
 810299c:	d077      	beq.n	8102a8e <_dtoa_r+0x1d6>
 810299e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 81029a0:	f8cd 8050 	str.w	r8, [sp, #80]	@ 0x50
 81029a4:	f3c3 0313 	ubfx	r3, r3, #0, #20
 81029a8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 81029ac:	f043 537f 	orr.w	r3, r3, #1069547520	@ 0x3fc00000
 81029b0:	f443 1340 	orr.w	r3, r3, #3145728	@ 0x300000
 81029b4:	f2a6 36ff 	subw	r6, r6, #1023	@ 0x3ff
 81029b8:	4619      	mov	r1, r3
 81029ba:	2200      	movs	r2, #0
 81029bc:	4b74      	ldr	r3, [pc, #464]	@ (8102b90 <_dtoa_r+0x2d8>)
 81029be:	f7fd fceb 	bl	8100398 <__aeabi_dsub>
 81029c2:	a369      	add	r3, pc, #420	@ (adr r3, 8102b68 <_dtoa_r+0x2b0>)
 81029c4:	e9d3 2300 	ldrd	r2, r3, [r3]
 81029c8:	f7fd fe9e 	bl	8100708 <__aeabi_dmul>
 81029cc:	a368      	add	r3, pc, #416	@ (adr r3, 8102b70 <_dtoa_r+0x2b8>)
 81029ce:	e9d3 2300 	ldrd	r2, r3, [r3]
 81029d2:	f7fd fce3 	bl	810039c <__adddf3>
 81029d6:	4604      	mov	r4, r0
 81029d8:	4630      	mov	r0, r6
 81029da:	460d      	mov	r5, r1
 81029dc:	f7fd fe2a 	bl	8100634 <__aeabi_i2d>
 81029e0:	a365      	add	r3, pc, #404	@ (adr r3, 8102b78 <_dtoa_r+0x2c0>)
 81029e2:	e9d3 2300 	ldrd	r2, r3, [r3]
 81029e6:	f7fd fe8f 	bl	8100708 <__aeabi_dmul>
 81029ea:	4602      	mov	r2, r0
 81029ec:	460b      	mov	r3, r1
 81029ee:	4620      	mov	r0, r4
 81029f0:	4629      	mov	r1, r5
 81029f2:	f7fd fcd3 	bl	810039c <__adddf3>
 81029f6:	4604      	mov	r4, r0
 81029f8:	460d      	mov	r5, r1
 81029fa:	f7fe f935 	bl	8100c68 <__aeabi_d2iz>
 81029fe:	2200      	movs	r2, #0
 8102a00:	4607      	mov	r7, r0
 8102a02:	2300      	movs	r3, #0
 8102a04:	4620      	mov	r0, r4
 8102a06:	4629      	mov	r1, r5
 8102a08:	f7fe f8f0 	bl	8100bec <__aeabi_dcmplt>
 8102a0c:	b140      	cbz	r0, 8102a20 <_dtoa_r+0x168>
 8102a0e:	4638      	mov	r0, r7
 8102a10:	f7fd fe10 	bl	8100634 <__aeabi_i2d>
 8102a14:	4622      	mov	r2, r4
 8102a16:	462b      	mov	r3, r5
 8102a18:	f7fe f8de 	bl	8100bd8 <__aeabi_dcmpeq>
 8102a1c:	b900      	cbnz	r0, 8102a20 <_dtoa_r+0x168>
 8102a1e:	3f01      	subs	r7, #1
 8102a20:	2f16      	cmp	r7, #22
 8102a22:	d851      	bhi.n	8102ac8 <_dtoa_r+0x210>
 8102a24:	4b5b      	ldr	r3, [pc, #364]	@ (8102b94 <_dtoa_r+0x2dc>)
 8102a26:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8102a2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8102a2e:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8102a32:	f7fe f8db 	bl	8100bec <__aeabi_dcmplt>
 8102a36:	2800      	cmp	r0, #0
 8102a38:	d048      	beq.n	8102acc <_dtoa_r+0x214>
 8102a3a:	3f01      	subs	r7, #1
 8102a3c:	2300      	movs	r3, #0
 8102a3e:	9312      	str	r3, [sp, #72]	@ 0x48
 8102a40:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8102a42:	1b9b      	subs	r3, r3, r6
 8102a44:	1e5a      	subs	r2, r3, #1
 8102a46:	bf44      	itt	mi
 8102a48:	f1c3 0801 	rsbmi	r8, r3, #1
 8102a4c:	2300      	movmi	r3, #0
 8102a4e:	9208      	str	r2, [sp, #32]
 8102a50:	bf54      	ite	pl
 8102a52:	f04f 0800 	movpl.w	r8, #0
 8102a56:	9308      	strmi	r3, [sp, #32]
 8102a58:	2f00      	cmp	r7, #0
 8102a5a:	db39      	blt.n	8102ad0 <_dtoa_r+0x218>
 8102a5c:	9b08      	ldr	r3, [sp, #32]
 8102a5e:	970f      	str	r7, [sp, #60]	@ 0x3c
 8102a60:	443b      	add	r3, r7
 8102a62:	9308      	str	r3, [sp, #32]
 8102a64:	2300      	movs	r3, #0
 8102a66:	930a      	str	r3, [sp, #40]	@ 0x28
 8102a68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102a6a:	2b09      	cmp	r3, #9
 8102a6c:	d864      	bhi.n	8102b38 <_dtoa_r+0x280>
 8102a6e:	2b05      	cmp	r3, #5
 8102a70:	bfc4      	itt	gt
 8102a72:	3b04      	subgt	r3, #4
 8102a74:	9309      	strgt	r3, [sp, #36]	@ 0x24
 8102a76:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8102a78:	f1a3 0302 	sub.w	r3, r3, #2
 8102a7c:	bfcc      	ite	gt
 8102a7e:	2400      	movgt	r4, #0
 8102a80:	2401      	movle	r4, #1
 8102a82:	2b03      	cmp	r3, #3
 8102a84:	d863      	bhi.n	8102b4e <_dtoa_r+0x296>
 8102a86:	e8df f003 	tbb	[pc, r3]
 8102a8a:	372a      	.short	0x372a
 8102a8c:	5535      	.short	0x5535
 8102a8e:	e9dd 6316 	ldrd	r6, r3, [sp, #88]	@ 0x58
 8102a92:	441e      	add	r6, r3
 8102a94:	f206 4332 	addw	r3, r6, #1074	@ 0x432
 8102a98:	2b20      	cmp	r3, #32
 8102a9a:	bfc1      	itttt	gt
 8102a9c:	f1c3 0340 	rsbgt	r3, r3, #64	@ 0x40
 8102aa0:	409f      	lslgt	r7, r3
 8102aa2:	f206 4312 	addwgt	r3, r6, #1042	@ 0x412
 8102aa6:	fa24 f303 	lsrgt.w	r3, r4, r3
 8102aaa:	bfd6      	itet	le
 8102aac:	f1c3 0320 	rsble	r3, r3, #32
 8102ab0:	ea47 0003 	orrgt.w	r0, r7, r3
 8102ab4:	fa04 f003 	lslle.w	r0, r4, r3
 8102ab8:	f7fd fdac 	bl	8100614 <__aeabi_ui2d>
 8102abc:	2201      	movs	r2, #1
 8102abe:	f1a1 73f8 	sub.w	r3, r1, #32505856	@ 0x1f00000
 8102ac2:	3e01      	subs	r6, #1
 8102ac4:	9214      	str	r2, [sp, #80]	@ 0x50
 8102ac6:	e777      	b.n	81029b8 <_dtoa_r+0x100>
 8102ac8:	2301      	movs	r3, #1
 8102aca:	e7b8      	b.n	8102a3e <_dtoa_r+0x186>
 8102acc:	9012      	str	r0, [sp, #72]	@ 0x48
 8102ace:	e7b7      	b.n	8102a40 <_dtoa_r+0x188>
 8102ad0:	427b      	negs	r3, r7
 8102ad2:	930a      	str	r3, [sp, #40]	@ 0x28
 8102ad4:	2300      	movs	r3, #0
 8102ad6:	eba8 0807 	sub.w	r8, r8, r7
 8102ada:	930f      	str	r3, [sp, #60]	@ 0x3c
 8102adc:	e7c4      	b.n	8102a68 <_dtoa_r+0x1b0>
 8102ade:	2300      	movs	r3, #0
 8102ae0:	930b      	str	r3, [sp, #44]	@ 0x2c
 8102ae2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102ae4:	2b00      	cmp	r3, #0
 8102ae6:	dc35      	bgt.n	8102b54 <_dtoa_r+0x29c>
 8102ae8:	2301      	movs	r3, #1
 8102aea:	9300      	str	r3, [sp, #0]
 8102aec:	9307      	str	r3, [sp, #28]
 8102aee:	461a      	mov	r2, r3
 8102af0:	920e      	str	r2, [sp, #56]	@ 0x38
 8102af2:	e00b      	b.n	8102b0c <_dtoa_r+0x254>
 8102af4:	2301      	movs	r3, #1
 8102af6:	e7f3      	b.n	8102ae0 <_dtoa_r+0x228>
 8102af8:	2300      	movs	r3, #0
 8102afa:	930b      	str	r3, [sp, #44]	@ 0x2c
 8102afc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102afe:	18fb      	adds	r3, r7, r3
 8102b00:	9300      	str	r3, [sp, #0]
 8102b02:	3301      	adds	r3, #1
 8102b04:	2b01      	cmp	r3, #1
 8102b06:	9307      	str	r3, [sp, #28]
 8102b08:	bfb8      	it	lt
 8102b0a:	2301      	movlt	r3, #1
 8102b0c:	f8db 001c 	ldr.w	r0, [fp, #28]
 8102b10:	2100      	movs	r1, #0
 8102b12:	2204      	movs	r2, #4
 8102b14:	f102 0514 	add.w	r5, r2, #20
 8102b18:	429d      	cmp	r5, r3
 8102b1a:	d91f      	bls.n	8102b5c <_dtoa_r+0x2a4>
 8102b1c:	6041      	str	r1, [r0, #4]
 8102b1e:	4658      	mov	r0, fp
 8102b20:	f000 fd8e 	bl	8103640 <_Balloc>
 8102b24:	4682      	mov	sl, r0
 8102b26:	2800      	cmp	r0, #0
 8102b28:	d13c      	bne.n	8102ba4 <_dtoa_r+0x2ec>
 8102b2a:	4b1b      	ldr	r3, [pc, #108]	@ (8102b98 <_dtoa_r+0x2e0>)
 8102b2c:	4602      	mov	r2, r0
 8102b2e:	f240 11af 	movw	r1, #431	@ 0x1af
 8102b32:	e6d8      	b.n	81028e6 <_dtoa_r+0x2e>
 8102b34:	2301      	movs	r3, #1
 8102b36:	e7e0      	b.n	8102afa <_dtoa_r+0x242>
 8102b38:	2401      	movs	r4, #1
 8102b3a:	2300      	movs	r3, #0
 8102b3c:	9309      	str	r3, [sp, #36]	@ 0x24
 8102b3e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8102b40:	f04f 33ff 	mov.w	r3, #4294967295	@ 0xffffffff
 8102b44:	9300      	str	r3, [sp, #0]
 8102b46:	9307      	str	r3, [sp, #28]
 8102b48:	2200      	movs	r2, #0
 8102b4a:	2312      	movs	r3, #18
 8102b4c:	e7d0      	b.n	8102af0 <_dtoa_r+0x238>
 8102b4e:	2301      	movs	r3, #1
 8102b50:	930b      	str	r3, [sp, #44]	@ 0x2c
 8102b52:	e7f5      	b.n	8102b40 <_dtoa_r+0x288>
 8102b54:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102b56:	9300      	str	r3, [sp, #0]
 8102b58:	9307      	str	r3, [sp, #28]
 8102b5a:	e7d7      	b.n	8102b0c <_dtoa_r+0x254>
 8102b5c:	3101      	adds	r1, #1
 8102b5e:	0052      	lsls	r2, r2, #1
 8102b60:	e7d8      	b.n	8102b14 <_dtoa_r+0x25c>
 8102b62:	bf00      	nop
 8102b64:	f3af 8000 	nop.w
 8102b68:	636f4361 	.word	0x636f4361
 8102b6c:	3fd287a7 	.word	0x3fd287a7
 8102b70:	8b60c8b3 	.word	0x8b60c8b3
 8102b74:	3fc68a28 	.word	0x3fc68a28
 8102b78:	509f79fb 	.word	0x509f79fb
 8102b7c:	3fd34413 	.word	0x3fd34413
 8102b80:	08104551 	.word	0x08104551
 8102b84:	08104568 	.word	0x08104568
 8102b88:	7ff00000 	.word	0x7ff00000
 8102b8c:	08104521 	.word	0x08104521
 8102b90:	3ff80000 	.word	0x3ff80000
 8102b94:	08104660 	.word	0x08104660
 8102b98:	081045c0 	.word	0x081045c0
 8102b9c:	0810454d 	.word	0x0810454d
 8102ba0:	08104520 	.word	0x08104520
 8102ba4:	f8db 301c 	ldr.w	r3, [fp, #28]
 8102ba8:	6018      	str	r0, [r3, #0]
 8102baa:	9b07      	ldr	r3, [sp, #28]
 8102bac:	2b0e      	cmp	r3, #14
 8102bae:	f200 80a4 	bhi.w	8102cfa <_dtoa_r+0x442>
 8102bb2:	2c00      	cmp	r4, #0
 8102bb4:	f000 80a1 	beq.w	8102cfa <_dtoa_r+0x442>
 8102bb8:	2f00      	cmp	r7, #0
 8102bba:	dd33      	ble.n	8102c24 <_dtoa_r+0x36c>
 8102bbc:	4bad      	ldr	r3, [pc, #692]	@ (8102e74 <_dtoa_r+0x5bc>)
 8102bbe:	f007 020f 	and.w	r2, r7, #15
 8102bc2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8102bc6:	ed93 7b00 	vldr	d7, [r3]
 8102bca:	05f8      	lsls	r0, r7, #23
 8102bcc:	ed8d 7b04 	vstr	d7, [sp, #16]
 8102bd0:	ea4f 1427 	mov.w	r4, r7, asr #4
 8102bd4:	d516      	bpl.n	8102c04 <_dtoa_r+0x34c>
 8102bd6:	4ba8      	ldr	r3, [pc, #672]	@ (8102e78 <_dtoa_r+0x5c0>)
 8102bd8:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8102bdc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8102be0:	f7fd febc 	bl	810095c <__aeabi_ddiv>
 8102be4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102be8:	f004 040f 	and.w	r4, r4, #15
 8102bec:	2603      	movs	r6, #3
 8102bee:	4da2      	ldr	r5, [pc, #648]	@ (8102e78 <_dtoa_r+0x5c0>)
 8102bf0:	b954      	cbnz	r4, 8102c08 <_dtoa_r+0x350>
 8102bf2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8102bf6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102bfa:	f7fd feaf 	bl	810095c <__aeabi_ddiv>
 8102bfe:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102c02:	e028      	b.n	8102c56 <_dtoa_r+0x39e>
 8102c04:	2602      	movs	r6, #2
 8102c06:	e7f2      	b.n	8102bee <_dtoa_r+0x336>
 8102c08:	07e1      	lsls	r1, r4, #31
 8102c0a:	d508      	bpl.n	8102c1e <_dtoa_r+0x366>
 8102c0c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8102c10:	e9d5 2300 	ldrd	r2, r3, [r5]
 8102c14:	f7fd fd78 	bl	8100708 <__aeabi_dmul>
 8102c18:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8102c1c:	3601      	adds	r6, #1
 8102c1e:	1064      	asrs	r4, r4, #1
 8102c20:	3508      	adds	r5, #8
 8102c22:	e7e5      	b.n	8102bf0 <_dtoa_r+0x338>
 8102c24:	f000 80d2 	beq.w	8102dcc <_dtoa_r+0x514>
 8102c28:	427c      	negs	r4, r7
 8102c2a:	4b92      	ldr	r3, [pc, #584]	@ (8102e74 <_dtoa_r+0x5bc>)
 8102c2c:	4d92      	ldr	r5, [pc, #584]	@ (8102e78 <_dtoa_r+0x5c0>)
 8102c2e:	f004 020f 	and.w	r2, r4, #15
 8102c32:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8102c36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8102c3a:	e9dd 010c 	ldrd	r0, r1, [sp, #48]	@ 0x30
 8102c3e:	f7fd fd63 	bl	8100708 <__aeabi_dmul>
 8102c42:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102c46:	1124      	asrs	r4, r4, #4
 8102c48:	2300      	movs	r3, #0
 8102c4a:	2602      	movs	r6, #2
 8102c4c:	2c00      	cmp	r4, #0
 8102c4e:	f040 80b2 	bne.w	8102db6 <_dtoa_r+0x4fe>
 8102c52:	2b00      	cmp	r3, #0
 8102c54:	d1d3      	bne.n	8102bfe <_dtoa_r+0x346>
 8102c56:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8102c58:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8102c5c:	2b00      	cmp	r3, #0
 8102c5e:	f000 80b7 	beq.w	8102dd0 <_dtoa_r+0x518>
 8102c62:	4b86      	ldr	r3, [pc, #536]	@ (8102e7c <_dtoa_r+0x5c4>)
 8102c64:	2200      	movs	r2, #0
 8102c66:	4620      	mov	r0, r4
 8102c68:	4629      	mov	r1, r5
 8102c6a:	f7fd ffbf 	bl	8100bec <__aeabi_dcmplt>
 8102c6e:	2800      	cmp	r0, #0
 8102c70:	f000 80ae 	beq.w	8102dd0 <_dtoa_r+0x518>
 8102c74:	9b07      	ldr	r3, [sp, #28]
 8102c76:	2b00      	cmp	r3, #0
 8102c78:	f000 80aa 	beq.w	8102dd0 <_dtoa_r+0x518>
 8102c7c:	9b00      	ldr	r3, [sp, #0]
 8102c7e:	2b00      	cmp	r3, #0
 8102c80:	dd37      	ble.n	8102cf2 <_dtoa_r+0x43a>
 8102c82:	1e7b      	subs	r3, r7, #1
 8102c84:	9304      	str	r3, [sp, #16]
 8102c86:	4620      	mov	r0, r4
 8102c88:	4b7d      	ldr	r3, [pc, #500]	@ (8102e80 <_dtoa_r+0x5c8>)
 8102c8a:	2200      	movs	r2, #0
 8102c8c:	4629      	mov	r1, r5
 8102c8e:	f7fd fd3b 	bl	8100708 <__aeabi_dmul>
 8102c92:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102c96:	9c00      	ldr	r4, [sp, #0]
 8102c98:	3601      	adds	r6, #1
 8102c9a:	4630      	mov	r0, r6
 8102c9c:	f7fd fcca 	bl	8100634 <__aeabi_i2d>
 8102ca0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8102ca4:	f7fd fd30 	bl	8100708 <__aeabi_dmul>
 8102ca8:	4b76      	ldr	r3, [pc, #472]	@ (8102e84 <_dtoa_r+0x5cc>)
 8102caa:	2200      	movs	r2, #0
 8102cac:	f7fd fb76 	bl	810039c <__adddf3>
 8102cb0:	4605      	mov	r5, r0
 8102cb2:	f1a1 7650 	sub.w	r6, r1, #54525952	@ 0x3400000
 8102cb6:	2c00      	cmp	r4, #0
 8102cb8:	f040 808d 	bne.w	8102dd6 <_dtoa_r+0x51e>
 8102cbc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102cc0:	4b71      	ldr	r3, [pc, #452]	@ (8102e88 <_dtoa_r+0x5d0>)
 8102cc2:	2200      	movs	r2, #0
 8102cc4:	f7fd fb68 	bl	8100398 <__aeabi_dsub>
 8102cc8:	4602      	mov	r2, r0
 8102cca:	460b      	mov	r3, r1
 8102ccc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8102cd0:	462a      	mov	r2, r5
 8102cd2:	4633      	mov	r3, r6
 8102cd4:	f7fd ffa8 	bl	8100c28 <__aeabi_dcmpgt>
 8102cd8:	2800      	cmp	r0, #0
 8102cda:	f040 828b 	bne.w	81031f4 <_dtoa_r+0x93c>
 8102cde:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102ce2:	462a      	mov	r2, r5
 8102ce4:	f106 4300 	add.w	r3, r6, #2147483648	@ 0x80000000
 8102ce8:	f7fd ff80 	bl	8100bec <__aeabi_dcmplt>
 8102cec:	2800      	cmp	r0, #0
 8102cee:	f040 8128 	bne.w	8102f42 <_dtoa_r+0x68a>
 8102cf2:	e9dd 340c 	ldrd	r3, r4, [sp, #48]	@ 0x30
 8102cf6:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8102cfa:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8102cfc:	2b00      	cmp	r3, #0
 8102cfe:	f2c0 815a 	blt.w	8102fb6 <_dtoa_r+0x6fe>
 8102d02:	2f0e      	cmp	r7, #14
 8102d04:	f300 8157 	bgt.w	8102fb6 <_dtoa_r+0x6fe>
 8102d08:	4b5a      	ldr	r3, [pc, #360]	@ (8102e74 <_dtoa_r+0x5bc>)
 8102d0a:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 8102d0e:	ed93 7b00 	vldr	d7, [r3]
 8102d12:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102d14:	2b00      	cmp	r3, #0
 8102d16:	ed8d 7b00 	vstr	d7, [sp]
 8102d1a:	da03      	bge.n	8102d24 <_dtoa_r+0x46c>
 8102d1c:	9b07      	ldr	r3, [sp, #28]
 8102d1e:	2b00      	cmp	r3, #0
 8102d20:	f340 8101 	ble.w	8102f26 <_dtoa_r+0x66e>
 8102d24:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8102d28:	4656      	mov	r6, sl
 8102d2a:	e9dd 2300 	ldrd	r2, r3, [sp]
 8102d2e:	4620      	mov	r0, r4
 8102d30:	4629      	mov	r1, r5
 8102d32:	f7fd fe13 	bl	810095c <__aeabi_ddiv>
 8102d36:	f7fd ff97 	bl	8100c68 <__aeabi_d2iz>
 8102d3a:	4680      	mov	r8, r0
 8102d3c:	f7fd fc7a 	bl	8100634 <__aeabi_i2d>
 8102d40:	e9dd 2300 	ldrd	r2, r3, [sp]
 8102d44:	f7fd fce0 	bl	8100708 <__aeabi_dmul>
 8102d48:	4602      	mov	r2, r0
 8102d4a:	460b      	mov	r3, r1
 8102d4c:	4620      	mov	r0, r4
 8102d4e:	4629      	mov	r1, r5
 8102d50:	f108 0430 	add.w	r4, r8, #48	@ 0x30
 8102d54:	f7fd fb20 	bl	8100398 <__aeabi_dsub>
 8102d58:	f806 4b01 	strb.w	r4, [r6], #1
 8102d5c:	9d07      	ldr	r5, [sp, #28]
 8102d5e:	eba6 040a 	sub.w	r4, r6, sl
 8102d62:	42a5      	cmp	r5, r4
 8102d64:	4602      	mov	r2, r0
 8102d66:	460b      	mov	r3, r1
 8102d68:	f040 8117 	bne.w	8102f9a <_dtoa_r+0x6e2>
 8102d6c:	f7fd fb16 	bl	810039c <__adddf3>
 8102d70:	e9dd 2300 	ldrd	r2, r3, [sp]
 8102d74:	4604      	mov	r4, r0
 8102d76:	460d      	mov	r5, r1
 8102d78:	f7fd ff56 	bl	8100c28 <__aeabi_dcmpgt>
 8102d7c:	2800      	cmp	r0, #0
 8102d7e:	f040 80f9 	bne.w	8102f74 <_dtoa_r+0x6bc>
 8102d82:	e9dd 2300 	ldrd	r2, r3, [sp]
 8102d86:	4620      	mov	r0, r4
 8102d88:	4629      	mov	r1, r5
 8102d8a:	f7fd ff25 	bl	8100bd8 <__aeabi_dcmpeq>
 8102d8e:	b118      	cbz	r0, 8102d98 <_dtoa_r+0x4e0>
 8102d90:	f018 0f01 	tst.w	r8, #1
 8102d94:	f040 80ee 	bne.w	8102f74 <_dtoa_r+0x6bc>
 8102d98:	4649      	mov	r1, r9
 8102d9a:	4658      	mov	r0, fp
 8102d9c:	f000 fc90 	bl	81036c0 <_Bfree>
 8102da0:	2300      	movs	r3, #0
 8102da2:	7033      	strb	r3, [r6, #0]
 8102da4:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8102da6:	3701      	adds	r7, #1
 8102da8:	601f      	str	r7, [r3, #0]
 8102daa:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8102dac:	2b00      	cmp	r3, #0
 8102dae:	f000 831d 	beq.w	81033ec <_dtoa_r+0xb34>
 8102db2:	601e      	str	r6, [r3, #0]
 8102db4:	e31a      	b.n	81033ec <_dtoa_r+0xb34>
 8102db6:	07e2      	lsls	r2, r4, #31
 8102db8:	d505      	bpl.n	8102dc6 <_dtoa_r+0x50e>
 8102dba:	e9d5 2300 	ldrd	r2, r3, [r5]
 8102dbe:	f7fd fca3 	bl	8100708 <__aeabi_dmul>
 8102dc2:	3601      	adds	r6, #1
 8102dc4:	2301      	movs	r3, #1
 8102dc6:	1064      	asrs	r4, r4, #1
 8102dc8:	3508      	adds	r5, #8
 8102dca:	e73f      	b.n	8102c4c <_dtoa_r+0x394>
 8102dcc:	2602      	movs	r6, #2
 8102dce:	e742      	b.n	8102c56 <_dtoa_r+0x39e>
 8102dd0:	9c07      	ldr	r4, [sp, #28]
 8102dd2:	9704      	str	r7, [sp, #16]
 8102dd4:	e761      	b.n	8102c9a <_dtoa_r+0x3e2>
 8102dd6:	4b27      	ldr	r3, [pc, #156]	@ (8102e74 <_dtoa_r+0x5bc>)
 8102dd8:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8102dda:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8102dde:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 8102de2:	4454      	add	r4, sl
 8102de4:	2900      	cmp	r1, #0
 8102de6:	d053      	beq.n	8102e90 <_dtoa_r+0x5d8>
 8102de8:	4928      	ldr	r1, [pc, #160]	@ (8102e8c <_dtoa_r+0x5d4>)
 8102dea:	2000      	movs	r0, #0
 8102dec:	f7fd fdb6 	bl	810095c <__aeabi_ddiv>
 8102df0:	4633      	mov	r3, r6
 8102df2:	462a      	mov	r2, r5
 8102df4:	f7fd fad0 	bl	8100398 <__aeabi_dsub>
 8102df8:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8102dfc:	4656      	mov	r6, sl
 8102dfe:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102e02:	f7fd ff31 	bl	8100c68 <__aeabi_d2iz>
 8102e06:	4605      	mov	r5, r0
 8102e08:	f7fd fc14 	bl	8100634 <__aeabi_i2d>
 8102e0c:	4602      	mov	r2, r0
 8102e0e:	460b      	mov	r3, r1
 8102e10:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102e14:	f7fd fac0 	bl	8100398 <__aeabi_dsub>
 8102e18:	3530      	adds	r5, #48	@ 0x30
 8102e1a:	4602      	mov	r2, r0
 8102e1c:	460b      	mov	r3, r1
 8102e1e:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8102e22:	f806 5b01 	strb.w	r5, [r6], #1
 8102e26:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8102e2a:	f7fd fedf 	bl	8100bec <__aeabi_dcmplt>
 8102e2e:	2800      	cmp	r0, #0
 8102e30:	d171      	bne.n	8102f16 <_dtoa_r+0x65e>
 8102e32:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8102e36:	4911      	ldr	r1, [pc, #68]	@ (8102e7c <_dtoa_r+0x5c4>)
 8102e38:	2000      	movs	r0, #0
 8102e3a:	f7fd faad 	bl	8100398 <__aeabi_dsub>
 8102e3e:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8102e42:	f7fd fed3 	bl	8100bec <__aeabi_dcmplt>
 8102e46:	2800      	cmp	r0, #0
 8102e48:	f040 8095 	bne.w	8102f76 <_dtoa_r+0x6be>
 8102e4c:	42a6      	cmp	r6, r4
 8102e4e:	f43f af50 	beq.w	8102cf2 <_dtoa_r+0x43a>
 8102e52:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8102e56:	4b0a      	ldr	r3, [pc, #40]	@ (8102e80 <_dtoa_r+0x5c8>)
 8102e58:	2200      	movs	r2, #0
 8102e5a:	f7fd fc55 	bl	8100708 <__aeabi_dmul>
 8102e5e:	4b08      	ldr	r3, [pc, #32]	@ (8102e80 <_dtoa_r+0x5c8>)
 8102e60:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8102e64:	2200      	movs	r2, #0
 8102e66:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102e6a:	f7fd fc4d 	bl	8100708 <__aeabi_dmul>
 8102e6e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102e72:	e7c4      	b.n	8102dfe <_dtoa_r+0x546>
 8102e74:	08104660 	.word	0x08104660
 8102e78:	08104638 	.word	0x08104638
 8102e7c:	3ff00000 	.word	0x3ff00000
 8102e80:	40240000 	.word	0x40240000
 8102e84:	401c0000 	.word	0x401c0000
 8102e88:	40140000 	.word	0x40140000
 8102e8c:	3fe00000 	.word	0x3fe00000
 8102e90:	4631      	mov	r1, r6
 8102e92:	4628      	mov	r0, r5
 8102e94:	f7fd fc38 	bl	8100708 <__aeabi_dmul>
 8102e98:	e9cd 0110 	strd	r0, r1, [sp, #64]	@ 0x40
 8102e9c:	9415      	str	r4, [sp, #84]	@ 0x54
 8102e9e:	4656      	mov	r6, sl
 8102ea0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102ea4:	f7fd fee0 	bl	8100c68 <__aeabi_d2iz>
 8102ea8:	4605      	mov	r5, r0
 8102eaa:	f7fd fbc3 	bl	8100634 <__aeabi_i2d>
 8102eae:	4602      	mov	r2, r0
 8102eb0:	460b      	mov	r3, r1
 8102eb2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102eb6:	f7fd fa6f 	bl	8100398 <__aeabi_dsub>
 8102eba:	3530      	adds	r5, #48	@ 0x30
 8102ebc:	f806 5b01 	strb.w	r5, [r6], #1
 8102ec0:	4602      	mov	r2, r0
 8102ec2:	460b      	mov	r3, r1
 8102ec4:	42a6      	cmp	r6, r4
 8102ec6:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8102eca:	f04f 0200 	mov.w	r2, #0
 8102ece:	d124      	bne.n	8102f1a <_dtoa_r+0x662>
 8102ed0:	4bac      	ldr	r3, [pc, #688]	@ (8103184 <_dtoa_r+0x8cc>)
 8102ed2:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	@ 0x40
 8102ed6:	f7fd fa61 	bl	810039c <__adddf3>
 8102eda:	4602      	mov	r2, r0
 8102edc:	460b      	mov	r3, r1
 8102ede:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102ee2:	f7fd fea1 	bl	8100c28 <__aeabi_dcmpgt>
 8102ee6:	2800      	cmp	r0, #0
 8102ee8:	d145      	bne.n	8102f76 <_dtoa_r+0x6be>
 8102eea:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	@ 0x40
 8102eee:	49a5      	ldr	r1, [pc, #660]	@ (8103184 <_dtoa_r+0x8cc>)
 8102ef0:	2000      	movs	r0, #0
 8102ef2:	f7fd fa51 	bl	8100398 <__aeabi_dsub>
 8102ef6:	4602      	mov	r2, r0
 8102ef8:	460b      	mov	r3, r1
 8102efa:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8102efe:	f7fd fe75 	bl	8100bec <__aeabi_dcmplt>
 8102f02:	2800      	cmp	r0, #0
 8102f04:	f43f aef5 	beq.w	8102cf2 <_dtoa_r+0x43a>
 8102f08:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 8102f0a:	1e73      	subs	r3, r6, #1
 8102f0c:	9315      	str	r3, [sp, #84]	@ 0x54
 8102f0e:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8102f12:	2b30      	cmp	r3, #48	@ 0x30
 8102f14:	d0f8      	beq.n	8102f08 <_dtoa_r+0x650>
 8102f16:	9f04      	ldr	r7, [sp, #16]
 8102f18:	e73e      	b.n	8102d98 <_dtoa_r+0x4e0>
 8102f1a:	4b9b      	ldr	r3, [pc, #620]	@ (8103188 <_dtoa_r+0x8d0>)
 8102f1c:	f7fd fbf4 	bl	8100708 <__aeabi_dmul>
 8102f20:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8102f24:	e7bc      	b.n	8102ea0 <_dtoa_r+0x5e8>
 8102f26:	d10c      	bne.n	8102f42 <_dtoa_r+0x68a>
 8102f28:	4b98      	ldr	r3, [pc, #608]	@ (810318c <_dtoa_r+0x8d4>)
 8102f2a:	2200      	movs	r2, #0
 8102f2c:	e9dd 0100 	ldrd	r0, r1, [sp]
 8102f30:	f7fd fbea 	bl	8100708 <__aeabi_dmul>
 8102f34:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8102f38:	f7fd fe6c 	bl	8100c14 <__aeabi_dcmpge>
 8102f3c:	2800      	cmp	r0, #0
 8102f3e:	f000 8157 	beq.w	81031f0 <_dtoa_r+0x938>
 8102f42:	2400      	movs	r4, #0
 8102f44:	4625      	mov	r5, r4
 8102f46:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8102f48:	43db      	mvns	r3, r3
 8102f4a:	9304      	str	r3, [sp, #16]
 8102f4c:	4656      	mov	r6, sl
 8102f4e:	2700      	movs	r7, #0
 8102f50:	4621      	mov	r1, r4
 8102f52:	4658      	mov	r0, fp
 8102f54:	f000 fbb4 	bl	81036c0 <_Bfree>
 8102f58:	2d00      	cmp	r5, #0
 8102f5a:	d0dc      	beq.n	8102f16 <_dtoa_r+0x65e>
 8102f5c:	b12f      	cbz	r7, 8102f6a <_dtoa_r+0x6b2>
 8102f5e:	42af      	cmp	r7, r5
 8102f60:	d003      	beq.n	8102f6a <_dtoa_r+0x6b2>
 8102f62:	4639      	mov	r1, r7
 8102f64:	4658      	mov	r0, fp
 8102f66:	f000 fbab 	bl	81036c0 <_Bfree>
 8102f6a:	4629      	mov	r1, r5
 8102f6c:	4658      	mov	r0, fp
 8102f6e:	f000 fba7 	bl	81036c0 <_Bfree>
 8102f72:	e7d0      	b.n	8102f16 <_dtoa_r+0x65e>
 8102f74:	9704      	str	r7, [sp, #16]
 8102f76:	4633      	mov	r3, r6
 8102f78:	461e      	mov	r6, r3
 8102f7a:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8102f7e:	2a39      	cmp	r2, #57	@ 0x39
 8102f80:	d107      	bne.n	8102f92 <_dtoa_r+0x6da>
 8102f82:	459a      	cmp	sl, r3
 8102f84:	d1f8      	bne.n	8102f78 <_dtoa_r+0x6c0>
 8102f86:	9a04      	ldr	r2, [sp, #16]
 8102f88:	3201      	adds	r2, #1
 8102f8a:	9204      	str	r2, [sp, #16]
 8102f8c:	2230      	movs	r2, #48	@ 0x30
 8102f8e:	f88a 2000 	strb.w	r2, [sl]
 8102f92:	781a      	ldrb	r2, [r3, #0]
 8102f94:	3201      	adds	r2, #1
 8102f96:	701a      	strb	r2, [r3, #0]
 8102f98:	e7bd      	b.n	8102f16 <_dtoa_r+0x65e>
 8102f9a:	4b7b      	ldr	r3, [pc, #492]	@ (8103188 <_dtoa_r+0x8d0>)
 8102f9c:	2200      	movs	r2, #0
 8102f9e:	f7fd fbb3 	bl	8100708 <__aeabi_dmul>
 8102fa2:	2200      	movs	r2, #0
 8102fa4:	2300      	movs	r3, #0
 8102fa6:	4604      	mov	r4, r0
 8102fa8:	460d      	mov	r5, r1
 8102faa:	f7fd fe15 	bl	8100bd8 <__aeabi_dcmpeq>
 8102fae:	2800      	cmp	r0, #0
 8102fb0:	f43f aebb 	beq.w	8102d2a <_dtoa_r+0x472>
 8102fb4:	e6f0      	b.n	8102d98 <_dtoa_r+0x4e0>
 8102fb6:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8102fb8:	2a00      	cmp	r2, #0
 8102fba:	f000 80db 	beq.w	8103174 <_dtoa_r+0x8bc>
 8102fbe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8102fc0:	2a01      	cmp	r2, #1
 8102fc2:	f300 80bf 	bgt.w	8103144 <_dtoa_r+0x88c>
 8102fc6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8102fc8:	2a00      	cmp	r2, #0
 8102fca:	f000 80b7 	beq.w	810313c <_dtoa_r+0x884>
 8102fce:	f203 4333 	addw	r3, r3, #1075	@ 0x433
 8102fd2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8102fd4:	4646      	mov	r6, r8
 8102fd6:	9a08      	ldr	r2, [sp, #32]
 8102fd8:	2101      	movs	r1, #1
 8102fda:	441a      	add	r2, r3
 8102fdc:	4658      	mov	r0, fp
 8102fde:	4498      	add	r8, r3
 8102fe0:	9208      	str	r2, [sp, #32]
 8102fe2:	f000 fc21 	bl	8103828 <__i2b>
 8102fe6:	4605      	mov	r5, r0
 8102fe8:	b15e      	cbz	r6, 8103002 <_dtoa_r+0x74a>
 8102fea:	9b08      	ldr	r3, [sp, #32]
 8102fec:	2b00      	cmp	r3, #0
 8102fee:	dd08      	ble.n	8103002 <_dtoa_r+0x74a>
 8102ff0:	42b3      	cmp	r3, r6
 8102ff2:	9a08      	ldr	r2, [sp, #32]
 8102ff4:	bfa8      	it	ge
 8102ff6:	4633      	movge	r3, r6
 8102ff8:	eba8 0803 	sub.w	r8, r8, r3
 8102ffc:	1af6      	subs	r6, r6, r3
 8102ffe:	1ad3      	subs	r3, r2, r3
 8103000:	9308      	str	r3, [sp, #32]
 8103002:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8103004:	b1f3      	cbz	r3, 8103044 <_dtoa_r+0x78c>
 8103006:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8103008:	2b00      	cmp	r3, #0
 810300a:	f000 80b7 	beq.w	810317c <_dtoa_r+0x8c4>
 810300e:	b18c      	cbz	r4, 8103034 <_dtoa_r+0x77c>
 8103010:	4629      	mov	r1, r5
 8103012:	4622      	mov	r2, r4
 8103014:	4658      	mov	r0, fp
 8103016:	f000 fcc7 	bl	81039a8 <__pow5mult>
 810301a:	464a      	mov	r2, r9
 810301c:	4601      	mov	r1, r0
 810301e:	4605      	mov	r5, r0
 8103020:	4658      	mov	r0, fp
 8103022:	f000 fc17 	bl	8103854 <__multiply>
 8103026:	4649      	mov	r1, r9
 8103028:	9004      	str	r0, [sp, #16]
 810302a:	4658      	mov	r0, fp
 810302c:	f000 fb48 	bl	81036c0 <_Bfree>
 8103030:	9b04      	ldr	r3, [sp, #16]
 8103032:	4699      	mov	r9, r3
 8103034:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8103036:	1b1a      	subs	r2, r3, r4
 8103038:	d004      	beq.n	8103044 <_dtoa_r+0x78c>
 810303a:	4649      	mov	r1, r9
 810303c:	4658      	mov	r0, fp
 810303e:	f000 fcb3 	bl	81039a8 <__pow5mult>
 8103042:	4681      	mov	r9, r0
 8103044:	2101      	movs	r1, #1
 8103046:	4658      	mov	r0, fp
 8103048:	f000 fbee 	bl	8103828 <__i2b>
 810304c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 810304e:	4604      	mov	r4, r0
 8103050:	2b00      	cmp	r3, #0
 8103052:	f000 81cf 	beq.w	81033f4 <_dtoa_r+0xb3c>
 8103056:	461a      	mov	r2, r3
 8103058:	4601      	mov	r1, r0
 810305a:	4658      	mov	r0, fp
 810305c:	f000 fca4 	bl	81039a8 <__pow5mult>
 8103060:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8103062:	2b01      	cmp	r3, #1
 8103064:	4604      	mov	r4, r0
 8103066:	f300 8095 	bgt.w	8103194 <_dtoa_r+0x8dc>
 810306a:	9b02      	ldr	r3, [sp, #8]
 810306c:	2b00      	cmp	r3, #0
 810306e:	f040 8087 	bne.w	8103180 <_dtoa_r+0x8c8>
 8103072:	9b03      	ldr	r3, [sp, #12]
 8103074:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8103078:	2b00      	cmp	r3, #0
 810307a:	f040 8089 	bne.w	8103190 <_dtoa_r+0x8d8>
 810307e:	9b03      	ldr	r3, [sp, #12]
 8103080:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 8103084:	0d1b      	lsrs	r3, r3, #20
 8103086:	051b      	lsls	r3, r3, #20
 8103088:	b12b      	cbz	r3, 8103096 <_dtoa_r+0x7de>
 810308a:	9b08      	ldr	r3, [sp, #32]
 810308c:	3301      	adds	r3, #1
 810308e:	9308      	str	r3, [sp, #32]
 8103090:	f108 0801 	add.w	r8, r8, #1
 8103094:	2301      	movs	r3, #1
 8103096:	930a      	str	r3, [sp, #40]	@ 0x28
 8103098:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 810309a:	2b00      	cmp	r3, #0
 810309c:	f000 81b0 	beq.w	8103400 <_dtoa_r+0xb48>
 81030a0:	6923      	ldr	r3, [r4, #16]
 81030a2:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 81030a6:	6918      	ldr	r0, [r3, #16]
 81030a8:	f000 fb72 	bl	8103790 <__hi0bits>
 81030ac:	f1c0 0020 	rsb	r0, r0, #32
 81030b0:	9b08      	ldr	r3, [sp, #32]
 81030b2:	4418      	add	r0, r3
 81030b4:	f010 001f 	ands.w	r0, r0, #31
 81030b8:	d077      	beq.n	81031aa <_dtoa_r+0x8f2>
 81030ba:	f1c0 0320 	rsb	r3, r0, #32
 81030be:	2b04      	cmp	r3, #4
 81030c0:	dd6b      	ble.n	810319a <_dtoa_r+0x8e2>
 81030c2:	9b08      	ldr	r3, [sp, #32]
 81030c4:	f1c0 001c 	rsb	r0, r0, #28
 81030c8:	4403      	add	r3, r0
 81030ca:	4480      	add	r8, r0
 81030cc:	4406      	add	r6, r0
 81030ce:	9308      	str	r3, [sp, #32]
 81030d0:	f1b8 0f00 	cmp.w	r8, #0
 81030d4:	dd05      	ble.n	81030e2 <_dtoa_r+0x82a>
 81030d6:	4649      	mov	r1, r9
 81030d8:	4642      	mov	r2, r8
 81030da:	4658      	mov	r0, fp
 81030dc:	f000 fcbe 	bl	8103a5c <__lshift>
 81030e0:	4681      	mov	r9, r0
 81030e2:	9b08      	ldr	r3, [sp, #32]
 81030e4:	2b00      	cmp	r3, #0
 81030e6:	dd05      	ble.n	81030f4 <_dtoa_r+0x83c>
 81030e8:	4621      	mov	r1, r4
 81030ea:	461a      	mov	r2, r3
 81030ec:	4658      	mov	r0, fp
 81030ee:	f000 fcb5 	bl	8103a5c <__lshift>
 81030f2:	4604      	mov	r4, r0
 81030f4:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 81030f6:	2b00      	cmp	r3, #0
 81030f8:	d059      	beq.n	81031ae <_dtoa_r+0x8f6>
 81030fa:	4621      	mov	r1, r4
 81030fc:	4648      	mov	r0, r9
 81030fe:	f000 fd19 	bl	8103b34 <__mcmp>
 8103102:	2800      	cmp	r0, #0
 8103104:	da53      	bge.n	81031ae <_dtoa_r+0x8f6>
 8103106:	1e7b      	subs	r3, r7, #1
 8103108:	9304      	str	r3, [sp, #16]
 810310a:	4649      	mov	r1, r9
 810310c:	2300      	movs	r3, #0
 810310e:	220a      	movs	r2, #10
 8103110:	4658      	mov	r0, fp
 8103112:	f000 faf7 	bl	8103704 <__multadd>
 8103116:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8103118:	4681      	mov	r9, r0
 810311a:	2b00      	cmp	r3, #0
 810311c:	f000 8172 	beq.w	8103404 <_dtoa_r+0xb4c>
 8103120:	2300      	movs	r3, #0
 8103122:	4629      	mov	r1, r5
 8103124:	220a      	movs	r2, #10
 8103126:	4658      	mov	r0, fp
 8103128:	f000 faec 	bl	8103704 <__multadd>
 810312c:	9b00      	ldr	r3, [sp, #0]
 810312e:	2b00      	cmp	r3, #0
 8103130:	4605      	mov	r5, r0
 8103132:	dc67      	bgt.n	8103204 <_dtoa_r+0x94c>
 8103134:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8103136:	2b02      	cmp	r3, #2
 8103138:	dc41      	bgt.n	81031be <_dtoa_r+0x906>
 810313a:	e063      	b.n	8103204 <_dtoa_r+0x94c>
 810313c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 810313e:	f1c3 0336 	rsb	r3, r3, #54	@ 0x36
 8103142:	e746      	b.n	8102fd2 <_dtoa_r+0x71a>
 8103144:	9b07      	ldr	r3, [sp, #28]
 8103146:	1e5c      	subs	r4, r3, #1
 8103148:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 810314a:	42a3      	cmp	r3, r4
 810314c:	bfbf      	itttt	lt
 810314e:	9b0a      	ldrlt	r3, [sp, #40]	@ 0x28
 8103150:	9a0f      	ldrlt	r2, [sp, #60]	@ 0x3c
 8103152:	940a      	strlt	r4, [sp, #40]	@ 0x28
 8103154:	1ae3      	sublt	r3, r4, r3
 8103156:	bfb4      	ite	lt
 8103158:	18d2      	addlt	r2, r2, r3
 810315a:	1b1c      	subge	r4, r3, r4
 810315c:	9b07      	ldr	r3, [sp, #28]
 810315e:	bfbc      	itt	lt
 8103160:	920f      	strlt	r2, [sp, #60]	@ 0x3c
 8103162:	2400      	movlt	r4, #0
 8103164:	2b00      	cmp	r3, #0
 8103166:	bfb5      	itete	lt
 8103168:	eba8 0603 	sublt.w	r6, r8, r3
 810316c:	9b07      	ldrge	r3, [sp, #28]
 810316e:	2300      	movlt	r3, #0
 8103170:	4646      	movge	r6, r8
 8103172:	e730      	b.n	8102fd6 <_dtoa_r+0x71e>
 8103174:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8103176:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8103178:	4646      	mov	r6, r8
 810317a:	e735      	b.n	8102fe8 <_dtoa_r+0x730>
 810317c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 810317e:	e75c      	b.n	810303a <_dtoa_r+0x782>
 8103180:	2300      	movs	r3, #0
 8103182:	e788      	b.n	8103096 <_dtoa_r+0x7de>
 8103184:	3fe00000 	.word	0x3fe00000
 8103188:	40240000 	.word	0x40240000
 810318c:	40140000 	.word	0x40140000
 8103190:	9b02      	ldr	r3, [sp, #8]
 8103192:	e780      	b.n	8103096 <_dtoa_r+0x7de>
 8103194:	2300      	movs	r3, #0
 8103196:	930a      	str	r3, [sp, #40]	@ 0x28
 8103198:	e782      	b.n	81030a0 <_dtoa_r+0x7e8>
 810319a:	d099      	beq.n	81030d0 <_dtoa_r+0x818>
 810319c:	9a08      	ldr	r2, [sp, #32]
 810319e:	331c      	adds	r3, #28
 81031a0:	441a      	add	r2, r3
 81031a2:	4498      	add	r8, r3
 81031a4:	441e      	add	r6, r3
 81031a6:	9208      	str	r2, [sp, #32]
 81031a8:	e792      	b.n	81030d0 <_dtoa_r+0x818>
 81031aa:	4603      	mov	r3, r0
 81031ac:	e7f6      	b.n	810319c <_dtoa_r+0x8e4>
 81031ae:	9b07      	ldr	r3, [sp, #28]
 81031b0:	9704      	str	r7, [sp, #16]
 81031b2:	2b00      	cmp	r3, #0
 81031b4:	dc20      	bgt.n	81031f8 <_dtoa_r+0x940>
 81031b6:	9300      	str	r3, [sp, #0]
 81031b8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 81031ba:	2b02      	cmp	r3, #2
 81031bc:	dd1e      	ble.n	81031fc <_dtoa_r+0x944>
 81031be:	9b00      	ldr	r3, [sp, #0]
 81031c0:	2b00      	cmp	r3, #0
 81031c2:	f47f aec0 	bne.w	8102f46 <_dtoa_r+0x68e>
 81031c6:	4621      	mov	r1, r4
 81031c8:	2205      	movs	r2, #5
 81031ca:	4658      	mov	r0, fp
 81031cc:	f000 fa9a 	bl	8103704 <__multadd>
 81031d0:	4601      	mov	r1, r0
 81031d2:	4604      	mov	r4, r0
 81031d4:	4648      	mov	r0, r9
 81031d6:	f000 fcad 	bl	8103b34 <__mcmp>
 81031da:	2800      	cmp	r0, #0
 81031dc:	f77f aeb3 	ble.w	8102f46 <_dtoa_r+0x68e>
 81031e0:	4656      	mov	r6, sl
 81031e2:	2331      	movs	r3, #49	@ 0x31
 81031e4:	f806 3b01 	strb.w	r3, [r6], #1
 81031e8:	9b04      	ldr	r3, [sp, #16]
 81031ea:	3301      	adds	r3, #1
 81031ec:	9304      	str	r3, [sp, #16]
 81031ee:	e6ae      	b.n	8102f4e <_dtoa_r+0x696>
 81031f0:	9c07      	ldr	r4, [sp, #28]
 81031f2:	9704      	str	r7, [sp, #16]
 81031f4:	4625      	mov	r5, r4
 81031f6:	e7f3      	b.n	81031e0 <_dtoa_r+0x928>
 81031f8:	9b07      	ldr	r3, [sp, #28]
 81031fa:	9300      	str	r3, [sp, #0]
 81031fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 81031fe:	2b00      	cmp	r3, #0
 8103200:	f000 8104 	beq.w	810340c <_dtoa_r+0xb54>
 8103204:	2e00      	cmp	r6, #0
 8103206:	dd05      	ble.n	8103214 <_dtoa_r+0x95c>
 8103208:	4629      	mov	r1, r5
 810320a:	4632      	mov	r2, r6
 810320c:	4658      	mov	r0, fp
 810320e:	f000 fc25 	bl	8103a5c <__lshift>
 8103212:	4605      	mov	r5, r0
 8103214:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8103216:	2b00      	cmp	r3, #0
 8103218:	d05a      	beq.n	81032d0 <_dtoa_r+0xa18>
 810321a:	6869      	ldr	r1, [r5, #4]
 810321c:	4658      	mov	r0, fp
 810321e:	f000 fa0f 	bl	8103640 <_Balloc>
 8103222:	4606      	mov	r6, r0
 8103224:	b928      	cbnz	r0, 8103232 <_dtoa_r+0x97a>
 8103226:	4b84      	ldr	r3, [pc, #528]	@ (8103438 <_dtoa_r+0xb80>)
 8103228:	4602      	mov	r2, r0
 810322a:	f240 21ef 	movw	r1, #751	@ 0x2ef
 810322e:	f7ff bb5a 	b.w	81028e6 <_dtoa_r+0x2e>
 8103232:	692a      	ldr	r2, [r5, #16]
 8103234:	3202      	adds	r2, #2
 8103236:	0092      	lsls	r2, r2, #2
 8103238:	f105 010c 	add.w	r1, r5, #12
 810323c:	300c      	adds	r0, #12
 810323e:	f000 fe3d 	bl	8103ebc <memcpy>
 8103242:	2201      	movs	r2, #1
 8103244:	4631      	mov	r1, r6
 8103246:	4658      	mov	r0, fp
 8103248:	f000 fc08 	bl	8103a5c <__lshift>
 810324c:	f10a 0301 	add.w	r3, sl, #1
 8103250:	9307      	str	r3, [sp, #28]
 8103252:	9b00      	ldr	r3, [sp, #0]
 8103254:	4453      	add	r3, sl
 8103256:	930b      	str	r3, [sp, #44]	@ 0x2c
 8103258:	9b02      	ldr	r3, [sp, #8]
 810325a:	f003 0301 	and.w	r3, r3, #1
 810325e:	462f      	mov	r7, r5
 8103260:	930a      	str	r3, [sp, #40]	@ 0x28
 8103262:	4605      	mov	r5, r0
 8103264:	9b07      	ldr	r3, [sp, #28]
 8103266:	4621      	mov	r1, r4
 8103268:	3b01      	subs	r3, #1
 810326a:	4648      	mov	r0, r9
 810326c:	9300      	str	r3, [sp, #0]
 810326e:	f7ff fa98 	bl	81027a2 <quorem>
 8103272:	4639      	mov	r1, r7
 8103274:	9002      	str	r0, [sp, #8]
 8103276:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 810327a:	4648      	mov	r0, r9
 810327c:	f000 fc5a 	bl	8103b34 <__mcmp>
 8103280:	462a      	mov	r2, r5
 8103282:	9008      	str	r0, [sp, #32]
 8103284:	4621      	mov	r1, r4
 8103286:	4658      	mov	r0, fp
 8103288:	f000 fc70 	bl	8103b6c <__mdiff>
 810328c:	68c2      	ldr	r2, [r0, #12]
 810328e:	4606      	mov	r6, r0
 8103290:	bb02      	cbnz	r2, 81032d4 <_dtoa_r+0xa1c>
 8103292:	4601      	mov	r1, r0
 8103294:	4648      	mov	r0, r9
 8103296:	f000 fc4d 	bl	8103b34 <__mcmp>
 810329a:	4602      	mov	r2, r0
 810329c:	4631      	mov	r1, r6
 810329e:	4658      	mov	r0, fp
 81032a0:	920e      	str	r2, [sp, #56]	@ 0x38
 81032a2:	f000 fa0d 	bl	81036c0 <_Bfree>
 81032a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 81032a8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 81032aa:	9e07      	ldr	r6, [sp, #28]
 81032ac:	ea43 0102 	orr.w	r1, r3, r2
 81032b0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 81032b2:	4319      	orrs	r1, r3
 81032b4:	d110      	bne.n	81032d8 <_dtoa_r+0xa20>
 81032b6:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 81032ba:	d029      	beq.n	8103310 <_dtoa_r+0xa58>
 81032bc:	9b08      	ldr	r3, [sp, #32]
 81032be:	2b00      	cmp	r3, #0
 81032c0:	dd02      	ble.n	81032c8 <_dtoa_r+0xa10>
 81032c2:	9b02      	ldr	r3, [sp, #8]
 81032c4:	f103 0831 	add.w	r8, r3, #49	@ 0x31
 81032c8:	9b00      	ldr	r3, [sp, #0]
 81032ca:	f883 8000 	strb.w	r8, [r3]
 81032ce:	e63f      	b.n	8102f50 <_dtoa_r+0x698>
 81032d0:	4628      	mov	r0, r5
 81032d2:	e7bb      	b.n	810324c <_dtoa_r+0x994>
 81032d4:	2201      	movs	r2, #1
 81032d6:	e7e1      	b.n	810329c <_dtoa_r+0x9e4>
 81032d8:	9b08      	ldr	r3, [sp, #32]
 81032da:	2b00      	cmp	r3, #0
 81032dc:	db04      	blt.n	81032e8 <_dtoa_r+0xa30>
 81032de:	9909      	ldr	r1, [sp, #36]	@ 0x24
 81032e0:	430b      	orrs	r3, r1
 81032e2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 81032e4:	430b      	orrs	r3, r1
 81032e6:	d120      	bne.n	810332a <_dtoa_r+0xa72>
 81032e8:	2a00      	cmp	r2, #0
 81032ea:	dded      	ble.n	81032c8 <_dtoa_r+0xa10>
 81032ec:	4649      	mov	r1, r9
 81032ee:	2201      	movs	r2, #1
 81032f0:	4658      	mov	r0, fp
 81032f2:	f000 fbb3 	bl	8103a5c <__lshift>
 81032f6:	4621      	mov	r1, r4
 81032f8:	4681      	mov	r9, r0
 81032fa:	f000 fc1b 	bl	8103b34 <__mcmp>
 81032fe:	2800      	cmp	r0, #0
 8103300:	dc03      	bgt.n	810330a <_dtoa_r+0xa52>
 8103302:	d1e1      	bne.n	81032c8 <_dtoa_r+0xa10>
 8103304:	f018 0f01 	tst.w	r8, #1
 8103308:	d0de      	beq.n	81032c8 <_dtoa_r+0xa10>
 810330a:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 810330e:	d1d8      	bne.n	81032c2 <_dtoa_r+0xa0a>
 8103310:	9a00      	ldr	r2, [sp, #0]
 8103312:	2339      	movs	r3, #57	@ 0x39
 8103314:	7013      	strb	r3, [r2, #0]
 8103316:	4633      	mov	r3, r6
 8103318:	461e      	mov	r6, r3
 810331a:	3b01      	subs	r3, #1
 810331c:	f816 2c01 	ldrb.w	r2, [r6, #-1]
 8103320:	2a39      	cmp	r2, #57	@ 0x39
 8103322:	d052      	beq.n	81033ca <_dtoa_r+0xb12>
 8103324:	3201      	adds	r2, #1
 8103326:	701a      	strb	r2, [r3, #0]
 8103328:	e612      	b.n	8102f50 <_dtoa_r+0x698>
 810332a:	2a00      	cmp	r2, #0
 810332c:	dd07      	ble.n	810333e <_dtoa_r+0xa86>
 810332e:	f1b8 0f39 	cmp.w	r8, #57	@ 0x39
 8103332:	d0ed      	beq.n	8103310 <_dtoa_r+0xa58>
 8103334:	9a00      	ldr	r2, [sp, #0]
 8103336:	f108 0301 	add.w	r3, r8, #1
 810333a:	7013      	strb	r3, [r2, #0]
 810333c:	e608      	b.n	8102f50 <_dtoa_r+0x698>
 810333e:	9b07      	ldr	r3, [sp, #28]
 8103340:	9a07      	ldr	r2, [sp, #28]
 8103342:	f803 8c01 	strb.w	r8, [r3, #-1]
 8103346:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8103348:	4293      	cmp	r3, r2
 810334a:	d028      	beq.n	810339e <_dtoa_r+0xae6>
 810334c:	4649      	mov	r1, r9
 810334e:	2300      	movs	r3, #0
 8103350:	220a      	movs	r2, #10
 8103352:	4658      	mov	r0, fp
 8103354:	f000 f9d6 	bl	8103704 <__multadd>
 8103358:	42af      	cmp	r7, r5
 810335a:	4681      	mov	r9, r0
 810335c:	f04f 0300 	mov.w	r3, #0
 8103360:	f04f 020a 	mov.w	r2, #10
 8103364:	4639      	mov	r1, r7
 8103366:	4658      	mov	r0, fp
 8103368:	d107      	bne.n	810337a <_dtoa_r+0xac2>
 810336a:	f000 f9cb 	bl	8103704 <__multadd>
 810336e:	4607      	mov	r7, r0
 8103370:	4605      	mov	r5, r0
 8103372:	9b07      	ldr	r3, [sp, #28]
 8103374:	3301      	adds	r3, #1
 8103376:	9307      	str	r3, [sp, #28]
 8103378:	e774      	b.n	8103264 <_dtoa_r+0x9ac>
 810337a:	f000 f9c3 	bl	8103704 <__multadd>
 810337e:	4629      	mov	r1, r5
 8103380:	4607      	mov	r7, r0
 8103382:	2300      	movs	r3, #0
 8103384:	220a      	movs	r2, #10
 8103386:	4658      	mov	r0, fp
 8103388:	f000 f9bc 	bl	8103704 <__multadd>
 810338c:	4605      	mov	r5, r0
 810338e:	e7f0      	b.n	8103372 <_dtoa_r+0xaba>
 8103390:	9b00      	ldr	r3, [sp, #0]
 8103392:	2b00      	cmp	r3, #0
 8103394:	bfcc      	ite	gt
 8103396:	461e      	movgt	r6, r3
 8103398:	2601      	movle	r6, #1
 810339a:	4456      	add	r6, sl
 810339c:	2700      	movs	r7, #0
 810339e:	4649      	mov	r1, r9
 81033a0:	2201      	movs	r2, #1
 81033a2:	4658      	mov	r0, fp
 81033a4:	f000 fb5a 	bl	8103a5c <__lshift>
 81033a8:	4621      	mov	r1, r4
 81033aa:	4681      	mov	r9, r0
 81033ac:	f000 fbc2 	bl	8103b34 <__mcmp>
 81033b0:	2800      	cmp	r0, #0
 81033b2:	dcb0      	bgt.n	8103316 <_dtoa_r+0xa5e>
 81033b4:	d102      	bne.n	81033bc <_dtoa_r+0xb04>
 81033b6:	f018 0f01 	tst.w	r8, #1
 81033ba:	d1ac      	bne.n	8103316 <_dtoa_r+0xa5e>
 81033bc:	4633      	mov	r3, r6
 81033be:	461e      	mov	r6, r3
 81033c0:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 81033c4:	2a30      	cmp	r2, #48	@ 0x30
 81033c6:	d0fa      	beq.n	81033be <_dtoa_r+0xb06>
 81033c8:	e5c2      	b.n	8102f50 <_dtoa_r+0x698>
 81033ca:	459a      	cmp	sl, r3
 81033cc:	d1a4      	bne.n	8103318 <_dtoa_r+0xa60>
 81033ce:	9b04      	ldr	r3, [sp, #16]
 81033d0:	3301      	adds	r3, #1
 81033d2:	9304      	str	r3, [sp, #16]
 81033d4:	2331      	movs	r3, #49	@ 0x31
 81033d6:	f88a 3000 	strb.w	r3, [sl]
 81033da:	e5b9      	b.n	8102f50 <_dtoa_r+0x698>
 81033dc:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 81033de:	f8df a05c 	ldr.w	sl, [pc, #92]	@ 810343c <_dtoa_r+0xb84>
 81033e2:	b11b      	cbz	r3, 81033ec <_dtoa_r+0xb34>
 81033e4:	f10a 0308 	add.w	r3, sl, #8
 81033e8:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 81033ea:	6013      	str	r3, [r2, #0]
 81033ec:	4650      	mov	r0, sl
 81033ee:	b019      	add	sp, #100	@ 0x64
 81033f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81033f4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 81033f6:	2b01      	cmp	r3, #1
 81033f8:	f77f ae37 	ble.w	810306a <_dtoa_r+0x7b2>
 81033fc:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 81033fe:	930a      	str	r3, [sp, #40]	@ 0x28
 8103400:	2001      	movs	r0, #1
 8103402:	e655      	b.n	81030b0 <_dtoa_r+0x7f8>
 8103404:	9b00      	ldr	r3, [sp, #0]
 8103406:	2b00      	cmp	r3, #0
 8103408:	f77f aed6 	ble.w	81031b8 <_dtoa_r+0x900>
 810340c:	4656      	mov	r6, sl
 810340e:	4621      	mov	r1, r4
 8103410:	4648      	mov	r0, r9
 8103412:	f7ff f9c6 	bl	81027a2 <quorem>
 8103416:	f100 0830 	add.w	r8, r0, #48	@ 0x30
 810341a:	f806 8b01 	strb.w	r8, [r6], #1
 810341e:	9b00      	ldr	r3, [sp, #0]
 8103420:	eba6 020a 	sub.w	r2, r6, sl
 8103424:	4293      	cmp	r3, r2
 8103426:	ddb3      	ble.n	8103390 <_dtoa_r+0xad8>
 8103428:	4649      	mov	r1, r9
 810342a:	2300      	movs	r3, #0
 810342c:	220a      	movs	r2, #10
 810342e:	4658      	mov	r0, fp
 8103430:	f000 f968 	bl	8103704 <__multadd>
 8103434:	4681      	mov	r9, r0
 8103436:	e7ea      	b.n	810340e <_dtoa_r+0xb56>
 8103438:	081045c0 	.word	0x081045c0
 810343c:	08104544 	.word	0x08104544

08103440 <_free_r>:
 8103440:	b538      	push	{r3, r4, r5, lr}
 8103442:	4605      	mov	r5, r0
 8103444:	2900      	cmp	r1, #0
 8103446:	d041      	beq.n	81034cc <_free_r+0x8c>
 8103448:	f851 3c04 	ldr.w	r3, [r1, #-4]
 810344c:	1f0c      	subs	r4, r1, #4
 810344e:	2b00      	cmp	r3, #0
 8103450:	bfb8      	it	lt
 8103452:	18e4      	addlt	r4, r4, r3
 8103454:	f000 f8e8 	bl	8103628 <__malloc_lock>
 8103458:	4a1d      	ldr	r2, [pc, #116]	@ (81034d0 <_free_r+0x90>)
 810345a:	6813      	ldr	r3, [r2, #0]
 810345c:	b933      	cbnz	r3, 810346c <_free_r+0x2c>
 810345e:	6063      	str	r3, [r4, #4]
 8103460:	6014      	str	r4, [r2, #0]
 8103462:	4628      	mov	r0, r5
 8103464:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8103468:	f000 b8e4 	b.w	8103634 <__malloc_unlock>
 810346c:	42a3      	cmp	r3, r4
 810346e:	d908      	bls.n	8103482 <_free_r+0x42>
 8103470:	6820      	ldr	r0, [r4, #0]
 8103472:	1821      	adds	r1, r4, r0
 8103474:	428b      	cmp	r3, r1
 8103476:	bf01      	itttt	eq
 8103478:	6819      	ldreq	r1, [r3, #0]
 810347a:	685b      	ldreq	r3, [r3, #4]
 810347c:	1809      	addeq	r1, r1, r0
 810347e:	6021      	streq	r1, [r4, #0]
 8103480:	e7ed      	b.n	810345e <_free_r+0x1e>
 8103482:	461a      	mov	r2, r3
 8103484:	685b      	ldr	r3, [r3, #4]
 8103486:	b10b      	cbz	r3, 810348c <_free_r+0x4c>
 8103488:	42a3      	cmp	r3, r4
 810348a:	d9fa      	bls.n	8103482 <_free_r+0x42>
 810348c:	6811      	ldr	r1, [r2, #0]
 810348e:	1850      	adds	r0, r2, r1
 8103490:	42a0      	cmp	r0, r4
 8103492:	d10b      	bne.n	81034ac <_free_r+0x6c>
 8103494:	6820      	ldr	r0, [r4, #0]
 8103496:	4401      	add	r1, r0
 8103498:	1850      	adds	r0, r2, r1
 810349a:	4283      	cmp	r3, r0
 810349c:	6011      	str	r1, [r2, #0]
 810349e:	d1e0      	bne.n	8103462 <_free_r+0x22>
 81034a0:	6818      	ldr	r0, [r3, #0]
 81034a2:	685b      	ldr	r3, [r3, #4]
 81034a4:	6053      	str	r3, [r2, #4]
 81034a6:	4408      	add	r0, r1
 81034a8:	6010      	str	r0, [r2, #0]
 81034aa:	e7da      	b.n	8103462 <_free_r+0x22>
 81034ac:	d902      	bls.n	81034b4 <_free_r+0x74>
 81034ae:	230c      	movs	r3, #12
 81034b0:	602b      	str	r3, [r5, #0]
 81034b2:	e7d6      	b.n	8103462 <_free_r+0x22>
 81034b4:	6820      	ldr	r0, [r4, #0]
 81034b6:	1821      	adds	r1, r4, r0
 81034b8:	428b      	cmp	r3, r1
 81034ba:	bf04      	itt	eq
 81034bc:	6819      	ldreq	r1, [r3, #0]
 81034be:	685b      	ldreq	r3, [r3, #4]
 81034c0:	6063      	str	r3, [r4, #4]
 81034c2:	bf04      	itt	eq
 81034c4:	1809      	addeq	r1, r1, r0
 81034c6:	6021      	streq	r1, [r4, #0]
 81034c8:	6054      	str	r4, [r2, #4]
 81034ca:	e7ca      	b.n	8103462 <_free_r+0x22>
 81034cc:	bd38      	pop	{r3, r4, r5, pc}
 81034ce:	bf00      	nop
 81034d0:	10000344 	.word	0x10000344

081034d4 <malloc>:
 81034d4:	4b02      	ldr	r3, [pc, #8]	@ (81034e0 <malloc+0xc>)
 81034d6:	4601      	mov	r1, r0
 81034d8:	6818      	ldr	r0, [r3, #0]
 81034da:	f000 b825 	b.w	8103528 <_malloc_r>
 81034de:	bf00      	nop
 81034e0:	1000001c 	.word	0x1000001c

081034e4 <sbrk_aligned>:
 81034e4:	b570      	push	{r4, r5, r6, lr}
 81034e6:	4e0f      	ldr	r6, [pc, #60]	@ (8103524 <sbrk_aligned+0x40>)
 81034e8:	460c      	mov	r4, r1
 81034ea:	6831      	ldr	r1, [r6, #0]
 81034ec:	4605      	mov	r5, r0
 81034ee:	b911      	cbnz	r1, 81034f6 <sbrk_aligned+0x12>
 81034f0:	f000 fcd4 	bl	8103e9c <_sbrk_r>
 81034f4:	6030      	str	r0, [r6, #0]
 81034f6:	4621      	mov	r1, r4
 81034f8:	4628      	mov	r0, r5
 81034fa:	f000 fccf 	bl	8103e9c <_sbrk_r>
 81034fe:	1c43      	adds	r3, r0, #1
 8103500:	d103      	bne.n	810350a <sbrk_aligned+0x26>
 8103502:	f04f 34ff 	mov.w	r4, #4294967295	@ 0xffffffff
 8103506:	4620      	mov	r0, r4
 8103508:	bd70      	pop	{r4, r5, r6, pc}
 810350a:	1cc4      	adds	r4, r0, #3
 810350c:	f024 0403 	bic.w	r4, r4, #3
 8103510:	42a0      	cmp	r0, r4
 8103512:	d0f8      	beq.n	8103506 <sbrk_aligned+0x22>
 8103514:	1a21      	subs	r1, r4, r0
 8103516:	4628      	mov	r0, r5
 8103518:	f000 fcc0 	bl	8103e9c <_sbrk_r>
 810351c:	3001      	adds	r0, #1
 810351e:	d1f2      	bne.n	8103506 <sbrk_aligned+0x22>
 8103520:	e7ef      	b.n	8103502 <sbrk_aligned+0x1e>
 8103522:	bf00      	nop
 8103524:	10000340 	.word	0x10000340

08103528 <_malloc_r>:
 8103528:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 810352c:	1ccd      	adds	r5, r1, #3
 810352e:	f025 0503 	bic.w	r5, r5, #3
 8103532:	3508      	adds	r5, #8
 8103534:	2d0c      	cmp	r5, #12
 8103536:	bf38      	it	cc
 8103538:	250c      	movcc	r5, #12
 810353a:	2d00      	cmp	r5, #0
 810353c:	4606      	mov	r6, r0
 810353e:	db01      	blt.n	8103544 <_malloc_r+0x1c>
 8103540:	42a9      	cmp	r1, r5
 8103542:	d904      	bls.n	810354e <_malloc_r+0x26>
 8103544:	230c      	movs	r3, #12
 8103546:	6033      	str	r3, [r6, #0]
 8103548:	2000      	movs	r0, #0
 810354a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 810354e:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8103624 <_malloc_r+0xfc>
 8103552:	f000 f869 	bl	8103628 <__malloc_lock>
 8103556:	f8d8 3000 	ldr.w	r3, [r8]
 810355a:	461c      	mov	r4, r3
 810355c:	bb44      	cbnz	r4, 81035b0 <_malloc_r+0x88>
 810355e:	4629      	mov	r1, r5
 8103560:	4630      	mov	r0, r6
 8103562:	f7ff ffbf 	bl	81034e4 <sbrk_aligned>
 8103566:	1c43      	adds	r3, r0, #1
 8103568:	4604      	mov	r4, r0
 810356a:	d158      	bne.n	810361e <_malloc_r+0xf6>
 810356c:	f8d8 4000 	ldr.w	r4, [r8]
 8103570:	4627      	mov	r7, r4
 8103572:	2f00      	cmp	r7, #0
 8103574:	d143      	bne.n	81035fe <_malloc_r+0xd6>
 8103576:	2c00      	cmp	r4, #0
 8103578:	d04b      	beq.n	8103612 <_malloc_r+0xea>
 810357a:	6823      	ldr	r3, [r4, #0]
 810357c:	4639      	mov	r1, r7
 810357e:	4630      	mov	r0, r6
 8103580:	eb04 0903 	add.w	r9, r4, r3
 8103584:	f000 fc8a 	bl	8103e9c <_sbrk_r>
 8103588:	4581      	cmp	r9, r0
 810358a:	d142      	bne.n	8103612 <_malloc_r+0xea>
 810358c:	6821      	ldr	r1, [r4, #0]
 810358e:	1a6d      	subs	r5, r5, r1
 8103590:	4629      	mov	r1, r5
 8103592:	4630      	mov	r0, r6
 8103594:	f7ff ffa6 	bl	81034e4 <sbrk_aligned>
 8103598:	3001      	adds	r0, #1
 810359a:	d03a      	beq.n	8103612 <_malloc_r+0xea>
 810359c:	6823      	ldr	r3, [r4, #0]
 810359e:	442b      	add	r3, r5
 81035a0:	6023      	str	r3, [r4, #0]
 81035a2:	f8d8 3000 	ldr.w	r3, [r8]
 81035a6:	685a      	ldr	r2, [r3, #4]
 81035a8:	bb62      	cbnz	r2, 8103604 <_malloc_r+0xdc>
 81035aa:	f8c8 7000 	str.w	r7, [r8]
 81035ae:	e00f      	b.n	81035d0 <_malloc_r+0xa8>
 81035b0:	6822      	ldr	r2, [r4, #0]
 81035b2:	1b52      	subs	r2, r2, r5
 81035b4:	d420      	bmi.n	81035f8 <_malloc_r+0xd0>
 81035b6:	2a0b      	cmp	r2, #11
 81035b8:	d917      	bls.n	81035ea <_malloc_r+0xc2>
 81035ba:	1961      	adds	r1, r4, r5
 81035bc:	42a3      	cmp	r3, r4
 81035be:	6025      	str	r5, [r4, #0]
 81035c0:	bf18      	it	ne
 81035c2:	6059      	strne	r1, [r3, #4]
 81035c4:	6863      	ldr	r3, [r4, #4]
 81035c6:	bf08      	it	eq
 81035c8:	f8c8 1000 	streq.w	r1, [r8]
 81035cc:	5162      	str	r2, [r4, r5]
 81035ce:	604b      	str	r3, [r1, #4]
 81035d0:	4630      	mov	r0, r6
 81035d2:	f000 f82f 	bl	8103634 <__malloc_unlock>
 81035d6:	f104 000b 	add.w	r0, r4, #11
 81035da:	1d23      	adds	r3, r4, #4
 81035dc:	f020 0007 	bic.w	r0, r0, #7
 81035e0:	1ac2      	subs	r2, r0, r3
 81035e2:	bf1c      	itt	ne
 81035e4:	1a1b      	subne	r3, r3, r0
 81035e6:	50a3      	strne	r3, [r4, r2]
 81035e8:	e7af      	b.n	810354a <_malloc_r+0x22>
 81035ea:	6862      	ldr	r2, [r4, #4]
 81035ec:	42a3      	cmp	r3, r4
 81035ee:	bf0c      	ite	eq
 81035f0:	f8c8 2000 	streq.w	r2, [r8]
 81035f4:	605a      	strne	r2, [r3, #4]
 81035f6:	e7eb      	b.n	81035d0 <_malloc_r+0xa8>
 81035f8:	4623      	mov	r3, r4
 81035fa:	6864      	ldr	r4, [r4, #4]
 81035fc:	e7ae      	b.n	810355c <_malloc_r+0x34>
 81035fe:	463c      	mov	r4, r7
 8103600:	687f      	ldr	r7, [r7, #4]
 8103602:	e7b6      	b.n	8103572 <_malloc_r+0x4a>
 8103604:	461a      	mov	r2, r3
 8103606:	685b      	ldr	r3, [r3, #4]
 8103608:	42a3      	cmp	r3, r4
 810360a:	d1fb      	bne.n	8103604 <_malloc_r+0xdc>
 810360c:	2300      	movs	r3, #0
 810360e:	6053      	str	r3, [r2, #4]
 8103610:	e7de      	b.n	81035d0 <_malloc_r+0xa8>
 8103612:	230c      	movs	r3, #12
 8103614:	6033      	str	r3, [r6, #0]
 8103616:	4630      	mov	r0, r6
 8103618:	f000 f80c 	bl	8103634 <__malloc_unlock>
 810361c:	e794      	b.n	8103548 <_malloc_r+0x20>
 810361e:	6005      	str	r5, [r0, #0]
 8103620:	e7d6      	b.n	81035d0 <_malloc_r+0xa8>
 8103622:	bf00      	nop
 8103624:	10000344 	.word	0x10000344

08103628 <__malloc_lock>:
 8103628:	4801      	ldr	r0, [pc, #4]	@ (8103630 <__malloc_lock+0x8>)
 810362a:	f7ff b8b8 	b.w	810279e <__retarget_lock_acquire_recursive>
 810362e:	bf00      	nop
 8103630:	1000033c 	.word	0x1000033c

08103634 <__malloc_unlock>:
 8103634:	4801      	ldr	r0, [pc, #4]	@ (810363c <__malloc_unlock+0x8>)
 8103636:	f7ff b8b3 	b.w	81027a0 <__retarget_lock_release_recursive>
 810363a:	bf00      	nop
 810363c:	1000033c 	.word	0x1000033c

08103640 <_Balloc>:
 8103640:	b570      	push	{r4, r5, r6, lr}
 8103642:	69c6      	ldr	r6, [r0, #28]
 8103644:	4604      	mov	r4, r0
 8103646:	460d      	mov	r5, r1
 8103648:	b976      	cbnz	r6, 8103668 <_Balloc+0x28>
 810364a:	2010      	movs	r0, #16
 810364c:	f7ff ff42 	bl	81034d4 <malloc>
 8103650:	4602      	mov	r2, r0
 8103652:	61e0      	str	r0, [r4, #28]
 8103654:	b920      	cbnz	r0, 8103660 <_Balloc+0x20>
 8103656:	4b18      	ldr	r3, [pc, #96]	@ (81036b8 <_Balloc+0x78>)
 8103658:	4818      	ldr	r0, [pc, #96]	@ (81036bc <_Balloc+0x7c>)
 810365a:	216b      	movs	r1, #107	@ 0x6b
 810365c:	f000 fc3c 	bl	8103ed8 <__assert_func>
 8103660:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8103664:	6006      	str	r6, [r0, #0]
 8103666:	60c6      	str	r6, [r0, #12]
 8103668:	69e6      	ldr	r6, [r4, #28]
 810366a:	68f3      	ldr	r3, [r6, #12]
 810366c:	b183      	cbz	r3, 8103690 <_Balloc+0x50>
 810366e:	69e3      	ldr	r3, [r4, #28]
 8103670:	68db      	ldr	r3, [r3, #12]
 8103672:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 8103676:	b9b8      	cbnz	r0, 81036a8 <_Balloc+0x68>
 8103678:	2101      	movs	r1, #1
 810367a:	fa01 f605 	lsl.w	r6, r1, r5
 810367e:	1d72      	adds	r2, r6, #5
 8103680:	0092      	lsls	r2, r2, #2
 8103682:	4620      	mov	r0, r4
 8103684:	f000 fc46 	bl	8103f14 <_calloc_r>
 8103688:	b160      	cbz	r0, 81036a4 <_Balloc+0x64>
 810368a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 810368e:	e00e      	b.n	81036ae <_Balloc+0x6e>
 8103690:	2221      	movs	r2, #33	@ 0x21
 8103692:	2104      	movs	r1, #4
 8103694:	4620      	mov	r0, r4
 8103696:	f000 fc3d 	bl	8103f14 <_calloc_r>
 810369a:	69e3      	ldr	r3, [r4, #28]
 810369c:	60f0      	str	r0, [r6, #12]
 810369e:	68db      	ldr	r3, [r3, #12]
 81036a0:	2b00      	cmp	r3, #0
 81036a2:	d1e4      	bne.n	810366e <_Balloc+0x2e>
 81036a4:	2000      	movs	r0, #0
 81036a6:	bd70      	pop	{r4, r5, r6, pc}
 81036a8:	6802      	ldr	r2, [r0, #0]
 81036aa:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 81036ae:	2300      	movs	r3, #0
 81036b0:	e9c0 3303 	strd	r3, r3, [r0, #12]
 81036b4:	e7f7      	b.n	81036a6 <_Balloc+0x66>
 81036b6:	bf00      	nop
 81036b8:	08104551 	.word	0x08104551
 81036bc:	081045d1 	.word	0x081045d1

081036c0 <_Bfree>:
 81036c0:	b570      	push	{r4, r5, r6, lr}
 81036c2:	69c6      	ldr	r6, [r0, #28]
 81036c4:	4605      	mov	r5, r0
 81036c6:	460c      	mov	r4, r1
 81036c8:	b976      	cbnz	r6, 81036e8 <_Bfree+0x28>
 81036ca:	2010      	movs	r0, #16
 81036cc:	f7ff ff02 	bl	81034d4 <malloc>
 81036d0:	4602      	mov	r2, r0
 81036d2:	61e8      	str	r0, [r5, #28]
 81036d4:	b920      	cbnz	r0, 81036e0 <_Bfree+0x20>
 81036d6:	4b09      	ldr	r3, [pc, #36]	@ (81036fc <_Bfree+0x3c>)
 81036d8:	4809      	ldr	r0, [pc, #36]	@ (8103700 <_Bfree+0x40>)
 81036da:	218f      	movs	r1, #143	@ 0x8f
 81036dc:	f000 fbfc 	bl	8103ed8 <__assert_func>
 81036e0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 81036e4:	6006      	str	r6, [r0, #0]
 81036e6:	60c6      	str	r6, [r0, #12]
 81036e8:	b13c      	cbz	r4, 81036fa <_Bfree+0x3a>
 81036ea:	69eb      	ldr	r3, [r5, #28]
 81036ec:	6862      	ldr	r2, [r4, #4]
 81036ee:	68db      	ldr	r3, [r3, #12]
 81036f0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 81036f4:	6021      	str	r1, [r4, #0]
 81036f6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 81036fa:	bd70      	pop	{r4, r5, r6, pc}
 81036fc:	08104551 	.word	0x08104551
 8103700:	081045d1 	.word	0x081045d1

08103704 <__multadd>:
 8103704:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8103708:	690d      	ldr	r5, [r1, #16]
 810370a:	4607      	mov	r7, r0
 810370c:	460c      	mov	r4, r1
 810370e:	461e      	mov	r6, r3
 8103710:	f101 0c14 	add.w	ip, r1, #20
 8103714:	2000      	movs	r0, #0
 8103716:	f8dc 3000 	ldr.w	r3, [ip]
 810371a:	b299      	uxth	r1, r3
 810371c:	fb02 6101 	mla	r1, r2, r1, r6
 8103720:	0c1e      	lsrs	r6, r3, #16
 8103722:	0c0b      	lsrs	r3, r1, #16
 8103724:	fb02 3306 	mla	r3, r2, r6, r3
 8103728:	b289      	uxth	r1, r1
 810372a:	3001      	adds	r0, #1
 810372c:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 8103730:	4285      	cmp	r5, r0
 8103732:	f84c 1b04 	str.w	r1, [ip], #4
 8103736:	ea4f 4613 	mov.w	r6, r3, lsr #16
 810373a:	dcec      	bgt.n	8103716 <__multadd+0x12>
 810373c:	b30e      	cbz	r6, 8103782 <__multadd+0x7e>
 810373e:	68a3      	ldr	r3, [r4, #8]
 8103740:	42ab      	cmp	r3, r5
 8103742:	dc19      	bgt.n	8103778 <__multadd+0x74>
 8103744:	6861      	ldr	r1, [r4, #4]
 8103746:	4638      	mov	r0, r7
 8103748:	3101      	adds	r1, #1
 810374a:	f7ff ff79 	bl	8103640 <_Balloc>
 810374e:	4680      	mov	r8, r0
 8103750:	b928      	cbnz	r0, 810375e <__multadd+0x5a>
 8103752:	4602      	mov	r2, r0
 8103754:	4b0c      	ldr	r3, [pc, #48]	@ (8103788 <__multadd+0x84>)
 8103756:	480d      	ldr	r0, [pc, #52]	@ (810378c <__multadd+0x88>)
 8103758:	21ba      	movs	r1, #186	@ 0xba
 810375a:	f000 fbbd 	bl	8103ed8 <__assert_func>
 810375e:	6922      	ldr	r2, [r4, #16]
 8103760:	3202      	adds	r2, #2
 8103762:	f104 010c 	add.w	r1, r4, #12
 8103766:	0092      	lsls	r2, r2, #2
 8103768:	300c      	adds	r0, #12
 810376a:	f000 fba7 	bl	8103ebc <memcpy>
 810376e:	4621      	mov	r1, r4
 8103770:	4638      	mov	r0, r7
 8103772:	f7ff ffa5 	bl	81036c0 <_Bfree>
 8103776:	4644      	mov	r4, r8
 8103778:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 810377c:	3501      	adds	r5, #1
 810377e:	615e      	str	r6, [r3, #20]
 8103780:	6125      	str	r5, [r4, #16]
 8103782:	4620      	mov	r0, r4
 8103784:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8103788:	081045c0 	.word	0x081045c0
 810378c:	081045d1 	.word	0x081045d1

08103790 <__hi0bits>:
 8103790:	f5b0 3f80 	cmp.w	r0, #65536	@ 0x10000
 8103794:	4603      	mov	r3, r0
 8103796:	bf36      	itet	cc
 8103798:	0403      	lslcc	r3, r0, #16
 810379a:	2000      	movcs	r0, #0
 810379c:	2010      	movcc	r0, #16
 810379e:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 81037a2:	bf3c      	itt	cc
 81037a4:	021b      	lslcc	r3, r3, #8
 81037a6:	3008      	addcc	r0, #8
 81037a8:	f1b3 5f80 	cmp.w	r3, #268435456	@ 0x10000000
 81037ac:	bf3c      	itt	cc
 81037ae:	011b      	lslcc	r3, r3, #4
 81037b0:	3004      	addcc	r0, #4
 81037b2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 81037b6:	bf3c      	itt	cc
 81037b8:	009b      	lslcc	r3, r3, #2
 81037ba:	3002      	addcc	r0, #2
 81037bc:	2b00      	cmp	r3, #0
 81037be:	db05      	blt.n	81037cc <__hi0bits+0x3c>
 81037c0:	f013 4f80 	tst.w	r3, #1073741824	@ 0x40000000
 81037c4:	f100 0001 	add.w	r0, r0, #1
 81037c8:	bf08      	it	eq
 81037ca:	2020      	moveq	r0, #32
 81037cc:	4770      	bx	lr

081037ce <__lo0bits>:
 81037ce:	6803      	ldr	r3, [r0, #0]
 81037d0:	4602      	mov	r2, r0
 81037d2:	f013 0007 	ands.w	r0, r3, #7
 81037d6:	d00b      	beq.n	81037f0 <__lo0bits+0x22>
 81037d8:	07d9      	lsls	r1, r3, #31
 81037da:	d421      	bmi.n	8103820 <__lo0bits+0x52>
 81037dc:	0798      	lsls	r0, r3, #30
 81037de:	bf49      	itett	mi
 81037e0:	085b      	lsrmi	r3, r3, #1
 81037e2:	089b      	lsrpl	r3, r3, #2
 81037e4:	2001      	movmi	r0, #1
 81037e6:	6013      	strmi	r3, [r2, #0]
 81037e8:	bf5c      	itt	pl
 81037ea:	6013      	strpl	r3, [r2, #0]
 81037ec:	2002      	movpl	r0, #2
 81037ee:	4770      	bx	lr
 81037f0:	b299      	uxth	r1, r3
 81037f2:	b909      	cbnz	r1, 81037f8 <__lo0bits+0x2a>
 81037f4:	0c1b      	lsrs	r3, r3, #16
 81037f6:	2010      	movs	r0, #16
 81037f8:	b2d9      	uxtb	r1, r3
 81037fa:	b909      	cbnz	r1, 8103800 <__lo0bits+0x32>
 81037fc:	3008      	adds	r0, #8
 81037fe:	0a1b      	lsrs	r3, r3, #8
 8103800:	0719      	lsls	r1, r3, #28
 8103802:	bf04      	itt	eq
 8103804:	091b      	lsreq	r3, r3, #4
 8103806:	3004      	addeq	r0, #4
 8103808:	0799      	lsls	r1, r3, #30
 810380a:	bf04      	itt	eq
 810380c:	089b      	lsreq	r3, r3, #2
 810380e:	3002      	addeq	r0, #2
 8103810:	07d9      	lsls	r1, r3, #31
 8103812:	d403      	bmi.n	810381c <__lo0bits+0x4e>
 8103814:	085b      	lsrs	r3, r3, #1
 8103816:	f100 0001 	add.w	r0, r0, #1
 810381a:	d003      	beq.n	8103824 <__lo0bits+0x56>
 810381c:	6013      	str	r3, [r2, #0]
 810381e:	4770      	bx	lr
 8103820:	2000      	movs	r0, #0
 8103822:	4770      	bx	lr
 8103824:	2020      	movs	r0, #32
 8103826:	4770      	bx	lr

08103828 <__i2b>:
 8103828:	b510      	push	{r4, lr}
 810382a:	460c      	mov	r4, r1
 810382c:	2101      	movs	r1, #1
 810382e:	f7ff ff07 	bl	8103640 <_Balloc>
 8103832:	4602      	mov	r2, r0
 8103834:	b928      	cbnz	r0, 8103842 <__i2b+0x1a>
 8103836:	4b05      	ldr	r3, [pc, #20]	@ (810384c <__i2b+0x24>)
 8103838:	4805      	ldr	r0, [pc, #20]	@ (8103850 <__i2b+0x28>)
 810383a:	f240 1145 	movw	r1, #325	@ 0x145
 810383e:	f000 fb4b 	bl	8103ed8 <__assert_func>
 8103842:	2301      	movs	r3, #1
 8103844:	6144      	str	r4, [r0, #20]
 8103846:	6103      	str	r3, [r0, #16]
 8103848:	bd10      	pop	{r4, pc}
 810384a:	bf00      	nop
 810384c:	081045c0 	.word	0x081045c0
 8103850:	081045d1 	.word	0x081045d1

08103854 <__multiply>:
 8103854:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103858:	4614      	mov	r4, r2
 810385a:	690a      	ldr	r2, [r1, #16]
 810385c:	6923      	ldr	r3, [r4, #16]
 810385e:	429a      	cmp	r2, r3
 8103860:	bfa8      	it	ge
 8103862:	4623      	movge	r3, r4
 8103864:	460f      	mov	r7, r1
 8103866:	bfa4      	itt	ge
 8103868:	460c      	movge	r4, r1
 810386a:	461f      	movge	r7, r3
 810386c:	f8d4 a010 	ldr.w	sl, [r4, #16]
 8103870:	f8d7 9010 	ldr.w	r9, [r7, #16]
 8103874:	68a3      	ldr	r3, [r4, #8]
 8103876:	6861      	ldr	r1, [r4, #4]
 8103878:	eb0a 0609 	add.w	r6, sl, r9
 810387c:	42b3      	cmp	r3, r6
 810387e:	b085      	sub	sp, #20
 8103880:	bfb8      	it	lt
 8103882:	3101      	addlt	r1, #1
 8103884:	f7ff fedc 	bl	8103640 <_Balloc>
 8103888:	b930      	cbnz	r0, 8103898 <__multiply+0x44>
 810388a:	4602      	mov	r2, r0
 810388c:	4b44      	ldr	r3, [pc, #272]	@ (81039a0 <__multiply+0x14c>)
 810388e:	4845      	ldr	r0, [pc, #276]	@ (81039a4 <__multiply+0x150>)
 8103890:	f44f 71b1 	mov.w	r1, #354	@ 0x162
 8103894:	f000 fb20 	bl	8103ed8 <__assert_func>
 8103898:	f100 0514 	add.w	r5, r0, #20
 810389c:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 81038a0:	462b      	mov	r3, r5
 81038a2:	2200      	movs	r2, #0
 81038a4:	4543      	cmp	r3, r8
 81038a6:	d321      	bcc.n	81038ec <__multiply+0x98>
 81038a8:	f107 0114 	add.w	r1, r7, #20
 81038ac:	f104 0214 	add.w	r2, r4, #20
 81038b0:	eb02 028a 	add.w	r2, r2, sl, lsl #2
 81038b4:	eb01 0389 	add.w	r3, r1, r9, lsl #2
 81038b8:	9302      	str	r3, [sp, #8]
 81038ba:	1b13      	subs	r3, r2, r4
 81038bc:	3b15      	subs	r3, #21
 81038be:	f023 0303 	bic.w	r3, r3, #3
 81038c2:	3304      	adds	r3, #4
 81038c4:	f104 0715 	add.w	r7, r4, #21
 81038c8:	42ba      	cmp	r2, r7
 81038ca:	bf38      	it	cc
 81038cc:	2304      	movcc	r3, #4
 81038ce:	9301      	str	r3, [sp, #4]
 81038d0:	9b02      	ldr	r3, [sp, #8]
 81038d2:	9103      	str	r1, [sp, #12]
 81038d4:	428b      	cmp	r3, r1
 81038d6:	d80c      	bhi.n	81038f2 <__multiply+0x9e>
 81038d8:	2e00      	cmp	r6, #0
 81038da:	dd03      	ble.n	81038e4 <__multiply+0x90>
 81038dc:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 81038e0:	2b00      	cmp	r3, #0
 81038e2:	d05b      	beq.n	810399c <__multiply+0x148>
 81038e4:	6106      	str	r6, [r0, #16]
 81038e6:	b005      	add	sp, #20
 81038e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 81038ec:	f843 2b04 	str.w	r2, [r3], #4
 81038f0:	e7d8      	b.n	81038a4 <__multiply+0x50>
 81038f2:	f8b1 a000 	ldrh.w	sl, [r1]
 81038f6:	f1ba 0f00 	cmp.w	sl, #0
 81038fa:	d024      	beq.n	8103946 <__multiply+0xf2>
 81038fc:	f104 0e14 	add.w	lr, r4, #20
 8103900:	46a9      	mov	r9, r5
 8103902:	f04f 0c00 	mov.w	ip, #0
 8103906:	f85e 7b04 	ldr.w	r7, [lr], #4
 810390a:	f8d9 3000 	ldr.w	r3, [r9]
 810390e:	fa1f fb87 	uxth.w	fp, r7
 8103912:	b29b      	uxth	r3, r3
 8103914:	fb0a 330b 	mla	r3, sl, fp, r3
 8103918:	ea4f 4b17 	mov.w	fp, r7, lsr #16
 810391c:	f8d9 7000 	ldr.w	r7, [r9]
 8103920:	4463      	add	r3, ip
 8103922:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 8103926:	fb0a c70b 	mla	r7, sl, fp, ip
 810392a:	eb07 4713 	add.w	r7, r7, r3, lsr #16
 810392e:	b29b      	uxth	r3, r3
 8103930:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8103934:	4572      	cmp	r2, lr
 8103936:	f849 3b04 	str.w	r3, [r9], #4
 810393a:	ea4f 4c17 	mov.w	ip, r7, lsr #16
 810393e:	d8e2      	bhi.n	8103906 <__multiply+0xb2>
 8103940:	9b01      	ldr	r3, [sp, #4]
 8103942:	f845 c003 	str.w	ip, [r5, r3]
 8103946:	9b03      	ldr	r3, [sp, #12]
 8103948:	f8b3 9002 	ldrh.w	r9, [r3, #2]
 810394c:	3104      	adds	r1, #4
 810394e:	f1b9 0f00 	cmp.w	r9, #0
 8103952:	d021      	beq.n	8103998 <__multiply+0x144>
 8103954:	682b      	ldr	r3, [r5, #0]
 8103956:	f104 0c14 	add.w	ip, r4, #20
 810395a:	46ae      	mov	lr, r5
 810395c:	f04f 0a00 	mov.w	sl, #0
 8103960:	f8bc b000 	ldrh.w	fp, [ip]
 8103964:	f8be 7002 	ldrh.w	r7, [lr, #2]
 8103968:	fb09 770b 	mla	r7, r9, fp, r7
 810396c:	4457      	add	r7, sl
 810396e:	b29b      	uxth	r3, r3
 8103970:	ea43 4307 	orr.w	r3, r3, r7, lsl #16
 8103974:	f84e 3b04 	str.w	r3, [lr], #4
 8103978:	f85c 3b04 	ldr.w	r3, [ip], #4
 810397c:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8103980:	f8be 3000 	ldrh.w	r3, [lr]
 8103984:	fb09 330a 	mla	r3, r9, sl, r3
 8103988:	eb03 4317 	add.w	r3, r3, r7, lsr #16
 810398c:	4562      	cmp	r2, ip
 810398e:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 8103992:	d8e5      	bhi.n	8103960 <__multiply+0x10c>
 8103994:	9f01      	ldr	r7, [sp, #4]
 8103996:	51eb      	str	r3, [r5, r7]
 8103998:	3504      	adds	r5, #4
 810399a:	e799      	b.n	81038d0 <__multiply+0x7c>
 810399c:	3e01      	subs	r6, #1
 810399e:	e79b      	b.n	81038d8 <__multiply+0x84>
 81039a0:	081045c0 	.word	0x081045c0
 81039a4:	081045d1 	.word	0x081045d1

081039a8 <__pow5mult>:
 81039a8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 81039ac:	4615      	mov	r5, r2
 81039ae:	f012 0203 	ands.w	r2, r2, #3
 81039b2:	4607      	mov	r7, r0
 81039b4:	460e      	mov	r6, r1
 81039b6:	d007      	beq.n	81039c8 <__pow5mult+0x20>
 81039b8:	4c25      	ldr	r4, [pc, #148]	@ (8103a50 <__pow5mult+0xa8>)
 81039ba:	3a01      	subs	r2, #1
 81039bc:	2300      	movs	r3, #0
 81039be:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 81039c2:	f7ff fe9f 	bl	8103704 <__multadd>
 81039c6:	4606      	mov	r6, r0
 81039c8:	10ad      	asrs	r5, r5, #2
 81039ca:	d03d      	beq.n	8103a48 <__pow5mult+0xa0>
 81039cc:	69fc      	ldr	r4, [r7, #28]
 81039ce:	b97c      	cbnz	r4, 81039f0 <__pow5mult+0x48>
 81039d0:	2010      	movs	r0, #16
 81039d2:	f7ff fd7f 	bl	81034d4 <malloc>
 81039d6:	4602      	mov	r2, r0
 81039d8:	61f8      	str	r0, [r7, #28]
 81039da:	b928      	cbnz	r0, 81039e8 <__pow5mult+0x40>
 81039dc:	4b1d      	ldr	r3, [pc, #116]	@ (8103a54 <__pow5mult+0xac>)
 81039de:	481e      	ldr	r0, [pc, #120]	@ (8103a58 <__pow5mult+0xb0>)
 81039e0:	f240 11b3 	movw	r1, #435	@ 0x1b3
 81039e4:	f000 fa78 	bl	8103ed8 <__assert_func>
 81039e8:	e9c0 4401 	strd	r4, r4, [r0, #4]
 81039ec:	6004      	str	r4, [r0, #0]
 81039ee:	60c4      	str	r4, [r0, #12]
 81039f0:	f8d7 801c 	ldr.w	r8, [r7, #28]
 81039f4:	f8d8 4008 	ldr.w	r4, [r8, #8]
 81039f8:	b94c      	cbnz	r4, 8103a0e <__pow5mult+0x66>
 81039fa:	f240 2171 	movw	r1, #625	@ 0x271
 81039fe:	4638      	mov	r0, r7
 8103a00:	f7ff ff12 	bl	8103828 <__i2b>
 8103a04:	2300      	movs	r3, #0
 8103a06:	f8c8 0008 	str.w	r0, [r8, #8]
 8103a0a:	4604      	mov	r4, r0
 8103a0c:	6003      	str	r3, [r0, #0]
 8103a0e:	f04f 0900 	mov.w	r9, #0
 8103a12:	07eb      	lsls	r3, r5, #31
 8103a14:	d50a      	bpl.n	8103a2c <__pow5mult+0x84>
 8103a16:	4631      	mov	r1, r6
 8103a18:	4622      	mov	r2, r4
 8103a1a:	4638      	mov	r0, r7
 8103a1c:	f7ff ff1a 	bl	8103854 <__multiply>
 8103a20:	4631      	mov	r1, r6
 8103a22:	4680      	mov	r8, r0
 8103a24:	4638      	mov	r0, r7
 8103a26:	f7ff fe4b 	bl	81036c0 <_Bfree>
 8103a2a:	4646      	mov	r6, r8
 8103a2c:	106d      	asrs	r5, r5, #1
 8103a2e:	d00b      	beq.n	8103a48 <__pow5mult+0xa0>
 8103a30:	6820      	ldr	r0, [r4, #0]
 8103a32:	b938      	cbnz	r0, 8103a44 <__pow5mult+0x9c>
 8103a34:	4622      	mov	r2, r4
 8103a36:	4621      	mov	r1, r4
 8103a38:	4638      	mov	r0, r7
 8103a3a:	f7ff ff0b 	bl	8103854 <__multiply>
 8103a3e:	6020      	str	r0, [r4, #0]
 8103a40:	f8c0 9000 	str.w	r9, [r0]
 8103a44:	4604      	mov	r4, r0
 8103a46:	e7e4      	b.n	8103a12 <__pow5mult+0x6a>
 8103a48:	4630      	mov	r0, r6
 8103a4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8103a4e:	bf00      	nop
 8103a50:	0810462c 	.word	0x0810462c
 8103a54:	08104551 	.word	0x08104551
 8103a58:	081045d1 	.word	0x081045d1

08103a5c <__lshift>:
 8103a5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8103a60:	460c      	mov	r4, r1
 8103a62:	6849      	ldr	r1, [r1, #4]
 8103a64:	6923      	ldr	r3, [r4, #16]
 8103a66:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8103a6a:	68a3      	ldr	r3, [r4, #8]
 8103a6c:	4607      	mov	r7, r0
 8103a6e:	4691      	mov	r9, r2
 8103a70:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8103a74:	f108 0601 	add.w	r6, r8, #1
 8103a78:	42b3      	cmp	r3, r6
 8103a7a:	db0b      	blt.n	8103a94 <__lshift+0x38>
 8103a7c:	4638      	mov	r0, r7
 8103a7e:	f7ff fddf 	bl	8103640 <_Balloc>
 8103a82:	4605      	mov	r5, r0
 8103a84:	b948      	cbnz	r0, 8103a9a <__lshift+0x3e>
 8103a86:	4602      	mov	r2, r0
 8103a88:	4b28      	ldr	r3, [pc, #160]	@ (8103b2c <__lshift+0xd0>)
 8103a8a:	4829      	ldr	r0, [pc, #164]	@ (8103b30 <__lshift+0xd4>)
 8103a8c:	f44f 71ef 	mov.w	r1, #478	@ 0x1de
 8103a90:	f000 fa22 	bl	8103ed8 <__assert_func>
 8103a94:	3101      	adds	r1, #1
 8103a96:	005b      	lsls	r3, r3, #1
 8103a98:	e7ee      	b.n	8103a78 <__lshift+0x1c>
 8103a9a:	2300      	movs	r3, #0
 8103a9c:	f100 0114 	add.w	r1, r0, #20
 8103aa0:	f100 0210 	add.w	r2, r0, #16
 8103aa4:	4618      	mov	r0, r3
 8103aa6:	4553      	cmp	r3, sl
 8103aa8:	db33      	blt.n	8103b12 <__lshift+0xb6>
 8103aaa:	6920      	ldr	r0, [r4, #16]
 8103aac:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8103ab0:	f104 0314 	add.w	r3, r4, #20
 8103ab4:	f019 091f 	ands.w	r9, r9, #31
 8103ab8:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8103abc:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8103ac0:	d02b      	beq.n	8103b1a <__lshift+0xbe>
 8103ac2:	f1c9 0e20 	rsb	lr, r9, #32
 8103ac6:	468a      	mov	sl, r1
 8103ac8:	2200      	movs	r2, #0
 8103aca:	6818      	ldr	r0, [r3, #0]
 8103acc:	fa00 f009 	lsl.w	r0, r0, r9
 8103ad0:	4310      	orrs	r0, r2
 8103ad2:	f84a 0b04 	str.w	r0, [sl], #4
 8103ad6:	f853 2b04 	ldr.w	r2, [r3], #4
 8103ada:	459c      	cmp	ip, r3
 8103adc:	fa22 f20e 	lsr.w	r2, r2, lr
 8103ae0:	d8f3      	bhi.n	8103aca <__lshift+0x6e>
 8103ae2:	ebac 0304 	sub.w	r3, ip, r4
 8103ae6:	3b15      	subs	r3, #21
 8103ae8:	f023 0303 	bic.w	r3, r3, #3
 8103aec:	3304      	adds	r3, #4
 8103aee:	f104 0015 	add.w	r0, r4, #21
 8103af2:	4584      	cmp	ip, r0
 8103af4:	bf38      	it	cc
 8103af6:	2304      	movcc	r3, #4
 8103af8:	50ca      	str	r2, [r1, r3]
 8103afa:	b10a      	cbz	r2, 8103b00 <__lshift+0xa4>
 8103afc:	f108 0602 	add.w	r6, r8, #2
 8103b00:	3e01      	subs	r6, #1
 8103b02:	4638      	mov	r0, r7
 8103b04:	612e      	str	r6, [r5, #16]
 8103b06:	4621      	mov	r1, r4
 8103b08:	f7ff fdda 	bl	81036c0 <_Bfree>
 8103b0c:	4628      	mov	r0, r5
 8103b0e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8103b12:	f842 0f04 	str.w	r0, [r2, #4]!
 8103b16:	3301      	adds	r3, #1
 8103b18:	e7c5      	b.n	8103aa6 <__lshift+0x4a>
 8103b1a:	3904      	subs	r1, #4
 8103b1c:	f853 2b04 	ldr.w	r2, [r3], #4
 8103b20:	f841 2f04 	str.w	r2, [r1, #4]!
 8103b24:	459c      	cmp	ip, r3
 8103b26:	d8f9      	bhi.n	8103b1c <__lshift+0xc0>
 8103b28:	e7ea      	b.n	8103b00 <__lshift+0xa4>
 8103b2a:	bf00      	nop
 8103b2c:	081045c0 	.word	0x081045c0
 8103b30:	081045d1 	.word	0x081045d1

08103b34 <__mcmp>:
 8103b34:	690a      	ldr	r2, [r1, #16]
 8103b36:	4603      	mov	r3, r0
 8103b38:	6900      	ldr	r0, [r0, #16]
 8103b3a:	1a80      	subs	r0, r0, r2
 8103b3c:	b530      	push	{r4, r5, lr}
 8103b3e:	d10e      	bne.n	8103b5e <__mcmp+0x2a>
 8103b40:	3314      	adds	r3, #20
 8103b42:	3114      	adds	r1, #20
 8103b44:	eb03 0482 	add.w	r4, r3, r2, lsl #2
 8103b48:	eb01 0182 	add.w	r1, r1, r2, lsl #2
 8103b4c:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8103b50:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8103b54:	4295      	cmp	r5, r2
 8103b56:	d003      	beq.n	8103b60 <__mcmp+0x2c>
 8103b58:	d205      	bcs.n	8103b66 <__mcmp+0x32>
 8103b5a:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8103b5e:	bd30      	pop	{r4, r5, pc}
 8103b60:	42a3      	cmp	r3, r4
 8103b62:	d3f3      	bcc.n	8103b4c <__mcmp+0x18>
 8103b64:	e7fb      	b.n	8103b5e <__mcmp+0x2a>
 8103b66:	2001      	movs	r0, #1
 8103b68:	e7f9      	b.n	8103b5e <__mcmp+0x2a>
	...

08103b6c <__mdiff>:
 8103b6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8103b70:	4689      	mov	r9, r1
 8103b72:	4606      	mov	r6, r0
 8103b74:	4611      	mov	r1, r2
 8103b76:	4648      	mov	r0, r9
 8103b78:	4614      	mov	r4, r2
 8103b7a:	f7ff ffdb 	bl	8103b34 <__mcmp>
 8103b7e:	1e05      	subs	r5, r0, #0
 8103b80:	d112      	bne.n	8103ba8 <__mdiff+0x3c>
 8103b82:	4629      	mov	r1, r5
 8103b84:	4630      	mov	r0, r6
 8103b86:	f7ff fd5b 	bl	8103640 <_Balloc>
 8103b8a:	4602      	mov	r2, r0
 8103b8c:	b928      	cbnz	r0, 8103b9a <__mdiff+0x2e>
 8103b8e:	4b3f      	ldr	r3, [pc, #252]	@ (8103c8c <__mdiff+0x120>)
 8103b90:	f240 2137 	movw	r1, #567	@ 0x237
 8103b94:	483e      	ldr	r0, [pc, #248]	@ (8103c90 <__mdiff+0x124>)
 8103b96:	f000 f99f 	bl	8103ed8 <__assert_func>
 8103b9a:	2301      	movs	r3, #1
 8103b9c:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8103ba0:	4610      	mov	r0, r2
 8103ba2:	b003      	add	sp, #12
 8103ba4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8103ba8:	bfbc      	itt	lt
 8103baa:	464b      	movlt	r3, r9
 8103bac:	46a1      	movlt	r9, r4
 8103bae:	4630      	mov	r0, r6
 8103bb0:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8103bb4:	bfba      	itte	lt
 8103bb6:	461c      	movlt	r4, r3
 8103bb8:	2501      	movlt	r5, #1
 8103bba:	2500      	movge	r5, #0
 8103bbc:	f7ff fd40 	bl	8103640 <_Balloc>
 8103bc0:	4602      	mov	r2, r0
 8103bc2:	b918      	cbnz	r0, 8103bcc <__mdiff+0x60>
 8103bc4:	4b31      	ldr	r3, [pc, #196]	@ (8103c8c <__mdiff+0x120>)
 8103bc6:	f240 2145 	movw	r1, #581	@ 0x245
 8103bca:	e7e3      	b.n	8103b94 <__mdiff+0x28>
 8103bcc:	f8d9 7010 	ldr.w	r7, [r9, #16]
 8103bd0:	6926      	ldr	r6, [r4, #16]
 8103bd2:	60c5      	str	r5, [r0, #12]
 8103bd4:	f109 0310 	add.w	r3, r9, #16
 8103bd8:	f109 0514 	add.w	r5, r9, #20
 8103bdc:	f104 0e14 	add.w	lr, r4, #20
 8103be0:	f100 0b14 	add.w	fp, r0, #20
 8103be4:	eb05 0887 	add.w	r8, r5, r7, lsl #2
 8103be8:	eb0e 0686 	add.w	r6, lr, r6, lsl #2
 8103bec:	9301      	str	r3, [sp, #4]
 8103bee:	46d9      	mov	r9, fp
 8103bf0:	f04f 0c00 	mov.w	ip, #0
 8103bf4:	9b01      	ldr	r3, [sp, #4]
 8103bf6:	f85e 0b04 	ldr.w	r0, [lr], #4
 8103bfa:	f853 af04 	ldr.w	sl, [r3, #4]!
 8103bfe:	9301      	str	r3, [sp, #4]
 8103c00:	fa1f f38a 	uxth.w	r3, sl
 8103c04:	4619      	mov	r1, r3
 8103c06:	b283      	uxth	r3, r0
 8103c08:	1acb      	subs	r3, r1, r3
 8103c0a:	0c00      	lsrs	r0, r0, #16
 8103c0c:	4463      	add	r3, ip
 8103c0e:	ebc0 401a 	rsb	r0, r0, sl, lsr #16
 8103c12:	eb00 4023 	add.w	r0, r0, r3, asr #16
 8103c16:	b29b      	uxth	r3, r3
 8103c18:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8103c1c:	4576      	cmp	r6, lr
 8103c1e:	f849 3b04 	str.w	r3, [r9], #4
 8103c22:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8103c26:	d8e5      	bhi.n	8103bf4 <__mdiff+0x88>
 8103c28:	1b33      	subs	r3, r6, r4
 8103c2a:	3b15      	subs	r3, #21
 8103c2c:	f023 0303 	bic.w	r3, r3, #3
 8103c30:	3415      	adds	r4, #21
 8103c32:	3304      	adds	r3, #4
 8103c34:	42a6      	cmp	r6, r4
 8103c36:	bf38      	it	cc
 8103c38:	2304      	movcc	r3, #4
 8103c3a:	441d      	add	r5, r3
 8103c3c:	445b      	add	r3, fp
 8103c3e:	461e      	mov	r6, r3
 8103c40:	462c      	mov	r4, r5
 8103c42:	4544      	cmp	r4, r8
 8103c44:	d30e      	bcc.n	8103c64 <__mdiff+0xf8>
 8103c46:	f108 0103 	add.w	r1, r8, #3
 8103c4a:	1b49      	subs	r1, r1, r5
 8103c4c:	f021 0103 	bic.w	r1, r1, #3
 8103c50:	3d03      	subs	r5, #3
 8103c52:	45a8      	cmp	r8, r5
 8103c54:	bf38      	it	cc
 8103c56:	2100      	movcc	r1, #0
 8103c58:	440b      	add	r3, r1
 8103c5a:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8103c5e:	b191      	cbz	r1, 8103c86 <__mdiff+0x11a>
 8103c60:	6117      	str	r7, [r2, #16]
 8103c62:	e79d      	b.n	8103ba0 <__mdiff+0x34>
 8103c64:	f854 1b04 	ldr.w	r1, [r4], #4
 8103c68:	46e6      	mov	lr, ip
 8103c6a:	0c08      	lsrs	r0, r1, #16
 8103c6c:	fa1c fc81 	uxtah	ip, ip, r1
 8103c70:	4471      	add	r1, lr
 8103c72:	eb00 402c 	add.w	r0, r0, ip, asr #16
 8103c76:	b289      	uxth	r1, r1
 8103c78:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8103c7c:	f846 1b04 	str.w	r1, [r6], #4
 8103c80:	ea4f 4c20 	mov.w	ip, r0, asr #16
 8103c84:	e7dd      	b.n	8103c42 <__mdiff+0xd6>
 8103c86:	3f01      	subs	r7, #1
 8103c88:	e7e7      	b.n	8103c5a <__mdiff+0xee>
 8103c8a:	bf00      	nop
 8103c8c:	081045c0 	.word	0x081045c0
 8103c90:	081045d1 	.word	0x081045d1

08103c94 <__d2b>:
 8103c94:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8103c98:	460f      	mov	r7, r1
 8103c9a:	2101      	movs	r1, #1
 8103c9c:	ec59 8b10 	vmov	r8, r9, d0
 8103ca0:	4616      	mov	r6, r2
 8103ca2:	f7ff fccd 	bl	8103640 <_Balloc>
 8103ca6:	4604      	mov	r4, r0
 8103ca8:	b930      	cbnz	r0, 8103cb8 <__d2b+0x24>
 8103caa:	4602      	mov	r2, r0
 8103cac:	4b23      	ldr	r3, [pc, #140]	@ (8103d3c <__d2b+0xa8>)
 8103cae:	4824      	ldr	r0, [pc, #144]	@ (8103d40 <__d2b+0xac>)
 8103cb0:	f240 310f 	movw	r1, #783	@ 0x30f
 8103cb4:	f000 f910 	bl	8103ed8 <__assert_func>
 8103cb8:	f3c9 550a 	ubfx	r5, r9, #20, #11
 8103cbc:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8103cc0:	b10d      	cbz	r5, 8103cc6 <__d2b+0x32>
 8103cc2:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8103cc6:	9301      	str	r3, [sp, #4]
 8103cc8:	f1b8 0300 	subs.w	r3, r8, #0
 8103ccc:	d023      	beq.n	8103d16 <__d2b+0x82>
 8103cce:	4668      	mov	r0, sp
 8103cd0:	9300      	str	r3, [sp, #0]
 8103cd2:	f7ff fd7c 	bl	81037ce <__lo0bits>
 8103cd6:	e9dd 1200 	ldrd	r1, r2, [sp]
 8103cda:	b1d0      	cbz	r0, 8103d12 <__d2b+0x7e>
 8103cdc:	f1c0 0320 	rsb	r3, r0, #32
 8103ce0:	fa02 f303 	lsl.w	r3, r2, r3
 8103ce4:	430b      	orrs	r3, r1
 8103ce6:	40c2      	lsrs	r2, r0
 8103ce8:	6163      	str	r3, [r4, #20]
 8103cea:	9201      	str	r2, [sp, #4]
 8103cec:	9b01      	ldr	r3, [sp, #4]
 8103cee:	61a3      	str	r3, [r4, #24]
 8103cf0:	2b00      	cmp	r3, #0
 8103cf2:	bf0c      	ite	eq
 8103cf4:	2201      	moveq	r2, #1
 8103cf6:	2202      	movne	r2, #2
 8103cf8:	6122      	str	r2, [r4, #16]
 8103cfa:	b1a5      	cbz	r5, 8103d26 <__d2b+0x92>
 8103cfc:	f2a5 4533 	subw	r5, r5, #1075	@ 0x433
 8103d00:	4405      	add	r5, r0
 8103d02:	603d      	str	r5, [r7, #0]
 8103d04:	f1c0 0035 	rsb	r0, r0, #53	@ 0x35
 8103d08:	6030      	str	r0, [r6, #0]
 8103d0a:	4620      	mov	r0, r4
 8103d0c:	b003      	add	sp, #12
 8103d0e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8103d12:	6161      	str	r1, [r4, #20]
 8103d14:	e7ea      	b.n	8103cec <__d2b+0x58>
 8103d16:	a801      	add	r0, sp, #4
 8103d18:	f7ff fd59 	bl	81037ce <__lo0bits>
 8103d1c:	9b01      	ldr	r3, [sp, #4]
 8103d1e:	6163      	str	r3, [r4, #20]
 8103d20:	3020      	adds	r0, #32
 8103d22:	2201      	movs	r2, #1
 8103d24:	e7e8      	b.n	8103cf8 <__d2b+0x64>
 8103d26:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8103d2a:	f2a0 4032 	subw	r0, r0, #1074	@ 0x432
 8103d2e:	6038      	str	r0, [r7, #0]
 8103d30:	6918      	ldr	r0, [r3, #16]
 8103d32:	f7ff fd2d 	bl	8103790 <__hi0bits>
 8103d36:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8103d3a:	e7e5      	b.n	8103d08 <__d2b+0x74>
 8103d3c:	081045c0 	.word	0x081045c0
 8103d40:	081045d1 	.word	0x081045d1

08103d44 <__sflush_r>:
 8103d44:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8103d48:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8103d4c:	0716      	lsls	r6, r2, #28
 8103d4e:	4605      	mov	r5, r0
 8103d50:	460c      	mov	r4, r1
 8103d52:	d454      	bmi.n	8103dfe <__sflush_r+0xba>
 8103d54:	684b      	ldr	r3, [r1, #4]
 8103d56:	2b00      	cmp	r3, #0
 8103d58:	dc02      	bgt.n	8103d60 <__sflush_r+0x1c>
 8103d5a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8103d5c:	2b00      	cmp	r3, #0
 8103d5e:	dd48      	ble.n	8103df2 <__sflush_r+0xae>
 8103d60:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8103d62:	2e00      	cmp	r6, #0
 8103d64:	d045      	beq.n	8103df2 <__sflush_r+0xae>
 8103d66:	2300      	movs	r3, #0
 8103d68:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8103d6c:	682f      	ldr	r7, [r5, #0]
 8103d6e:	6a21      	ldr	r1, [r4, #32]
 8103d70:	602b      	str	r3, [r5, #0]
 8103d72:	d030      	beq.n	8103dd6 <__sflush_r+0x92>
 8103d74:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8103d76:	89a3      	ldrh	r3, [r4, #12]
 8103d78:	0759      	lsls	r1, r3, #29
 8103d7a:	d505      	bpl.n	8103d88 <__sflush_r+0x44>
 8103d7c:	6863      	ldr	r3, [r4, #4]
 8103d7e:	1ad2      	subs	r2, r2, r3
 8103d80:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8103d82:	b10b      	cbz	r3, 8103d88 <__sflush_r+0x44>
 8103d84:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8103d86:	1ad2      	subs	r2, r2, r3
 8103d88:	2300      	movs	r3, #0
 8103d8a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8103d8c:	6a21      	ldr	r1, [r4, #32]
 8103d8e:	4628      	mov	r0, r5
 8103d90:	47b0      	blx	r6
 8103d92:	1c43      	adds	r3, r0, #1
 8103d94:	89a3      	ldrh	r3, [r4, #12]
 8103d96:	d106      	bne.n	8103da6 <__sflush_r+0x62>
 8103d98:	6829      	ldr	r1, [r5, #0]
 8103d9a:	291d      	cmp	r1, #29
 8103d9c:	d82b      	bhi.n	8103df6 <__sflush_r+0xb2>
 8103d9e:	4a2a      	ldr	r2, [pc, #168]	@ (8103e48 <__sflush_r+0x104>)
 8103da0:	410a      	asrs	r2, r1
 8103da2:	07d6      	lsls	r6, r2, #31
 8103da4:	d427      	bmi.n	8103df6 <__sflush_r+0xb2>
 8103da6:	2200      	movs	r2, #0
 8103da8:	6062      	str	r2, [r4, #4]
 8103daa:	04d9      	lsls	r1, r3, #19
 8103dac:	6922      	ldr	r2, [r4, #16]
 8103dae:	6022      	str	r2, [r4, #0]
 8103db0:	d504      	bpl.n	8103dbc <__sflush_r+0x78>
 8103db2:	1c42      	adds	r2, r0, #1
 8103db4:	d101      	bne.n	8103dba <__sflush_r+0x76>
 8103db6:	682b      	ldr	r3, [r5, #0]
 8103db8:	b903      	cbnz	r3, 8103dbc <__sflush_r+0x78>
 8103dba:	6560      	str	r0, [r4, #84]	@ 0x54
 8103dbc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8103dbe:	602f      	str	r7, [r5, #0]
 8103dc0:	b1b9      	cbz	r1, 8103df2 <__sflush_r+0xae>
 8103dc2:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8103dc6:	4299      	cmp	r1, r3
 8103dc8:	d002      	beq.n	8103dd0 <__sflush_r+0x8c>
 8103dca:	4628      	mov	r0, r5
 8103dcc:	f7ff fb38 	bl	8103440 <_free_r>
 8103dd0:	2300      	movs	r3, #0
 8103dd2:	6363      	str	r3, [r4, #52]	@ 0x34
 8103dd4:	e00d      	b.n	8103df2 <__sflush_r+0xae>
 8103dd6:	2301      	movs	r3, #1
 8103dd8:	4628      	mov	r0, r5
 8103dda:	47b0      	blx	r6
 8103ddc:	4602      	mov	r2, r0
 8103dde:	1c50      	adds	r0, r2, #1
 8103de0:	d1c9      	bne.n	8103d76 <__sflush_r+0x32>
 8103de2:	682b      	ldr	r3, [r5, #0]
 8103de4:	2b00      	cmp	r3, #0
 8103de6:	d0c6      	beq.n	8103d76 <__sflush_r+0x32>
 8103de8:	2b1d      	cmp	r3, #29
 8103dea:	d001      	beq.n	8103df0 <__sflush_r+0xac>
 8103dec:	2b16      	cmp	r3, #22
 8103dee:	d11e      	bne.n	8103e2e <__sflush_r+0xea>
 8103df0:	602f      	str	r7, [r5, #0]
 8103df2:	2000      	movs	r0, #0
 8103df4:	e022      	b.n	8103e3c <__sflush_r+0xf8>
 8103df6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8103dfa:	b21b      	sxth	r3, r3
 8103dfc:	e01b      	b.n	8103e36 <__sflush_r+0xf2>
 8103dfe:	690f      	ldr	r7, [r1, #16]
 8103e00:	2f00      	cmp	r7, #0
 8103e02:	d0f6      	beq.n	8103df2 <__sflush_r+0xae>
 8103e04:	0793      	lsls	r3, r2, #30
 8103e06:	680e      	ldr	r6, [r1, #0]
 8103e08:	bf08      	it	eq
 8103e0a:	694b      	ldreq	r3, [r1, #20]
 8103e0c:	600f      	str	r7, [r1, #0]
 8103e0e:	bf18      	it	ne
 8103e10:	2300      	movne	r3, #0
 8103e12:	eba6 0807 	sub.w	r8, r6, r7
 8103e16:	608b      	str	r3, [r1, #8]
 8103e18:	f1b8 0f00 	cmp.w	r8, #0
 8103e1c:	dde9      	ble.n	8103df2 <__sflush_r+0xae>
 8103e1e:	6a21      	ldr	r1, [r4, #32]
 8103e20:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8103e22:	4643      	mov	r3, r8
 8103e24:	463a      	mov	r2, r7
 8103e26:	4628      	mov	r0, r5
 8103e28:	47b0      	blx	r6
 8103e2a:	2800      	cmp	r0, #0
 8103e2c:	dc08      	bgt.n	8103e40 <__sflush_r+0xfc>
 8103e2e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103e32:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8103e36:	81a3      	strh	r3, [r4, #12]
 8103e38:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8103e3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8103e40:	4407      	add	r7, r0
 8103e42:	eba8 0800 	sub.w	r8, r8, r0
 8103e46:	e7e7      	b.n	8103e18 <__sflush_r+0xd4>
 8103e48:	dfbffffe 	.word	0xdfbffffe

08103e4c <_fflush_r>:
 8103e4c:	b538      	push	{r3, r4, r5, lr}
 8103e4e:	690b      	ldr	r3, [r1, #16]
 8103e50:	4605      	mov	r5, r0
 8103e52:	460c      	mov	r4, r1
 8103e54:	b913      	cbnz	r3, 8103e5c <_fflush_r+0x10>
 8103e56:	2500      	movs	r5, #0
 8103e58:	4628      	mov	r0, r5
 8103e5a:	bd38      	pop	{r3, r4, r5, pc}
 8103e5c:	b118      	cbz	r0, 8103e66 <_fflush_r+0x1a>
 8103e5e:	6a03      	ldr	r3, [r0, #32]
 8103e60:	b90b      	cbnz	r3, 8103e66 <_fflush_r+0x1a>
 8103e62:	f7fe fba5 	bl	81025b0 <__sinit>
 8103e66:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8103e6a:	2b00      	cmp	r3, #0
 8103e6c:	d0f3      	beq.n	8103e56 <_fflush_r+0xa>
 8103e6e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8103e70:	07d0      	lsls	r0, r2, #31
 8103e72:	d404      	bmi.n	8103e7e <_fflush_r+0x32>
 8103e74:	0599      	lsls	r1, r3, #22
 8103e76:	d402      	bmi.n	8103e7e <_fflush_r+0x32>
 8103e78:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8103e7a:	f7fe fc90 	bl	810279e <__retarget_lock_acquire_recursive>
 8103e7e:	4628      	mov	r0, r5
 8103e80:	4621      	mov	r1, r4
 8103e82:	f7ff ff5f 	bl	8103d44 <__sflush_r>
 8103e86:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8103e88:	07da      	lsls	r2, r3, #31
 8103e8a:	4605      	mov	r5, r0
 8103e8c:	d4e4      	bmi.n	8103e58 <_fflush_r+0xc>
 8103e8e:	89a3      	ldrh	r3, [r4, #12]
 8103e90:	059b      	lsls	r3, r3, #22
 8103e92:	d4e1      	bmi.n	8103e58 <_fflush_r+0xc>
 8103e94:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8103e96:	f7fe fc83 	bl	81027a0 <__retarget_lock_release_recursive>
 8103e9a:	e7dd      	b.n	8103e58 <_fflush_r+0xc>

08103e9c <_sbrk_r>:
 8103e9c:	b538      	push	{r3, r4, r5, lr}
 8103e9e:	4d06      	ldr	r5, [pc, #24]	@ (8103eb8 <_sbrk_r+0x1c>)
 8103ea0:	2300      	movs	r3, #0
 8103ea2:	4604      	mov	r4, r0
 8103ea4:	4608      	mov	r0, r1
 8103ea6:	602b      	str	r3, [r5, #0]
 8103ea8:	f7fd f876 	bl	8100f98 <_sbrk>
 8103eac:	1c43      	adds	r3, r0, #1
 8103eae:	d102      	bne.n	8103eb6 <_sbrk_r+0x1a>
 8103eb0:	682b      	ldr	r3, [r5, #0]
 8103eb2:	b103      	cbz	r3, 8103eb6 <_sbrk_r+0x1a>
 8103eb4:	6023      	str	r3, [r4, #0]
 8103eb6:	bd38      	pop	{r3, r4, r5, pc}
 8103eb8:	10000338 	.word	0x10000338

08103ebc <memcpy>:
 8103ebc:	440a      	add	r2, r1
 8103ebe:	4291      	cmp	r1, r2
 8103ec0:	f100 33ff 	add.w	r3, r0, #4294967295	@ 0xffffffff
 8103ec4:	d100      	bne.n	8103ec8 <memcpy+0xc>
 8103ec6:	4770      	bx	lr
 8103ec8:	b510      	push	{r4, lr}
 8103eca:	f811 4b01 	ldrb.w	r4, [r1], #1
 8103ece:	f803 4f01 	strb.w	r4, [r3, #1]!
 8103ed2:	4291      	cmp	r1, r2
 8103ed4:	d1f9      	bne.n	8103eca <memcpy+0xe>
 8103ed6:	bd10      	pop	{r4, pc}

08103ed8 <__assert_func>:
 8103ed8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8103eda:	4614      	mov	r4, r2
 8103edc:	461a      	mov	r2, r3
 8103ede:	4b09      	ldr	r3, [pc, #36]	@ (8103f04 <__assert_func+0x2c>)
 8103ee0:	681b      	ldr	r3, [r3, #0]
 8103ee2:	4605      	mov	r5, r0
 8103ee4:	68d8      	ldr	r0, [r3, #12]
 8103ee6:	b954      	cbnz	r4, 8103efe <__assert_func+0x26>
 8103ee8:	4b07      	ldr	r3, [pc, #28]	@ (8103f08 <__assert_func+0x30>)
 8103eea:	461c      	mov	r4, r3
 8103eec:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8103ef0:	9100      	str	r1, [sp, #0]
 8103ef2:	462b      	mov	r3, r5
 8103ef4:	4905      	ldr	r1, [pc, #20]	@ (8103f0c <__assert_func+0x34>)
 8103ef6:	f000 f841 	bl	8103f7c <fiprintf>
 8103efa:	f000 f851 	bl	8103fa0 <abort>
 8103efe:	4b04      	ldr	r3, [pc, #16]	@ (8103f10 <__assert_func+0x38>)
 8103f00:	e7f4      	b.n	8103eec <__assert_func+0x14>
 8103f02:	bf00      	nop
 8103f04:	1000001c 	.word	0x1000001c
 8103f08:	0810476d 	.word	0x0810476d
 8103f0c:	0810473f 	.word	0x0810473f
 8103f10:	08104732 	.word	0x08104732

08103f14 <_calloc_r>:
 8103f14:	b570      	push	{r4, r5, r6, lr}
 8103f16:	fba1 5402 	umull	r5, r4, r1, r2
 8103f1a:	b93c      	cbnz	r4, 8103f2c <_calloc_r+0x18>
 8103f1c:	4629      	mov	r1, r5
 8103f1e:	f7ff fb03 	bl	8103528 <_malloc_r>
 8103f22:	4606      	mov	r6, r0
 8103f24:	b928      	cbnz	r0, 8103f32 <_calloc_r+0x1e>
 8103f26:	2600      	movs	r6, #0
 8103f28:	4630      	mov	r0, r6
 8103f2a:	bd70      	pop	{r4, r5, r6, pc}
 8103f2c:	220c      	movs	r2, #12
 8103f2e:	6002      	str	r2, [r0, #0]
 8103f30:	e7f9      	b.n	8103f26 <_calloc_r+0x12>
 8103f32:	462a      	mov	r2, r5
 8103f34:	4621      	mov	r1, r4
 8103f36:	f7fe fbb4 	bl	81026a2 <memset>
 8103f3a:	e7f5      	b.n	8103f28 <_calloc_r+0x14>

08103f3c <__ascii_mbtowc>:
 8103f3c:	b082      	sub	sp, #8
 8103f3e:	b901      	cbnz	r1, 8103f42 <__ascii_mbtowc+0x6>
 8103f40:	a901      	add	r1, sp, #4
 8103f42:	b142      	cbz	r2, 8103f56 <__ascii_mbtowc+0x1a>
 8103f44:	b14b      	cbz	r3, 8103f5a <__ascii_mbtowc+0x1e>
 8103f46:	7813      	ldrb	r3, [r2, #0]
 8103f48:	600b      	str	r3, [r1, #0]
 8103f4a:	7812      	ldrb	r2, [r2, #0]
 8103f4c:	1e10      	subs	r0, r2, #0
 8103f4e:	bf18      	it	ne
 8103f50:	2001      	movne	r0, #1
 8103f52:	b002      	add	sp, #8
 8103f54:	4770      	bx	lr
 8103f56:	4610      	mov	r0, r2
 8103f58:	e7fb      	b.n	8103f52 <__ascii_mbtowc+0x16>
 8103f5a:	f06f 0001 	mvn.w	r0, #1
 8103f5e:	e7f8      	b.n	8103f52 <__ascii_mbtowc+0x16>

08103f60 <__ascii_wctomb>:
 8103f60:	4603      	mov	r3, r0
 8103f62:	4608      	mov	r0, r1
 8103f64:	b141      	cbz	r1, 8103f78 <__ascii_wctomb+0x18>
 8103f66:	2aff      	cmp	r2, #255	@ 0xff
 8103f68:	d904      	bls.n	8103f74 <__ascii_wctomb+0x14>
 8103f6a:	228a      	movs	r2, #138	@ 0x8a
 8103f6c:	601a      	str	r2, [r3, #0]
 8103f6e:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8103f72:	4770      	bx	lr
 8103f74:	700a      	strb	r2, [r1, #0]
 8103f76:	2001      	movs	r0, #1
 8103f78:	4770      	bx	lr
	...

08103f7c <fiprintf>:
 8103f7c:	b40e      	push	{r1, r2, r3}
 8103f7e:	b503      	push	{r0, r1, lr}
 8103f80:	4601      	mov	r1, r0
 8103f82:	ab03      	add	r3, sp, #12
 8103f84:	4805      	ldr	r0, [pc, #20]	@ (8103f9c <fiprintf+0x20>)
 8103f86:	f853 2b04 	ldr.w	r2, [r3], #4
 8103f8a:	6800      	ldr	r0, [r0, #0]
 8103f8c:	9301      	str	r3, [sp, #4]
 8103f8e:	f000 f837 	bl	8104000 <_vfiprintf_r>
 8103f92:	b002      	add	sp, #8
 8103f94:	f85d eb04 	ldr.w	lr, [sp], #4
 8103f98:	b003      	add	sp, #12
 8103f9a:	4770      	bx	lr
 8103f9c:	1000001c 	.word	0x1000001c

08103fa0 <abort>:
 8103fa0:	b508      	push	{r3, lr}
 8103fa2:	2006      	movs	r0, #6
 8103fa4:	f000 fa00 	bl	81043a8 <raise>
 8103fa8:	2001      	movs	r0, #1
 8103faa:	f7fc ff7c 	bl	8100ea6 <_exit>

08103fae <__sfputc_r>:
 8103fae:	6893      	ldr	r3, [r2, #8]
 8103fb0:	3b01      	subs	r3, #1
 8103fb2:	2b00      	cmp	r3, #0
 8103fb4:	b410      	push	{r4}
 8103fb6:	6093      	str	r3, [r2, #8]
 8103fb8:	da08      	bge.n	8103fcc <__sfputc_r+0x1e>
 8103fba:	6994      	ldr	r4, [r2, #24]
 8103fbc:	42a3      	cmp	r3, r4
 8103fbe:	db01      	blt.n	8103fc4 <__sfputc_r+0x16>
 8103fc0:	290a      	cmp	r1, #10
 8103fc2:	d103      	bne.n	8103fcc <__sfputc_r+0x1e>
 8103fc4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8103fc8:	f000 b932 	b.w	8104230 <__swbuf_r>
 8103fcc:	6813      	ldr	r3, [r2, #0]
 8103fce:	1c58      	adds	r0, r3, #1
 8103fd0:	6010      	str	r0, [r2, #0]
 8103fd2:	7019      	strb	r1, [r3, #0]
 8103fd4:	4608      	mov	r0, r1
 8103fd6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8103fda:	4770      	bx	lr

08103fdc <__sfputs_r>:
 8103fdc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8103fde:	4606      	mov	r6, r0
 8103fe0:	460f      	mov	r7, r1
 8103fe2:	4614      	mov	r4, r2
 8103fe4:	18d5      	adds	r5, r2, r3
 8103fe6:	42ac      	cmp	r4, r5
 8103fe8:	d101      	bne.n	8103fee <__sfputs_r+0x12>
 8103fea:	2000      	movs	r0, #0
 8103fec:	e007      	b.n	8103ffe <__sfputs_r+0x22>
 8103fee:	f814 1b01 	ldrb.w	r1, [r4], #1
 8103ff2:	463a      	mov	r2, r7
 8103ff4:	4630      	mov	r0, r6
 8103ff6:	f7ff ffda 	bl	8103fae <__sfputc_r>
 8103ffa:	1c43      	adds	r3, r0, #1
 8103ffc:	d1f3      	bne.n	8103fe6 <__sfputs_r+0xa>
 8103ffe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08104000 <_vfiprintf_r>:
 8104000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8104004:	460d      	mov	r5, r1
 8104006:	b09d      	sub	sp, #116	@ 0x74
 8104008:	4614      	mov	r4, r2
 810400a:	4698      	mov	r8, r3
 810400c:	4606      	mov	r6, r0
 810400e:	b118      	cbz	r0, 8104018 <_vfiprintf_r+0x18>
 8104010:	6a03      	ldr	r3, [r0, #32]
 8104012:	b90b      	cbnz	r3, 8104018 <_vfiprintf_r+0x18>
 8104014:	f7fe facc 	bl	81025b0 <__sinit>
 8104018:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 810401a:	07d9      	lsls	r1, r3, #31
 810401c:	d405      	bmi.n	810402a <_vfiprintf_r+0x2a>
 810401e:	89ab      	ldrh	r3, [r5, #12]
 8104020:	059a      	lsls	r2, r3, #22
 8104022:	d402      	bmi.n	810402a <_vfiprintf_r+0x2a>
 8104024:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8104026:	f7fe fbba 	bl	810279e <__retarget_lock_acquire_recursive>
 810402a:	89ab      	ldrh	r3, [r5, #12]
 810402c:	071b      	lsls	r3, r3, #28
 810402e:	d501      	bpl.n	8104034 <_vfiprintf_r+0x34>
 8104030:	692b      	ldr	r3, [r5, #16]
 8104032:	b99b      	cbnz	r3, 810405c <_vfiprintf_r+0x5c>
 8104034:	4629      	mov	r1, r5
 8104036:	4630      	mov	r0, r6
 8104038:	f000 f938 	bl	81042ac <__swsetup_r>
 810403c:	b170      	cbz	r0, 810405c <_vfiprintf_r+0x5c>
 810403e:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8104040:	07dc      	lsls	r4, r3, #31
 8104042:	d504      	bpl.n	810404e <_vfiprintf_r+0x4e>
 8104044:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 8104048:	b01d      	add	sp, #116	@ 0x74
 810404a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 810404e:	89ab      	ldrh	r3, [r5, #12]
 8104050:	0598      	lsls	r0, r3, #22
 8104052:	d4f7      	bmi.n	8104044 <_vfiprintf_r+0x44>
 8104054:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8104056:	f7fe fba3 	bl	81027a0 <__retarget_lock_release_recursive>
 810405a:	e7f3      	b.n	8104044 <_vfiprintf_r+0x44>
 810405c:	2300      	movs	r3, #0
 810405e:	9309      	str	r3, [sp, #36]	@ 0x24
 8104060:	2320      	movs	r3, #32
 8104062:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8104066:	f8cd 800c 	str.w	r8, [sp, #12]
 810406a:	2330      	movs	r3, #48	@ 0x30
 810406c:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 810421c <_vfiprintf_r+0x21c>
 8104070:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8104074:	f04f 0901 	mov.w	r9, #1
 8104078:	4623      	mov	r3, r4
 810407a:	469a      	mov	sl, r3
 810407c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8104080:	b10a      	cbz	r2, 8104086 <_vfiprintf_r+0x86>
 8104082:	2a25      	cmp	r2, #37	@ 0x25
 8104084:	d1f9      	bne.n	810407a <_vfiprintf_r+0x7a>
 8104086:	ebba 0b04 	subs.w	fp, sl, r4
 810408a:	d00b      	beq.n	81040a4 <_vfiprintf_r+0xa4>
 810408c:	465b      	mov	r3, fp
 810408e:	4622      	mov	r2, r4
 8104090:	4629      	mov	r1, r5
 8104092:	4630      	mov	r0, r6
 8104094:	f7ff ffa2 	bl	8103fdc <__sfputs_r>
 8104098:	3001      	adds	r0, #1
 810409a:	f000 80a7 	beq.w	81041ec <_vfiprintf_r+0x1ec>
 810409e:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 81040a0:	445a      	add	r2, fp
 81040a2:	9209      	str	r2, [sp, #36]	@ 0x24
 81040a4:	f89a 3000 	ldrb.w	r3, [sl]
 81040a8:	2b00      	cmp	r3, #0
 81040aa:	f000 809f 	beq.w	81041ec <_vfiprintf_r+0x1ec>
 81040ae:	2300      	movs	r3, #0
 81040b0:	f04f 32ff 	mov.w	r2, #4294967295	@ 0xffffffff
 81040b4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 81040b8:	f10a 0a01 	add.w	sl, sl, #1
 81040bc:	9304      	str	r3, [sp, #16]
 81040be:	9307      	str	r3, [sp, #28]
 81040c0:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 81040c4:	931a      	str	r3, [sp, #104]	@ 0x68
 81040c6:	4654      	mov	r4, sl
 81040c8:	2205      	movs	r2, #5
 81040ca:	f814 1b01 	ldrb.w	r1, [r4], #1
 81040ce:	4853      	ldr	r0, [pc, #332]	@ (810421c <_vfiprintf_r+0x21c>)
 81040d0:	f7fc f906 	bl	81002e0 <memchr>
 81040d4:	9a04      	ldr	r2, [sp, #16]
 81040d6:	b9d8      	cbnz	r0, 8104110 <_vfiprintf_r+0x110>
 81040d8:	06d1      	lsls	r1, r2, #27
 81040da:	bf44      	itt	mi
 81040dc:	2320      	movmi	r3, #32
 81040de:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 81040e2:	0713      	lsls	r3, r2, #28
 81040e4:	bf44      	itt	mi
 81040e6:	232b      	movmi	r3, #43	@ 0x2b
 81040e8:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 81040ec:	f89a 3000 	ldrb.w	r3, [sl]
 81040f0:	2b2a      	cmp	r3, #42	@ 0x2a
 81040f2:	d015      	beq.n	8104120 <_vfiprintf_r+0x120>
 81040f4:	9a07      	ldr	r2, [sp, #28]
 81040f6:	4654      	mov	r4, sl
 81040f8:	2000      	movs	r0, #0
 81040fa:	f04f 0c0a 	mov.w	ip, #10
 81040fe:	4621      	mov	r1, r4
 8104100:	f811 3b01 	ldrb.w	r3, [r1], #1
 8104104:	3b30      	subs	r3, #48	@ 0x30
 8104106:	2b09      	cmp	r3, #9
 8104108:	d94b      	bls.n	81041a2 <_vfiprintf_r+0x1a2>
 810410a:	b1b0      	cbz	r0, 810413a <_vfiprintf_r+0x13a>
 810410c:	9207      	str	r2, [sp, #28]
 810410e:	e014      	b.n	810413a <_vfiprintf_r+0x13a>
 8104110:	eba0 0308 	sub.w	r3, r0, r8
 8104114:	fa09 f303 	lsl.w	r3, r9, r3
 8104118:	4313      	orrs	r3, r2
 810411a:	9304      	str	r3, [sp, #16]
 810411c:	46a2      	mov	sl, r4
 810411e:	e7d2      	b.n	81040c6 <_vfiprintf_r+0xc6>
 8104120:	9b03      	ldr	r3, [sp, #12]
 8104122:	1d19      	adds	r1, r3, #4
 8104124:	681b      	ldr	r3, [r3, #0]
 8104126:	9103      	str	r1, [sp, #12]
 8104128:	2b00      	cmp	r3, #0
 810412a:	bfbb      	ittet	lt
 810412c:	425b      	neglt	r3, r3
 810412e:	f042 0202 	orrlt.w	r2, r2, #2
 8104132:	9307      	strge	r3, [sp, #28]
 8104134:	9307      	strlt	r3, [sp, #28]
 8104136:	bfb8      	it	lt
 8104138:	9204      	strlt	r2, [sp, #16]
 810413a:	7823      	ldrb	r3, [r4, #0]
 810413c:	2b2e      	cmp	r3, #46	@ 0x2e
 810413e:	d10a      	bne.n	8104156 <_vfiprintf_r+0x156>
 8104140:	7863      	ldrb	r3, [r4, #1]
 8104142:	2b2a      	cmp	r3, #42	@ 0x2a
 8104144:	d132      	bne.n	81041ac <_vfiprintf_r+0x1ac>
 8104146:	9b03      	ldr	r3, [sp, #12]
 8104148:	1d1a      	adds	r2, r3, #4
 810414a:	681b      	ldr	r3, [r3, #0]
 810414c:	9203      	str	r2, [sp, #12]
 810414e:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8104152:	3402      	adds	r4, #2
 8104154:	9305      	str	r3, [sp, #20]
 8104156:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 810422c <_vfiprintf_r+0x22c>
 810415a:	7821      	ldrb	r1, [r4, #0]
 810415c:	2203      	movs	r2, #3
 810415e:	4650      	mov	r0, sl
 8104160:	f7fc f8be 	bl	81002e0 <memchr>
 8104164:	b138      	cbz	r0, 8104176 <_vfiprintf_r+0x176>
 8104166:	9b04      	ldr	r3, [sp, #16]
 8104168:	eba0 000a 	sub.w	r0, r0, sl
 810416c:	2240      	movs	r2, #64	@ 0x40
 810416e:	4082      	lsls	r2, r0
 8104170:	4313      	orrs	r3, r2
 8104172:	3401      	adds	r4, #1
 8104174:	9304      	str	r3, [sp, #16]
 8104176:	f814 1b01 	ldrb.w	r1, [r4], #1
 810417a:	4829      	ldr	r0, [pc, #164]	@ (8104220 <_vfiprintf_r+0x220>)
 810417c:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8104180:	2206      	movs	r2, #6
 8104182:	f7fc f8ad 	bl	81002e0 <memchr>
 8104186:	2800      	cmp	r0, #0
 8104188:	d03f      	beq.n	810420a <_vfiprintf_r+0x20a>
 810418a:	4b26      	ldr	r3, [pc, #152]	@ (8104224 <_vfiprintf_r+0x224>)
 810418c:	bb1b      	cbnz	r3, 81041d6 <_vfiprintf_r+0x1d6>
 810418e:	9b03      	ldr	r3, [sp, #12]
 8104190:	3307      	adds	r3, #7
 8104192:	f023 0307 	bic.w	r3, r3, #7
 8104196:	3308      	adds	r3, #8
 8104198:	9303      	str	r3, [sp, #12]
 810419a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 810419c:	443b      	add	r3, r7
 810419e:	9309      	str	r3, [sp, #36]	@ 0x24
 81041a0:	e76a      	b.n	8104078 <_vfiprintf_r+0x78>
 81041a2:	fb0c 3202 	mla	r2, ip, r2, r3
 81041a6:	460c      	mov	r4, r1
 81041a8:	2001      	movs	r0, #1
 81041aa:	e7a8      	b.n	81040fe <_vfiprintf_r+0xfe>
 81041ac:	2300      	movs	r3, #0
 81041ae:	3401      	adds	r4, #1
 81041b0:	9305      	str	r3, [sp, #20]
 81041b2:	4619      	mov	r1, r3
 81041b4:	f04f 0c0a 	mov.w	ip, #10
 81041b8:	4620      	mov	r0, r4
 81041ba:	f810 2b01 	ldrb.w	r2, [r0], #1
 81041be:	3a30      	subs	r2, #48	@ 0x30
 81041c0:	2a09      	cmp	r2, #9
 81041c2:	d903      	bls.n	81041cc <_vfiprintf_r+0x1cc>
 81041c4:	2b00      	cmp	r3, #0
 81041c6:	d0c6      	beq.n	8104156 <_vfiprintf_r+0x156>
 81041c8:	9105      	str	r1, [sp, #20]
 81041ca:	e7c4      	b.n	8104156 <_vfiprintf_r+0x156>
 81041cc:	fb0c 2101 	mla	r1, ip, r1, r2
 81041d0:	4604      	mov	r4, r0
 81041d2:	2301      	movs	r3, #1
 81041d4:	e7f0      	b.n	81041b8 <_vfiprintf_r+0x1b8>
 81041d6:	ab03      	add	r3, sp, #12
 81041d8:	9300      	str	r3, [sp, #0]
 81041da:	462a      	mov	r2, r5
 81041dc:	4b12      	ldr	r3, [pc, #72]	@ (8104228 <_vfiprintf_r+0x228>)
 81041de:	a904      	add	r1, sp, #16
 81041e0:	4630      	mov	r0, r6
 81041e2:	f7fd fda1 	bl	8101d28 <_printf_float>
 81041e6:	4607      	mov	r7, r0
 81041e8:	1c78      	adds	r0, r7, #1
 81041ea:	d1d6      	bne.n	810419a <_vfiprintf_r+0x19a>
 81041ec:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 81041ee:	07d9      	lsls	r1, r3, #31
 81041f0:	d405      	bmi.n	81041fe <_vfiprintf_r+0x1fe>
 81041f2:	89ab      	ldrh	r3, [r5, #12]
 81041f4:	059a      	lsls	r2, r3, #22
 81041f6:	d402      	bmi.n	81041fe <_vfiprintf_r+0x1fe>
 81041f8:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 81041fa:	f7fe fad1 	bl	81027a0 <__retarget_lock_release_recursive>
 81041fe:	89ab      	ldrh	r3, [r5, #12]
 8104200:	065b      	lsls	r3, r3, #25
 8104202:	f53f af1f 	bmi.w	8104044 <_vfiprintf_r+0x44>
 8104206:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8104208:	e71e      	b.n	8104048 <_vfiprintf_r+0x48>
 810420a:	ab03      	add	r3, sp, #12
 810420c:	9300      	str	r3, [sp, #0]
 810420e:	462a      	mov	r2, r5
 8104210:	4b05      	ldr	r3, [pc, #20]	@ (8104228 <_vfiprintf_r+0x228>)
 8104212:	a904      	add	r1, sp, #16
 8104214:	4630      	mov	r0, r6
 8104216:	f7fe f81f 	bl	8102258 <_printf_i>
 810421a:	e7e4      	b.n	81041e6 <_vfiprintf_r+0x1e6>
 810421c:	0810486f 	.word	0x0810486f
 8104220:	08104879 	.word	0x08104879
 8104224:	08101d29 	.word	0x08101d29
 8104228:	08103fdd 	.word	0x08103fdd
 810422c:	08104875 	.word	0x08104875

08104230 <__swbuf_r>:
 8104230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8104232:	460e      	mov	r6, r1
 8104234:	4614      	mov	r4, r2
 8104236:	4605      	mov	r5, r0
 8104238:	b118      	cbz	r0, 8104242 <__swbuf_r+0x12>
 810423a:	6a03      	ldr	r3, [r0, #32]
 810423c:	b90b      	cbnz	r3, 8104242 <__swbuf_r+0x12>
 810423e:	f7fe f9b7 	bl	81025b0 <__sinit>
 8104242:	69a3      	ldr	r3, [r4, #24]
 8104244:	60a3      	str	r3, [r4, #8]
 8104246:	89a3      	ldrh	r3, [r4, #12]
 8104248:	071a      	lsls	r2, r3, #28
 810424a:	d501      	bpl.n	8104250 <__swbuf_r+0x20>
 810424c:	6923      	ldr	r3, [r4, #16]
 810424e:	b943      	cbnz	r3, 8104262 <__swbuf_r+0x32>
 8104250:	4621      	mov	r1, r4
 8104252:	4628      	mov	r0, r5
 8104254:	f000 f82a 	bl	81042ac <__swsetup_r>
 8104258:	b118      	cbz	r0, 8104262 <__swbuf_r+0x32>
 810425a:	f04f 37ff 	mov.w	r7, #4294967295	@ 0xffffffff
 810425e:	4638      	mov	r0, r7
 8104260:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8104262:	6823      	ldr	r3, [r4, #0]
 8104264:	6922      	ldr	r2, [r4, #16]
 8104266:	1a98      	subs	r0, r3, r2
 8104268:	6963      	ldr	r3, [r4, #20]
 810426a:	b2f6      	uxtb	r6, r6
 810426c:	4283      	cmp	r3, r0
 810426e:	4637      	mov	r7, r6
 8104270:	dc05      	bgt.n	810427e <__swbuf_r+0x4e>
 8104272:	4621      	mov	r1, r4
 8104274:	4628      	mov	r0, r5
 8104276:	f7ff fde9 	bl	8103e4c <_fflush_r>
 810427a:	2800      	cmp	r0, #0
 810427c:	d1ed      	bne.n	810425a <__swbuf_r+0x2a>
 810427e:	68a3      	ldr	r3, [r4, #8]
 8104280:	3b01      	subs	r3, #1
 8104282:	60a3      	str	r3, [r4, #8]
 8104284:	6823      	ldr	r3, [r4, #0]
 8104286:	1c5a      	adds	r2, r3, #1
 8104288:	6022      	str	r2, [r4, #0]
 810428a:	701e      	strb	r6, [r3, #0]
 810428c:	6962      	ldr	r2, [r4, #20]
 810428e:	1c43      	adds	r3, r0, #1
 8104290:	429a      	cmp	r2, r3
 8104292:	d004      	beq.n	810429e <__swbuf_r+0x6e>
 8104294:	89a3      	ldrh	r3, [r4, #12]
 8104296:	07db      	lsls	r3, r3, #31
 8104298:	d5e1      	bpl.n	810425e <__swbuf_r+0x2e>
 810429a:	2e0a      	cmp	r6, #10
 810429c:	d1df      	bne.n	810425e <__swbuf_r+0x2e>
 810429e:	4621      	mov	r1, r4
 81042a0:	4628      	mov	r0, r5
 81042a2:	f7ff fdd3 	bl	8103e4c <_fflush_r>
 81042a6:	2800      	cmp	r0, #0
 81042a8:	d0d9      	beq.n	810425e <__swbuf_r+0x2e>
 81042aa:	e7d6      	b.n	810425a <__swbuf_r+0x2a>

081042ac <__swsetup_r>:
 81042ac:	b538      	push	{r3, r4, r5, lr}
 81042ae:	4b29      	ldr	r3, [pc, #164]	@ (8104354 <__swsetup_r+0xa8>)
 81042b0:	4605      	mov	r5, r0
 81042b2:	6818      	ldr	r0, [r3, #0]
 81042b4:	460c      	mov	r4, r1
 81042b6:	b118      	cbz	r0, 81042c0 <__swsetup_r+0x14>
 81042b8:	6a03      	ldr	r3, [r0, #32]
 81042ba:	b90b      	cbnz	r3, 81042c0 <__swsetup_r+0x14>
 81042bc:	f7fe f978 	bl	81025b0 <__sinit>
 81042c0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 81042c4:	0719      	lsls	r1, r3, #28
 81042c6:	d422      	bmi.n	810430e <__swsetup_r+0x62>
 81042c8:	06da      	lsls	r2, r3, #27
 81042ca:	d407      	bmi.n	81042dc <__swsetup_r+0x30>
 81042cc:	2209      	movs	r2, #9
 81042ce:	602a      	str	r2, [r5, #0]
 81042d0:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 81042d4:	81a3      	strh	r3, [r4, #12]
 81042d6:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 81042da:	e033      	b.n	8104344 <__swsetup_r+0x98>
 81042dc:	0758      	lsls	r0, r3, #29
 81042de:	d512      	bpl.n	8104306 <__swsetup_r+0x5a>
 81042e0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 81042e2:	b141      	cbz	r1, 81042f6 <__swsetup_r+0x4a>
 81042e4:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 81042e8:	4299      	cmp	r1, r3
 81042ea:	d002      	beq.n	81042f2 <__swsetup_r+0x46>
 81042ec:	4628      	mov	r0, r5
 81042ee:	f7ff f8a7 	bl	8103440 <_free_r>
 81042f2:	2300      	movs	r3, #0
 81042f4:	6363      	str	r3, [r4, #52]	@ 0x34
 81042f6:	89a3      	ldrh	r3, [r4, #12]
 81042f8:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 81042fc:	81a3      	strh	r3, [r4, #12]
 81042fe:	2300      	movs	r3, #0
 8104300:	6063      	str	r3, [r4, #4]
 8104302:	6923      	ldr	r3, [r4, #16]
 8104304:	6023      	str	r3, [r4, #0]
 8104306:	89a3      	ldrh	r3, [r4, #12]
 8104308:	f043 0308 	orr.w	r3, r3, #8
 810430c:	81a3      	strh	r3, [r4, #12]
 810430e:	6923      	ldr	r3, [r4, #16]
 8104310:	b94b      	cbnz	r3, 8104326 <__swsetup_r+0x7a>
 8104312:	89a3      	ldrh	r3, [r4, #12]
 8104314:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8104318:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 810431c:	d003      	beq.n	8104326 <__swsetup_r+0x7a>
 810431e:	4621      	mov	r1, r4
 8104320:	4628      	mov	r0, r5
 8104322:	f000 f883 	bl	810442c <__smakebuf_r>
 8104326:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 810432a:	f013 0201 	ands.w	r2, r3, #1
 810432e:	d00a      	beq.n	8104346 <__swsetup_r+0x9a>
 8104330:	2200      	movs	r2, #0
 8104332:	60a2      	str	r2, [r4, #8]
 8104334:	6962      	ldr	r2, [r4, #20]
 8104336:	4252      	negs	r2, r2
 8104338:	61a2      	str	r2, [r4, #24]
 810433a:	6922      	ldr	r2, [r4, #16]
 810433c:	b942      	cbnz	r2, 8104350 <__swsetup_r+0xa4>
 810433e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8104342:	d1c5      	bne.n	81042d0 <__swsetup_r+0x24>
 8104344:	bd38      	pop	{r3, r4, r5, pc}
 8104346:	0799      	lsls	r1, r3, #30
 8104348:	bf58      	it	pl
 810434a:	6962      	ldrpl	r2, [r4, #20]
 810434c:	60a2      	str	r2, [r4, #8]
 810434e:	e7f4      	b.n	810433a <__swsetup_r+0x8e>
 8104350:	2000      	movs	r0, #0
 8104352:	e7f7      	b.n	8104344 <__swsetup_r+0x98>
 8104354:	1000001c 	.word	0x1000001c

08104358 <_raise_r>:
 8104358:	291f      	cmp	r1, #31
 810435a:	b538      	push	{r3, r4, r5, lr}
 810435c:	4605      	mov	r5, r0
 810435e:	460c      	mov	r4, r1
 8104360:	d904      	bls.n	810436c <_raise_r+0x14>
 8104362:	2316      	movs	r3, #22
 8104364:	6003      	str	r3, [r0, #0]
 8104366:	f04f 30ff 	mov.w	r0, #4294967295	@ 0xffffffff
 810436a:	bd38      	pop	{r3, r4, r5, pc}
 810436c:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 810436e:	b112      	cbz	r2, 8104376 <_raise_r+0x1e>
 8104370:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8104374:	b94b      	cbnz	r3, 810438a <_raise_r+0x32>
 8104376:	4628      	mov	r0, r5
 8104378:	f000 f830 	bl	81043dc <_getpid_r>
 810437c:	4622      	mov	r2, r4
 810437e:	4601      	mov	r1, r0
 8104380:	4628      	mov	r0, r5
 8104382:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8104386:	f000 b817 	b.w	81043b8 <_kill_r>
 810438a:	2b01      	cmp	r3, #1
 810438c:	d00a      	beq.n	81043a4 <_raise_r+0x4c>
 810438e:	1c59      	adds	r1, r3, #1
 8104390:	d103      	bne.n	810439a <_raise_r+0x42>
 8104392:	2316      	movs	r3, #22
 8104394:	6003      	str	r3, [r0, #0]
 8104396:	2001      	movs	r0, #1
 8104398:	e7e7      	b.n	810436a <_raise_r+0x12>
 810439a:	2100      	movs	r1, #0
 810439c:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 81043a0:	4620      	mov	r0, r4
 81043a2:	4798      	blx	r3
 81043a4:	2000      	movs	r0, #0
 81043a6:	e7e0      	b.n	810436a <_raise_r+0x12>

081043a8 <raise>:
 81043a8:	4b02      	ldr	r3, [pc, #8]	@ (81043b4 <raise+0xc>)
 81043aa:	4601      	mov	r1, r0
 81043ac:	6818      	ldr	r0, [r3, #0]
 81043ae:	f7ff bfd3 	b.w	8104358 <_raise_r>
 81043b2:	bf00      	nop
 81043b4:	1000001c 	.word	0x1000001c

081043b8 <_kill_r>:
 81043b8:	b538      	push	{r3, r4, r5, lr}
 81043ba:	4d07      	ldr	r5, [pc, #28]	@ (81043d8 <_kill_r+0x20>)
 81043bc:	2300      	movs	r3, #0
 81043be:	4604      	mov	r4, r0
 81043c0:	4608      	mov	r0, r1
 81043c2:	4611      	mov	r1, r2
 81043c4:	602b      	str	r3, [r5, #0]
 81043c6:	f7fc fd5e 	bl	8100e86 <_kill>
 81043ca:	1c43      	adds	r3, r0, #1
 81043cc:	d102      	bne.n	81043d4 <_kill_r+0x1c>
 81043ce:	682b      	ldr	r3, [r5, #0]
 81043d0:	b103      	cbz	r3, 81043d4 <_kill_r+0x1c>
 81043d2:	6023      	str	r3, [r4, #0]
 81043d4:	bd38      	pop	{r3, r4, r5, pc}
 81043d6:	bf00      	nop
 81043d8:	10000338 	.word	0x10000338

081043dc <_getpid_r>:
 81043dc:	f7fc bd4b 	b.w	8100e76 <_getpid>

081043e0 <__swhatbuf_r>:
 81043e0:	b570      	push	{r4, r5, r6, lr}
 81043e2:	460c      	mov	r4, r1
 81043e4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 81043e8:	2900      	cmp	r1, #0
 81043ea:	b096      	sub	sp, #88	@ 0x58
 81043ec:	4615      	mov	r5, r2
 81043ee:	461e      	mov	r6, r3
 81043f0:	da0d      	bge.n	810440e <__swhatbuf_r+0x2e>
 81043f2:	89a3      	ldrh	r3, [r4, #12]
 81043f4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 81043f8:	f04f 0100 	mov.w	r1, #0
 81043fc:	bf14      	ite	ne
 81043fe:	2340      	movne	r3, #64	@ 0x40
 8104400:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8104404:	2000      	movs	r0, #0
 8104406:	6031      	str	r1, [r6, #0]
 8104408:	602b      	str	r3, [r5, #0]
 810440a:	b016      	add	sp, #88	@ 0x58
 810440c:	bd70      	pop	{r4, r5, r6, pc}
 810440e:	466a      	mov	r2, sp
 8104410:	f000 f848 	bl	81044a4 <_fstat_r>
 8104414:	2800      	cmp	r0, #0
 8104416:	dbec      	blt.n	81043f2 <__swhatbuf_r+0x12>
 8104418:	9901      	ldr	r1, [sp, #4]
 810441a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 810441e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8104422:	4259      	negs	r1, r3
 8104424:	4159      	adcs	r1, r3
 8104426:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 810442a:	e7eb      	b.n	8104404 <__swhatbuf_r+0x24>

0810442c <__smakebuf_r>:
 810442c:	898b      	ldrh	r3, [r1, #12]
 810442e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8104430:	079d      	lsls	r5, r3, #30
 8104432:	4606      	mov	r6, r0
 8104434:	460c      	mov	r4, r1
 8104436:	d507      	bpl.n	8104448 <__smakebuf_r+0x1c>
 8104438:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 810443c:	6023      	str	r3, [r4, #0]
 810443e:	6123      	str	r3, [r4, #16]
 8104440:	2301      	movs	r3, #1
 8104442:	6163      	str	r3, [r4, #20]
 8104444:	b003      	add	sp, #12
 8104446:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8104448:	ab01      	add	r3, sp, #4
 810444a:	466a      	mov	r2, sp
 810444c:	f7ff ffc8 	bl	81043e0 <__swhatbuf_r>
 8104450:	9f00      	ldr	r7, [sp, #0]
 8104452:	4605      	mov	r5, r0
 8104454:	4639      	mov	r1, r7
 8104456:	4630      	mov	r0, r6
 8104458:	f7ff f866 	bl	8103528 <_malloc_r>
 810445c:	b948      	cbnz	r0, 8104472 <__smakebuf_r+0x46>
 810445e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8104462:	059a      	lsls	r2, r3, #22
 8104464:	d4ee      	bmi.n	8104444 <__smakebuf_r+0x18>
 8104466:	f023 0303 	bic.w	r3, r3, #3
 810446a:	f043 0302 	orr.w	r3, r3, #2
 810446e:	81a3      	strh	r3, [r4, #12]
 8104470:	e7e2      	b.n	8104438 <__smakebuf_r+0xc>
 8104472:	89a3      	ldrh	r3, [r4, #12]
 8104474:	6020      	str	r0, [r4, #0]
 8104476:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 810447a:	81a3      	strh	r3, [r4, #12]
 810447c:	9b01      	ldr	r3, [sp, #4]
 810447e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8104482:	b15b      	cbz	r3, 810449c <__smakebuf_r+0x70>
 8104484:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8104488:	4630      	mov	r0, r6
 810448a:	f000 f81d 	bl	81044c8 <_isatty_r>
 810448e:	b128      	cbz	r0, 810449c <__smakebuf_r+0x70>
 8104490:	89a3      	ldrh	r3, [r4, #12]
 8104492:	f023 0303 	bic.w	r3, r3, #3
 8104496:	f043 0301 	orr.w	r3, r3, #1
 810449a:	81a3      	strh	r3, [r4, #12]
 810449c:	89a3      	ldrh	r3, [r4, #12]
 810449e:	431d      	orrs	r5, r3
 81044a0:	81a5      	strh	r5, [r4, #12]
 81044a2:	e7cf      	b.n	8104444 <__smakebuf_r+0x18>

081044a4 <_fstat_r>:
 81044a4:	b538      	push	{r3, r4, r5, lr}
 81044a6:	4d07      	ldr	r5, [pc, #28]	@ (81044c4 <_fstat_r+0x20>)
 81044a8:	2300      	movs	r3, #0
 81044aa:	4604      	mov	r4, r0
 81044ac:	4608      	mov	r0, r1
 81044ae:	4611      	mov	r1, r2
 81044b0:	602b      	str	r3, [r5, #0]
 81044b2:	f7fc fd48 	bl	8100f46 <_fstat>
 81044b6:	1c43      	adds	r3, r0, #1
 81044b8:	d102      	bne.n	81044c0 <_fstat_r+0x1c>
 81044ba:	682b      	ldr	r3, [r5, #0]
 81044bc:	b103      	cbz	r3, 81044c0 <_fstat_r+0x1c>
 81044be:	6023      	str	r3, [r4, #0]
 81044c0:	bd38      	pop	{r3, r4, r5, pc}
 81044c2:	bf00      	nop
 81044c4:	10000338 	.word	0x10000338

081044c8 <_isatty_r>:
 81044c8:	b538      	push	{r3, r4, r5, lr}
 81044ca:	4d06      	ldr	r5, [pc, #24]	@ (81044e4 <_isatty_r+0x1c>)
 81044cc:	2300      	movs	r3, #0
 81044ce:	4604      	mov	r4, r0
 81044d0:	4608      	mov	r0, r1
 81044d2:	602b      	str	r3, [r5, #0]
 81044d4:	f7fc fd47 	bl	8100f66 <_isatty>
 81044d8:	1c43      	adds	r3, r0, #1
 81044da:	d102      	bne.n	81044e2 <_isatty_r+0x1a>
 81044dc:	682b      	ldr	r3, [r5, #0]
 81044de:	b103      	cbz	r3, 81044e2 <_isatty_r+0x1a>
 81044e0:	6023      	str	r3, [r4, #0]
 81044e2:	bd38      	pop	{r3, r4, r5, pc}
 81044e4:	10000338 	.word	0x10000338

081044e8 <_init>:
 81044e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 81044ea:	bf00      	nop
 81044ec:	bcf8      	pop	{r3, r4, r5, r6, r7}
 81044ee:	bc08      	pop	{r3}
 81044f0:	469e      	mov	lr, r3
 81044f2:	4770      	bx	lr

081044f4 <_fini>:
 81044f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 81044f6:	bf00      	nop
 81044f8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 81044fa:	bc08      	pop	{r3}
 81044fc:	469e      	mov	lr, r3
 81044fe:	4770      	bx	lr
